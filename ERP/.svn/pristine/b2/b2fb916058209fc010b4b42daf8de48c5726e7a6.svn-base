@using MCC.Models;
@{
    ViewBag.Title = Html.Raw(Resources.Global._user_mgnt);
    bool all = ViewBag.accessDetail != null ? ViewBag.accessDetail.access["all"] : false;
    bool view = ViewBag.accessDetail != null ? ViewBag.accessDetail.access["view"] : false;
    bool update = ViewBag.accessDetail != null ? ViewBag.accessDetail.access["update"] : false;
    bool create = ViewBag.accessDetail != null ? ViewBag.accessDetail.access["create"] : false;
    bool delete = ViewBag.accessDetail != null ? ViewBag.accessDetail.access["delete"] : false;
    bool export = ViewBag.accessDetail != null ? ViewBag.accessDetail.access["export"] : false;
    bool resetpassword = ViewBag.accessDetail != null ? ViewBag.accessDetail.access["reset password"] : false;
}
@{
    var newData = new tw_User();
    newData.active = true;
}

<style>
    .k-pager-wrap {
        background: none;
        border: none;
        box-shadow: none;
        padding-top: 10px;
    }

    .todo-tasklist-item.selected {
        background-color: #D2EDF3;
    }

    .ms-container {
        width: auto;
    }

        .ms-container .ms-list {
            height: 400px;
        }

    .AccessRightsMobileBootbox .modal-dialog {
        width: 90%;
    }
</style>
<div class="row">
    <div class="col-md-5">
        <script type="text/x-kendo-tmpl" id="template">
            <div class="todo-tasklist-item #=active == true ? 'todo-tasklist-item-border-green' : 'todo-tasklist-item-border-red'# todo-tasklist-item_#=id#" style="cursor:default;">
                <div class="col-md-1" style="padding-left: 0; text-align: center;">
                    #if(imagesSize){#
                    <img class="todo-userpic img-responsive" src="#=imagesSize.face#" style="display:inline;">
                    #}else if(gender == null || gender == 'unknown'){#
                    <img class="todo-userpic img-responsive" src="@Url.Content("~/Content/images/unknown.png")" style="display:inline;">
                    #}else{#
                    <img class="todo-userpic img-responsive" src="#=gender== 'male' ? '@Url.Content("~/Content/images/male.png")' : '@Url.Content("~/Content/images/female.png")'#" style="display:inline;">
                    #}#
                </div>
                <div class="col-md-10" style="padding-left: 0;">
                    <span class="item-status pull-right">
                        <a onclick="edit(this)" class="todo-username-btn btn btn-circle btn-default btn-sm"><i class="fa fa-eye"></i> @Html.Raw(Resources.Global._detail)</a>
                    </span>
                    <div class="todo-tasklist-item-title" style="padding-bottom:2px;">
                        #=fullName#
                        <span style="font-weight: 300; font-size: 13px; color: \\#217ebd; ">| #=name#</span>
                    </div>
                    <div class="todo-tasklist-item-text">
                        @*#if(active){#
                            <span class="badge badge-empty badge-success"></span> @Html.Raw(Resources.Global._active)
                            #}else{#
                            <span class="badge badge-empty badge-danger"></span> @Html.Raw(Resources.Global._inactive)
                            #}# -*@
                        @Html.Raw(Resources.Global._gender): #=gender ? gender : 'N/A'# - @Html.Raw(Resources.Global._birthday): #=birthday ? kendo.toString(birthday,'dd/MM/yyyy') : 'N/A'#
                    </div>
                    <div class="todo-tasklist-item-text">
                        #=phone# - <a href="mailto:#=email#">#=email#</a>
                    </div>
                </div>
            </div>
        </script>
        <div class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption">
                    <span class="caption-subject bold uppercase">@Html.Raw(Resources.Global._user_Caps)</span>
                </div>
                <div class="inputs">
                    <div class="portlet-input input-inline input-small ">
                        <div class="input-icon right">
                            <i class="icon-magnifier"></i>
                            <input type="text" id="descriptionF" class="form-control form-control-solid input-circle" onkeyup="filter()" placeholder="@Html.Raw(Resources.Global._search)...">
                        </div>
                    </div>
                    <div class="btn-group">
                        <a class="btn btn-circle blue btn-sm" onclick="showMoreFilter(this)">
                            <span class="moreFilterText">@Html.Raw(Resources.Global._more)</span>
                            <i class="fa fa-filter"></i>
                        </a>
                    </div>
                </div>

                @if (all || export)
                {
                    <div class="actions" style="margin-right:10px;">
                        <div class="btn-group">
                            <a class="btn green btn-outline btn-circle btn-sm dropdown-toggle" href="javascript:;" data-toggle="dropdown" aria-expanded="false">
                                @Html.Raw(Resources.Global._actions)
                                <i class="fa fa-angle-down"></i>
                            </a>
                            <ul class="dropdown-menu pull-right">
                                <li>
                                    <a href="@Url.Content("~/UserManagement/ExportData?filter=~&sort=~")" class="export">
                                        <i class="fa fa-cloud-download"></i> @Html.Raw(Resources.Global._export_data)
                                    </a>
                                </li>

                            </ul>
                        </div>
                    </div>
                }
            </div>
            <div class="portlet-body">
                <div class="row filterMore" style="display: none; padding-bottom: 20px;margin-bottom:10px">
                    <div class="col-md-12">
                        <form role="form" class="filterForm">
                            <div class="row" style="margin-bottom:5px;">
                                <div class="col-md-12">
                                    <label>@Html.Raw(Resources.Global._status)</label>
                                    @(Html.Kendo().DropDownList()
.Name("statusF")
.DataTextField("Text")
.DataValueField("Value")
.HtmlAttributes(new { @style = "width:100%;" })
.OptionLabel(Html.Raw(Resources.Global._status).ToString())
.BindTo(new List<SelectListItem>() {
                                          new SelectListItem() {
                                              Text = Html.Raw(Resources.Global._active).ToString(),
                                              Value = "1"
                                          },
                                          new SelectListItem() {
                                              Text = Html.Raw(Resources.Global._inactive).ToString(),
                                              Value = "0"
                                          }
})
.Value("1")
                                    )
                                </div>
                            </div>
                            <div class="row" style="margin-bottom:5px;">
                                <div class="col-md-12 text-right">
                                    <div class="btn-group">
                                        <a class="btn btn-circle red btn-sm clearFilter" onclick="clearFilter()">
                                            <span class="moreFilterText">@Html.Raw(Resources.Global._clear)</span>
                                            <i class="fa fa-close"></i>
                                        </a>
                                        <a class="btn btn-circle btn-sm green" onclick="filter()" style="margin-left:5px;"><i class="fa fa-search"></i> @Html.Raw(Resources.Global._search)</a>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
                <div class="todo-tasklist">
                    @(Html.Kendo().ListView<MCC.Models.tw_User>()
                    .Name("listView")
                    .TagName("div")
                    .HtmlAttributes(new { @class = "row general-item-list", @style = "border-style:none;box-shadow:none;" })
                    .ClientTemplateId("template")
                    .DataSource(dataSource =>
                    {
   
                        dataSource.Read(read => read.Action("Read", "UserManagement"));
                        dataSource.PageSize(10).Sort(s => s.Add(a => a.id).Descending());//.Filter(f => { f.Add(a => a.active).IsEqualTo(true); });
                    })
                    .Events(events => { events.DataBound("onDatabound"); })
                    .Pageable()
                    )
                </div>
            </div>
        </div>

    </div>
    <div class="col-md-7 formEdit">

    </div>
</div>
<script type="text/x-kendo-template" id="EditTemplate">
    <form action="@Url.Content("~/UserManagement/CreateUpdate")" method="post" id="EditForm" novalidate="novalidate">
        <div class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption">
                    <i class="icon-pencil"></i>
                    <span class="caption-subject bold uppercase"> @Html.Raw(Resources.Global._add_edit) @Html.Raw(Resources.Global._user)</span>
                </div>
                <div class="actions">
                    @if (all || create || update)
                    {
                        <a onclick="clearForm()" class="btn default btn-circle">@Html.Raw(Resources.Global._cancel)</a>
                    }
                    #if(id>0){#
                    @if (all || delete)
                    {
                        <a onclick="removeUser('#=id#')" class="btn red btn-circle">@Html.Raw(Resources.Global._delete)</a>
                    }
                    #}#
                    @if (all || create || update)
                    {
                        <button type="submit" class="btn blue btn-circle">@Html.Raw(Resources.Global._save)</button>
                        <a onclick="saveAndClear()" class="btn green btn-circle">@Html.Raw(Resources.Global._save_new)</a>
                    }
                </div>
            </div>
            <div class="portlet-body form ">
                <div class="tabbable-line">
                    <ul class="nav nav-tabs">
                        <li class="active">
                            <a href="\\#tab_1_1" data-toggle="tab"> @Html.Raw(Resources.Global._user_info) </a>
                        </li>
                        #if(id > 0){#
                        <li>
                            <a href="\\#tab_1_3" data-toggle="tab"> @Html.Raw(Resources.Global._groups) </a>
                        </li>
                        <li>
                            <a href="\\#tab_1_4" data-toggle="tab"> @Html.Raw(Resources.Global._user_inshowroom) </a>
                        </li>
                        #}#
                    </ul>
                    <div class="tab-content">
                        <div class="tab-pane in active" id="tab_1_1">
                            <input type="hidden" name="id" value="#=id#" />
                            <div class="portlet-body form">
                                <div class="row">
                                    @*<h3 style="margin-top: 0px; margin-left: 15px; ">Account info</h3>*@<div class="col-md-6">
                                        <div class="form-group">
                                            <label>@Html.Raw(Resources.Global._username)<span class="required"> * </span></label>
                                            <div class="input-icon right">
                                                <i class="fa"></i>
                                                #if(id > 0){#
                                                <input type="text" class="form-control input-sm" onkeyup="ChangeContent(this)" placeholder="" name="name" value="#=name!=null ? name : ''#">
                                                #}else{#
                                                <input type="text" class="form-control input-sm" onkeyup="ChangeContent(this)" placeholder="" name="name" value="#=name!=null ? name : ''#">
                                                #}#
                                            </div>
                                        </div>
                                        #if(id == 0){#
                                        <div class="form-group">
                                            <label>@Html.Raw(Resources.Global._password)<span class="required"> * </span></label>
                                            <input type="password" id="password" class="form-control input-sm" name="password" value="">
                                        </div>
                                        #}else{#
                                        <div class="form-group">
                                            <label>@Html.Raw(Resources.Global._password)</label>
                                            <div class="input-group">
                                                <input class="form-control input-sm" type="password" value="********" placeholder="password" readonly>
                                                <span class="input-group-btn">
                                                    <a id="genpassword" class="btn red-sunglo btn-sm" onclick="resetPassUser('#=name#')">
                                                        <i class="fa fa-undo"></i> @Html.Raw(Resources.Global._reset)
                                                    </a>
                                                </span>
                                            </div>
                                        </div>
                                        #}#
                                        <div class="form-group">
                                            <label>@Html.Raw(Resources.Global._fullname)<span class="required"> * </span></label>
                                            <div class="input-icon right">
                                                <i class="fa"></i>
                                                <input type="text" name="fullName" class="form-control input-sm" placeholder="Nguyen Van A" value="#=fullName!=null ? fullName : ''#">
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label>@Html.Raw(Resources.Global._gender)</label>
                                            <div class="clearfix">
                                                <div class="btn-group btn-group-circle" data-toggle="buttons">
                                                    <label class="btn green btn-sm btn-outline #=gender=='male'? 'active' : ''#">
                                                        #if(gender=='male'){#
                                                        <input type="radio" name="gender" value="male" class="toggle" checked> @Html.Raw(Resources.Global._male)
                                                        #}else{#
                                                        <input type="radio" name="gender" value="male" class="toggle"> @Html.Raw(Resources.Global._male)
                                                        #}#

                                                    </label>
                                                    <label class="btn green btn-sm btn-outline #=gender=='female'? 'active' : ''#">
                                                        #if(gender=='female'){#
                                                        <input type="radio" name="gender" value="female" class="toggle" checked> @Html.Raw(Resources.Global._female)
                                                        #}else{#
                                                        <input type="radio" name="gender" value="female" class="toggle"> @Html.Raw(Resources.Global._female)
                                                        #}#
                                                    </label>
                                                    <label class="btn green btn-sm btn-outline #=gender=='unknown'? 'active' : ''#">
                                                        #if(gender=='unknown'){#
                                                        <input type="radio" name="gender" value="unknown" class="toggle" checked> @Html.Raw(Resources.Global._unknown)
                                                        #}else{#
                                                        <input type="radio" name="gender" value="unknown" class="toggle"> @Html.Raw(Resources.Global._unknown)
                                                        #}#
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label>@Html.Raw(Resources.Global._birthday)</label>
                                            <div class="input-group input-medium date date-picker" data-date-format="yyyy/mm/dd">
                                                <input type="text" class="form-control" placeholder="1990/01/01" name="birthday" value="#=birthday!=null ? kendo.toString(kendo.parseDate(birthday),'yyyy/MM/dd') : ''#" readonly>
                                                <span class="input-group-btn">
                                                    <button class="btn default" type="button">
                                                        <i class="fa fa-calendar"></i>
                                                    </button>
                                                </span>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @*<h3>Contact info</h3>*@
                                            <label>@Html.Raw(Resources.Global._phone)<span class="required"> * </span></label>
                                            <div class="input-icon right">
                                                <i class="fa"></i>
                                                <input type="text" class="form-control input-sm mask_phone" placeholder="0909xxxxxx" name="phone" value="#=phone!=null ? phone : ''#" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label>@Html.Raw(Resources.Global._email)<span class="required"> * </span></label>
                                            <div class="input-icon right">
                                                <i class="fa"></i>
                                                #if(id > 0){#
                                                <input type="text" name="email" class="form-control input-sm" placeholder="youremail@domain.com" value="#=email!=null ? email : ''#">
                                                #}else{#
                                                <input type="text" name="email" class="form-control input-sm" placeholder="youremail@domain.com" value="#=email!=null ? email : ''#">
                                                #}#
                                            </div>
                                        </div>

                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>@Html.Raw(Resources.Global._profile_picture)</label>
                                            <div class="clearfix">
                                                <div class="fileinput fileinput-new" data-provides="fileinput">
                                                    <div class="input-group">
                                                        <div class="fileinput fileinput-new" data-provides="fileinput">
                                                            <div class="fileinput-new thumbnail" style="width: 200px; ">
                                                                <img src="#=imagesPublicId ? imagesPublicId.face : 'http://www.placehold.it/200x150/EFEFEF/AAAAAA&amp;text=no+image'#" alt="" />
                                                            </div>
                                                            <div class="fileinput-preview fileinput-exists thumbnail" style="max-width: 200px; "> </div>
                                                            <div>
                                                                <span class="btn default btn-circle btn-file btn-sm">
                                                                    <span class="fileinput-new"> @Html.Raw(Resources.Global._select_image) </span>
                                                                    <span class="fileinput-exists"> @Html.Raw(Resources.Global._change) </span>
                                                                    <input type="file" name="file">
                                                                </span>
                                                                <a href="javascript:;" class="btn red fileinput-exists btn-sm btn-circle" data-dismiss="fileinput"> @Html.Raw(Resources.Global._remove) </a>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label>@Html.Raw(Resources.Global._address)</label>
                                            <input type="text" name="address" class="form-control input-sm" placeholder="" value="#=address!=null ? address : ''#">

                                        </div>
                                        <div class="form-group">
                                            <label>@Html.Raw(Resources.Global._country)</label>
                                            @(Html.Kendo().DropDownList()
.Name("country")
.HtmlAttributes(new { style = "width:100%" })
.OptionLabel(Resources.Global._country + "...")
.DataTextField("Name")
.DataValueField("Id")
.Value("#=country!= 0 ? country:'242'#")
.Filter("contains")
.DataSource(source =>
{
    source.Read(read =>
    {
        read.Action("GetCountry", "CustomData");
    }).ServerFiltering(true);
}).ToClientTemplate()
                                            )
                                        </div>
                                        <div class="form-group">
                                            <label>@Html.Raw(Resources.Global._city_province)</label>
                                            @(Html.Kendo().DropDownList()
.Name("city")
.HtmlAttributes(new { style = "width:100%" })
.OptionLabel(Html.Raw(Resources.Global._city_province) + "...")
.DataTextField("Name")
.DataValueField("Id")
.Value("#=city!=null ? city:''#")
.DataSource(source =>
{
    source.Read(read =>
    {
        read.Action("GetCity", "CustomData")
        .Data("filterCity");
    })
    .ServerFiltering(true);
})
.Enable(false)
.AutoBind(false)
.CascadeFrom("country").ToClientTemplate()
                                            )
                                        </div>
                                        <div class="form-group">
                                            <label>@Html.Raw(Resources.Global._district)</label>
                                            @(Html.Kendo().DropDownList()
.Name("district")
.HtmlAttributes(new { style = "width:100%" })
.OptionLabel(Html.Raw(Resources.Global._district) + "...")
.DataTextField("Name")
.DataValueField("Id")
.Value("#=district!=null ? district:''#")
.DataSource(source =>
{
    source.Read(read =>
    {
        read.Action("GetDistrict", "CustomData")
        .Data("filterDistrict");
    })
    .ServerFiltering(true);
})
.Enable(false)
.AutoBind(false)
.CascadeFrom("city").ToClientTemplate()
                                            )
                                        </div>
                                    </div>
                                </div>
                                <h4 style="font-size: 15px; margin-bottom: 20px;">@Html.Raw(Resources.Global._more_info)</h4>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label>@Html.Raw(Resources.Global._home_page)</label>
                                            <select name="homePage" class="form-control input-sm">
                                                @foreach (var item in (List<string>)ViewData["menuView"])
                                                {
                                                    <option value="@item">@item</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="clearfix">
                                        <div class="btn-group btn-group-circle" data-toggle="buttons">
                                            <label class="btn red btn-sm btn-outline #=!active ? 'active' : ''#">
                                                #if(active==false){#
                                                <input type="radio" name="active" value="false" class="toggle" checked> @Html.Raw(Resources.Global._inactive)
                                                #}else{#
                                                <input type="radio" name="active" value="false" class="toggle"> @Html.Raw(Resources.Global._inactive)
                                                #}#
                                            </label>
                                            <label class="btn green btn-sm btn-outline #=active ? 'active' : ''#">
                                                #if(active==true){#
                                                <input type="radio" name="active" value="true" class="toggle" checked> @Html.Raw(Resources.Global._active)
                                                #}else{#
                                                <input type="radio" name="active" value="true" class="toggle"> @Html.Raw(Resources.Global._active)
                                                #}#
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        #if(id>0){#
                        <div class="tab-pane" id="tab_1_3">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <h4 style="font-size: 15px; margin-bottom: 20px;">@Html.Raw(Resources.Global._add) <b>#=name#</b> @Html.Raw(Resources.Global._to_group)</h4>
                                        <div>
                                            <select multiple="multiple" class="multi-select" id="multi_selectGroup" name="groups">
                                                @foreach (var item in ViewBag.listGroup)
                                                {
                                                    <option value="@item.id">@Html.Raw(item.name)</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane" id="tab_1_4">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <h4 style="font-size: 15px; margin-bottom: 20px;">@Html.Raw(Resources.Global._add) <b>#=name#</b> @Html.Raw(Resources.Global._user_to_showroom)</h4>
                                        <div>
                                            <select multiple="multiple" class="multi-select" id="multi_selectShowroom" name="showrooms">
                                                @foreach (var item in ViewBag.listShowroom)
                                                {
                                                    <option value="@item.id">@Html.Raw(item.name)</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        #}#
                    </div>
                </div>
                <div class="form-actions right">
                    @if (all || create || update)
                    {
                        <a onclick="clearForm()" class="btn default btn-circle">@Html.Raw(Resources.Global._cancel)</a>
                    }
                    #if(id>0){#
                    @if (all || delete)
                    {
                        <a onclick="removeUser('#=id#')" class="btn red btn-circle">@Html.Raw(Resources.Global._delete)</a>
                    }
                    #}#
                    @if (all || create || update)
                    {
                        <button type="submit" class="btn blue btn-circle">@Html.Raw(Resources.Global._save)</button>
                        <a onclick="saveAndClear()" class="btn green btn-circle">@Html.Raw(Resources.Global._save_new)</a>
                    }
                </div>
            </div>
        </div>
    </form>
</script>
<script type="text/x-kendo-template" id="NoItemsTemplate">
    <div class="text-center" style="padding: 30px 0 20px 0;">
        <i class="fa fa-cogs" style="font-size: 72px; color: \\#e1e5ec"></i>
        <div style="font-size: 18px; margin-top: 10px;">@Html.Raw(Resources.Global._have_not) @Html.Raw(Resources.Global._user) @Html.Raw(Resources.Global._yet)</div>
        <div style="margin-top:10px;"><a onclick="clearForm()" class="btn btn-default btn-circle btn-outline btn-sm">@Html.Raw(Resources.Global._create) <i class="fa fa-arrow-right"></i></a></div>
    </div>
</script>

<script>
    function checkContain(array, value) {
        var x = !!_.where(array, { id: value }).length;
        return x;
    }
    function ChangeContent(e) {
        var content = $(e).val();
        $(this).val(locdau(content));
    }
    function locdau(str) {
        //code by Minit - www.canthoit.info - 13-05-2009
        str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, "a");
        str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, "e");
        str = str.replace(/ì|í|ị|ỉ|ĩ/g, "i");
        str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, "o");
        str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, "u");
        str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, "y");
        str = str.replace(/đ/g, "d");

        str = str.replace(/À|Á|Ạ|Ả|Ã|Â|Ầ|Ấ|Ậ|Ẩ|Ẫ|Ă|Ằ|Ắ|Ặ|Ẳ|Ẵ/g, "A");
        str = str.replace(/È|É|Ẹ|Ẻ|Ẽ|Ê|Ề|Ế|Ệ|Ể|Ễ/g, "E");
        str = str.replace(/Ì|Í|Ị|Ỉ|Ĩ/g, "I");
        str = str.replace(/Ò|Ó|Ọ|Ỏ|Õ|Ô|Ồ|Ố|Ộ|Ổ|Ỗ|Ơ|Ờ|Ớ|Ợ|Ở|Ỡ/g, "O");
        str = str.replace(/Ù|Ú|Ụ|Ủ|Ũ|Ư|Ừ|Ứ|Ự|Ử|Ữ/g, "U");
        str = str.replace(/Ỳ|Ý|Ỵ|Ỷ|Ỹ/g, "Y");
        str = str.replace(/Đ/g, "D");

        str = str.replace(/!|\$|%|\^|\*|\(|\)|\+|\=|\<|\>|\?|,|\.|\:| |\"|\&|\#|\[|\]|~/g, "");
        str = str.replace(/-+-/g, "-"); //thay thế 2- thành 1-
        str = str.replace(/^\-+|\-+$/g, "");//cắt bỏ ký tự - ở đầu và cuối chuỗi
        return str.toLowerCase();
    }
    function cardSelected(e) {
        $(".todo-tasklist-item").removeClass("selected");
        $(e).closest(".todo-tasklist-item").addClass("selected");
    }
    function removeUser(id) {
        bootbox.dialog({
            message: "@Html.Raw(Resources.Global._are_your_sure)", title: "@Html.Raw(Resources.Global._delete_agency)",
            buttons:
                {
                    //success:
                    //    { label: "Success!", className: "green", callback: function () { alert("great success") } },
                    danger: { label: "@Html.Raw(Resources.Global._close)", className: "btn default btn-circle btn-sm", callback: function () { } },
                    main: { label: "@Html.Raw(Resources.Global._confirm)", className: "btn green btn-circle btn-sm", callback: function () { } }
                }
        })
    }
    function resetPassUser(name) {
        bootbox.dialog({
            message: "@Html.Raw(Resources.Global._are_your_sure)", title: "@Html.Raw(Resources.Global._reset_password)",
            buttons:
                {
                    //success:
                    //    { label: "Success!", className: "green", callback: function () { alert("great success") } },
                    danger: { label: "@Html.Raw(Resources.Global._close)", className: "btn default btn-circle btn-sm", callback: function () { } },
                    main: {
                        label: "@Html.Raw(Resources.Global._confirm)", className: "btn green btn-circle btn-sm", callback: function () {
                            App.blockUI({ boxed: !0, message: '@Html.Raw(Resources.Global._just_amoment)...' });
                            $.post(r + "/UserManagement/ResetPass", { username: name }, function (data) {
                                if (data.success) {
                                    toastr.success("", "Reset password processing");
                                } else {
                                    toastr.error("", data.error);
                                }
                                App.unblockUI();
                            });
                        }
                    }
                }
        })
    }
    var reset = false;
    function saveAndClear() {
        reset = true;
        $('#EditForm').submit();
    }
    function clearForm() {
        loadForm(JSON.parse('@Html.Raw(Json.Encode(newData))'));
    }
    function getTextById(datas, key, value, requestField) {
        var response = _.filter(JSON.parse(datas), function (data) {
            return data[key] == value;
        });
        return response[0] ? response[0][requestField] : "";
    }
    function edit(e) {
        var data = $("#listView").data("kendoListView").dataItem($(e).closest(".todo-tasklist-item"))
        loadForm(data);
        loadValidate();
        cardSelected(e);
        if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
            $("html, body").animate({
                scrollTop: $(".formEdit").offset().top
            }, 600);
        } else {
            $("html, body").animate({
                scrollTop: $(".formEdit").offset().top - 70
            }, 600);
        }
    }
    function loadForm(data) {
        var EditTemplate = kendo.template($("#EditTemplate").html());
        $(".formEdit").html(EditTemplate(data));
        loadValidate();
        $(".date-picker").datepicker({ rtl: App.isRTL(), orientation: "left", autoclose: !0 })
        $("#multi_selectGroup").multiSelect();
        $("#multi_selectShowroom").multiSelect();
        if (data.id > 0) {
            var group = $.map(data.listGroup, function (value, index) {
                return [value];
            });
            var showroom = $.map(data.listShowroom, function (value, index) {
                return [value];
            });
            $("#multi_selectGroup").val(group);
            $("#multi_selectGroup").multiSelect('refresh');
            $("#multi_selectShowroom").val(showroom);
            $("#multi_selectShowroom").multiSelect('refresh');

            $("#EditForm select[name=homePage]").val(data.homePage);
        }
    }
    loadForm(JSON.parse('@Html.Raw(Json.Encode(newData))'));

    $(".mask_phone").inputmask({ mask: "9", repeat: 11, greedy: !1 });
    function filterCity() {
        return {
            Id: $("#country").val()
        };
    }

    function filterDistrict() {
        return {
            Id: $("#city").val()
        };
    }

    function loadValidate() {
        var e = $("#EditForm"),
        r = $(".alert-danger", e),
        i = $(".alert-success", e);
        e.validate(
            {
                errorElement: "span",
                errorClass: "help-block help-block-error",
                focusInvalid: !1,
                ignore: "",
                rules:
                    {
                        name: { required: !0 },
                        fullName: { required: !0 },
                        email: { required: !0, email: !0 },
                        phone: { required: !0 },
                    },
                invalidHandler: function (e, t) {
                    i.hide(), r.show(), App.scrollTo(r, -200)
                },
                errorPlacement: function (e, r) {
                    var i = $(r).parent(".input-icon").children("i");
                    i.removeClass("fa-check").addClass("fa-warning"),
                    i.attr("data-original-title",
                        e.text()).tooltip({ container: "body" })
                },
                highlight: function (e) {
                    $(e).closest(".form-group").removeClass("has-success").addClass("has-error")
                },
                unhighlight: function (e) {
                },
                success: function (e, r) {
                    var i = $(r).parent(".input-icon").children("i");
                    $(r).closest(".form-group").removeClass("has-error").addClass("has-success"),
                    i.removeClass("fa-warning").addClass("fa-check")
                },
                submitHandler: function (e) {
                    i.show(); r.hide();
                    //e[0].submit()
                    $(e).ajaxSubmit({
                        beforeSend: function () {
                            App.blockUI({ boxed: !0, message: '@Html.Raw(Resources.Global._just_amoment)...' });
                        },
                        success: function (data) {
                            if (data.success) {
                                toastr.success('', '@Html.Raw(Resources.Global._save_successfully)')
                                $("#listView").data("kendoListView").dataSource.read();
                                if (reset) {
                                    reset = false;
                                    loadForm(JSON.parse('@Html.Raw(Json.Encode(newData))'));
                                } else {
                                    loadForm(data.data);
                                }
                                setTimeout(function () { $(".todo-tasklist-item_" + data.data.id).addClass("selected") }, 1000);
                            }
                            else {
                                toastr.error('', data.error)
                            }
                        },
                        complete: function (xhr) {
                            App.unblockUI();
                        }
                    });
                }
            });

    }

    function showMoreFilter(e) {
        if ($(".filterMore").css("display") == "none") {
            $(".filterMore").css("display", "block");
            $(".clearFilter").css("display", "block");
            $(e).find(".moreFilterText").html("@Html.Raw(Resources.Global._simple)");
        } else {
            $(".filterMore").css("display", "none");
            $(".clearFilter").css("display", "none");
            $(e).find(".moreFilterText").html("@Html.Raw(Resources.Global._more)");
        }
    }

    function clearFilter() {
        $(".filterForm")[0].reset();
        filter();
    }

    function filter() {
        listView = $("#listView").data("kendoListView");

        var seachText = $("#descriptionF").val();
        //var agencyF = $("#agencyF").data("kendoMultiSelect").value();
        //var investorF = $("#investorF").data("kendoMultiSelect").value();
        var statusF = $("#statusF").val();

        var filter = { logic: "and", filters: [] };
        var filterDesc = { logic: "or", filters: [] };
        //var filterAgencyF = { logic: "or", filters: [] };
        //var filterInvestorF = { logic: "or", filters: [] };

        if (seachText) {
            filterDesc.filters.push({ field: "name", operator: "contains", value: seachText });
            filterDesc.filters.push({ field: "fullName", operator: "contains", value: seachText });
            filterDesc.filters.push({ field: "email", operator: "contains", value: seachText });
            filterDesc.filters.push({ field: "phone", operator: "contains", value: seachText });
            filter.filters.push(filterDesc);
        }

        if (statusF) {
            filter.filters.push({ field: "active", operator: "eq", value: statusF });
        }

        //if (agencyF && agencyF.length > 0) {
        //    for (var i = 0; i < agencyF.length; i++) {
        //        var option = agencyF[i];
        //        filterAgencyF.filters.push({ field: "listAgency", operator: "contains", value: 'id:' + option + ',' });
        //    }
        //    filter.filters.push(filterAgencyF);
        //}

        //if (investorF && investorF.length > 0) {
        //    for (var i = 0; i < investorF.length; i++) {
        //        var option = investorF[i];
        //        filterAgencyF.filters.push({ field: "listInvestor", operator: "contains", value: 'id:' + option + ',' });
        //    }
        //    filter.filters.push(filterAgencyF);
        //}

        listView.dataSource.filter(filter);
    }

    function onDatabound() {
        var listView = this;
        //// ask the parameterMap to create the request object for you
        //var requestObject = (new kendo.data.transports["aspnetmvc-server"]({ prefix: "" }))
        //.options.parameterMap({
        //    page: listView.dataSource.page(),
        //    sort: listView.dataSource.sort(),
        //    filter: listView.dataSource.filter()
        //});

        //// Get the export link as jQuery object
        //var $exportLink = $('.export');


        //// Get its 'href' attribute - the URL where it would navigate to
        //var href = $exportLink.attr('href');
        //if (href) {
        //    // Update the 'page' parameter with the listView's current page
        //    //href = href.replace(/page=([^&]*)/, 'page=' + requestObject.page || '~');

        //    // Update the 'sort' parameter with the listView's current sort descriptor
        //    href = href.replace(/sort=([^&]*)/, 'sort=' + requestObject.sort || '~');

        //    // Update the 'pageSize' parameter with the listView's current pageSize
        //    //href = href.replace(/pageSize=([^&]*)/, 'pageSize=' + listView.dataSource._pageSize);

        //    //update filter descriptor with the filters applied

        //    href = href.replace(/filter=([^&]*)/, 'filter=' + (requestObject.filter || '~'));

        //    // Update the 'href' attribute
        //    $exportLink.attr('href', href);
        //}
        if (this.dataSource.total() == 0) {
            var NoItemsTemplate = kendo.template($("#NoItemsTemplate").html());
            $(this.element).next("#listView_pager").css('display', 'none');
            $(this.element).html(NoItemsTemplate({}));
        } else {
            $(this.element).next("#listView_pager").css('display', 'block');
        }

    }
</script>

