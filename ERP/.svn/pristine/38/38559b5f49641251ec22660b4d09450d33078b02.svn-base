@model IEnumerable<ERPAPD.Models.CRM_Contract_Draff>
@{
    ViewBag.Title = "Danh sách dự thảo hợp đồng";
    bool AllowCreate = (ViewData["AllowCreate"] != null && (bool)ViewData["AllowCreate"]);
    bool AllowUpdate = (ViewData["AllowUpdate"] != null && (bool)ViewData["AllowUpdate"]);
    bool AllowDelete = (ViewData["AllowDelete"] != null && (bool)ViewData["AllowDelete"]);
    bool AllowExport = (ViewData["AllowExport"] != null && (bool)ViewData["AllowExport"]);
    
    bool viewall = (ViewData["FlagViewAll"] != null && (bool)ViewData["FlagViewAll"]);
    bool viewKT = (ViewData["KT"] != null && (bool)ViewData["KT"]);
    bool viewLeader = (ViewData["TeamLeader"] != null && (bool)ViewData["TeamLeader"]);
  
    
    var listCustomerType = ViewBag.listCustomerType;
    var lstStatus = ViewBag.listStatus as IEnumerable<ERPAPD.Models.Parameters>;
    var isKT = false; var isKD = false;
    if (ViewBag.Group.Count > 0)
    {
        foreach (var item in ViewBag.Group)
        {
            if (item.Id == 57)
            {
                isKT = true;
                break;
            }
            else if (item.Id == 50)
            {
                isKD = true;
            }
        }
    }


}
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">

<style>
    .margin-10 {
        margin-right: 10px;
    }

    .chosen-container, .text-search {
        margin-bottom: 10px;
    }

    #quicklyFilter {
        margin-bottom: 10px;
    }

    .margin-bottom-10 {
        margin-bottom: 10px;
    }

    .btncleardatetimepicker .remove-date {
        left: 145px;
    }
</style>
<div id="quicklyFilter">
    <div class="row-fluid">
        <div id="btn-count-contract_draff" class="pull-left">
            <button class="btn btn-small btn-info quick-filter" value="" id="btnAll">Tất cả (<span id="txtAll"></span>) </button>
            <button class="btn btn-small btn-info quick-filter" value="@lstStatus.ToList()[0].ParamID" id="btnDANG_SOAN"> @lstStatus.ToList()[0].Value (<span id="txt_@lstStatus.ToList()[0].ParamID"></span>) </button>
            <button class="btn btn-small btn-info quick-filter" value="@lstStatus.ToList()[1].ParamID" id="btnCHO_DUYET">@lstStatus.ToList()[1].Value (<span id="txt_@lstStatus.ToList()[1].ParamID"></span>) </button>
            <button class="btn btn-small btn-info quick-filter" value="@lstStatus.ToList()[2].ParamID" id="btnDA_DUYET">@lstStatus.ToList()[2].Value (<span id="txt_@lstStatus.ToList()[2].ParamID"></span>)</button>
            <button class="btn btn-small btn-info quick-filter" value="@lstStatus.ToList()[3].ParamID" id="btnDA_DONG_BO">@lstStatus.ToList()[3].Value (<span id="txt_@lstStatus.ToList()[3].ParamID"></span>)</button>
            <button class="btn btn-small btn-info quick-filter" value="@lstStatus.ToList()[4].ParamID" id="btnTUCHOI"> @lstStatus.ToList()[4].Value (<span id="txt_@lstStatus.ToList()[4].ParamID"></span>)</button>
            <button class="btn btn-small btn-info quick-filter" value="@lstStatus.ToList()[5].ParamID" id="btnHUYDIEUCHINH">@lstStatus.ToList()[5].Value (<span id="txt_@lstStatus.ToList()[5].ParamID"></span>)</button>
            <button class="btn btn-small btn-info quick-filter" value="@lstStatus.ToList()[6].ParamID" id="btnDA_XOA">@lstStatus.ToList()[6].Value (<span id="txt_@lstStatus.ToList()[6].ParamID"></span>)</button>
        </div>
    </div>
</div>

<div class="row-fluid">
    <div class="row-fluid">
        <div class="span2">
            <select id="listRegion" class="select" multiple data-placeholder="Vùng miền" style="width:100%">
                @foreach (var item in ViewBag.listRegion)
                {
                    <option value="@item.HierarchyID">@item.Value</option>
                }
            </select>
        </div>
        <div class="span4" id="divGroupByRegion">
            <select id="listGroup" class="select" multiple data-placeholder="Nhóm" style="width:99%">
                <option value=""></option>
                @foreach (var item in ViewBag.listTeam)
                {
                    <option value="@item.TeamID">@item.TeamName</option>
                }
            </select>
        </div>
        <div class="span3" id="emloyeebygroup">
            <select id="listStaff" class="select" multiple data-placeholder="Nhân viên" style="width:100%">
                <option value=""></option>
                @foreach (var item in ViewBag.listStaff)
                {
                    <option value="@item.RefStaffId">@item.UserName -@item.FullName </option>
                }
            </select>
        </div>
        <div class="span3">
            <select id="listApprove" class="select" multiple data-placeholder="Người duyệt" style="width:100%">
                <option value=""></option>
                @foreach (var item in ViewBag.listStaffApproved)
                {
                    <option value="@item.RefStaffId">@item.UserName -@item.FullName </option>
                }
            </select>
        </div>

    </div>

    <div class="row-fluid">
        <div class="span2">
            <input type="text" style="width:173px" id="txtcode" placeholder="Mã hợp đồng" />
        </div>
        <div class="span4">
            <input id="txtSearch" type="text" style="width: 390px" placeholder="Mã khách hàng, tên ngắn, tên pháp nhân">
        </div>
        <div class="span3">
            <select id="listCustomerType" class="select" multiple data-placeholder="Loại khách hàng" style="width:100%">
                @foreach (var item in ViewBag.listCustomerType)
                {
                    <option value="@item.Code">@item.Value</option>
                }
            </select>
        </div>
        <div class="span3">
            <select id="listCategory" class="select" multiple data-placeholder="Chọn ngành hàng" style="width:100%">
                @foreach (var item in ViewBag.listCategory)
                {
                    <option value="@item.HierarchyID">@item.Value</option>
                }
            </select>
        </div>
    </div>


    <div class="row-fluid">
        <div class="span2">
            <select id="contracttype" class="select" multiple data-placeholder="Loại hợp đồng" style="width:100%">
                @foreach (var item in ViewBag.listContractType)
                {
                    <option value="@item.ParamID">@item.Value</option>
                }
            </select>
        </div>
        <div class="span4">
            <select id="listStatus" class="select" multiple data-placeholder="Trạng thái" style="width:100%">
                @foreach (var item in ViewBag.listStatus)
                {

                    <option value="@item.ParamID">@item.Value</option>
                }
            </select>
        </div>
        <div class="span3">
            <div class="row-fluid">
                <div class="span5" style="margin-right:40px">
                    <div class="btncleardatetimepicker">
                        <input type="text" id="approveDate" style="width:150px" placeholder="Ngày duyệt" />
                        <span class="remove-date"><a onclick="delExitsDate(this)" href="javascript:void(0)"><i class="icon-remove"></i></a></span>
                    </div>
                </div>
                <div class="span5">
                    <div class="btncleardatetimepicker">
                        <input type="text" id="createdDate" style="width:150px" placeholder="Ngày tạo" />
                        <span class="remove-date"><a onclick="delExitsDate(this)" href="javascript:void(0)"><i class="icon-remove"></i></a></span>
                    </div>
                </div>
            </div>
        </div>
        <div class="span3">
            <button type="button" style="margin-left: 25px" class="btn btn-small btn-primary" onclick="setfilter(keyfilter)">@*<i class="icon-search"></i>*@ Lọc dữ liệu</button>
        </div>
    </div>
</div>
@Html.Partial("_popup")
<div class="row-fluid mn-list">
    @(Html.Kendo().Grid(Model)
    .Name("Grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.CustomerID)
                .Width(25).Filterable(false).Sortable(false).Groupable(false)
                .HeaderTemplate("<input style='text-align:center;opacity:1;' type='checkbox' id= 'checkboxcheckAll'  onclick='checkAll(this);' />")
                .ClientTemplate("<input style='text-align:center' class='checkvalue' type='checkbox' data-id= '#=CustomerID#' id='#=PKContractDraft#' status='#=TrangThai#' />")
                .HeaderHtmlAttributes(new { style = "text-align: center;" })
                .HtmlAttributes(new { style = "text-align:center;" });

        columns.Bound(p => p.PKContractDraft)
           .Title("")
           .Width(10)
           .ClientTemplate("<span class ='tooltip-success' data-rel='tooltip' data-placement='top' title ='Chỉnh sửa'> <a class='btn btn-minier   btn-default' style=' text-align:center;  width: 15px;margin-top: 5px;margin-left: 2px;' href=" + Url.Action("EditContract", "CRMContractList", new { @Id = "#=PKContractDraft#", @Type = "#=LoaiHopDong#" }) + "  data-id='#=Code#' ><i class='icon-pencil bigger-125'></i></a>  </span>" +
                "<span class ='tooltip-success' data-rel='tooltip' data-placement='right' title ='Coppy dự thảo'> <a class='btn btn-minier   btn-success' style=' text-align:center;  width: 15px;margin-top: 5px;margin-left: 2px;' href='javascript:void(0);' onclick='copyDuThao(this)'><i class='fa fa-clone bigger-125'></i></a> </span>" +
                "<span class ='tooltip-success' data-rel='tooltip' data-placement='bottom' title ='In dự thảo'> <a class='btn btn-minier   btn-danger' style=' text-align:center;  width: 15px;margin-top: 5px;margin-left: 2px;' href='javascript:void(0);'  onclick='reviewContractIndex(this)' ><i class='icon-print bigger-125'></i></a> </span>")
                .HtmlAttributes(new { style = "text-align:center" });

        columns.Bound(p => p.CustomerID)
               .Title("Thông tin hợp đồng")
               .Width(250)
               .ClientTemplate("<div>" +
                   "<span> #if(Code == ''){#<span>N/A</span>#} else {# <span>#=Code# </span> #}# - #=ContractTypeName#</span></br>" +
                   // "<span> Trạng thái hợp đồng:#=StatusName# </span></br>" +
                   "<span> Giá trị HĐ  #=kendo.toString(TongTienHD, \"n0\")# </span> </br>" +
                   "<span> Doanh số ký:  #=kendo.toString(TotalMoney, \"n0\")# </span> </br>" +
                //      "<span> Doanh số thực hiện: #=kendo.toString(TotalMoneyInYear,\"n0\")#</span> </br>" +
                //"<a class='btn btn-mini   btn-default' style=' text-align:center;  width: 15px;margin-top: 5px;margin-left: 2px;' href=" + Url.Action("EditContract", "CRMContractList", new { @Id = "#=PKContractDraft#", @Type = "#=LoaiHopDong#" }) + "  data-id='#=Code#' ><i class='icon-pencil bigger-125'></i></a>" +
                //"<a class='btn btn-mini   btn-info' style=' text-align:center;  width: 15px;margin-top: 5px;margin-left: 2px;' href='javascript:void(0);'><i class='icon-info-sign bigger-125'></i></a>" +
                //"<a class='btn btn-mini   btn-success' style=' text-align:center;  width: 15px;margin-top: 5px;margin-left: 2px;' href='javascript:void(0);'><i class='fa fa-clone bigger-125'></i></a>" +
                //"<a class='btn btn-mini   btn-danger' style=' text-align:center;  width: 15px;margin-top: 5px;margin-left: 2px;' href='javascript:void(0);'><i class='icon-print bigger-125'></i></a>" +

                "</div>");
        if(@viewKT == true)
        {
            columns.Bound(p => p.CustomerID)
               .Title("Thông tin khách hàng")
               .Width(350)
               .ClientTemplate("<div>" +
                //   "<span> #=CustomerID# - #=CustomerName# </span></br>" +
                "<span>  #=CustomerID# - #=CustomerName#  </span></br>" +
                   //"<span> Ngành hàng: #=CategoryName#  </span></br>" +
                   //"<span> Nhãn hàng: #=Labels# </span></br>" +
                   //"<span> Loại: #=CustomerTypeName# </span> </br>" +
                   //"<span> Nguồn khách hàng: </span>  #=SourceName#  </br>" +
                   "</div>");
        }
        else
        {
            columns.Bound(p => p.CustomerID)
               .Title("Thông tin khách hàng")
               .Width(350)
               .ClientTemplate("<div>" +
                   "<span> #=CustomerID# - #=CustomerName# </span></br>" +
                   //"<span> Tên pháp nhân(KHKT): #=CustomerName#  </span></br>" +
                   //"<span> Ngành hàng: #=CategoryName#  </span></br>" +
                   //"<span> Nhãn hàng: #=Labels# </span></br>" +
                   //"<span> Loại: #=CustomerTypeName# </span> </br>" +
                   //"<span> Nguồn khách hàng: </span>  #=SourceName#  </br>" +
                   "</div>");
        }


        columns.Bound(p => p.CustomerID)
                .Title("Thông tin duyệt")
                .Width(200)
                .ClientTemplate("<div>" +
                "<span> Trạng thái duyệt: </span> #=StatusNameApproved# </br>" +
                //"<span> Người duyệt: </span> #if(UserNameApproved != 'administrator'){#" + "#= UserNameApproved #" + "#}#</br>" +
                "<span> Người duyệt: </span> #=UserNameApproved#</br>" +
                "<span> Ngày gửi: </span> #if(kendo.toString(RequestDate,'dd/MM/yyyy') != '01/01/1900'){#" + "#= kendo.toString(RequestDate,'dd/MM/yyyy') #" + "#}# </br>" +
                "<span> Ngày duyệt: </span> #if(kendo.toString(ApprovedDate,'dd/MM/yyyy') != '01/01/1900'){#" + "#= kendo.toString(ApprovedDate,'dd/MM/yyyy') #" + "#}# " +
                "</div>");
        if (ViewBag.Leader != "")
        {
            columns.Bound(p => p.CustomerID)
                    .Title("Nhân viên")
                    .Width(200)
                    .ClientTemplate("<div class='span12'>" +
                        "<div class='span12'>" +
                        "<i class='fa fa-user'></i> #=UserNameStaff#</br>" +
                        "<i class='fa fa-users'></i> #=TeamName# </br>" +
                        "<i class='fa fa-globe'></i> #=RegionName#  </br>" +
                        "</div>" +
                        "</div>");
        }
        //columns.Bound(p => p.CustomerID)
        //        .Title("Công nợ")
        //        .Width(300)
        //         .ClientTemplate("<div>" +
        //           "<span> Doanh số đã quảng cáo: 65,000,000</span></br>" +
        //           "<span> Số tiền đã thanh toán: 65,000,000 </span></br>" +
        //           "<span> Còn nợ: 130,000,000 </span> </br>" +
        //           "<span> Tình trạng nợ: <b> Chưa đến hạn</b></span> </br>" +
        //           "<span> Hạn thanh toán: </span>" +
        //        "</div>");
        
        columns.Bound(p => p.TrangThai).Hidden();
        columns.Bound(p => p.CategoryID).Hidden();
        columns.Bound(p => p.LoaiHopDong).Hidden();
        columns.Bound(p => p.UserIDStaff).Hidden();
        columns.Bound(p => p.UserApproved).Hidden();
        columns.Bound(p => p.ApprovedDate).Format("{0:dd/MM/yyyy}").Width(120).Hidden();
        columns.Bound(p => p.NgayTao).Format("{0:dd/MM/yyyy}").Width(120).Hidden();
    })
    .ToolBar(toolbar =>
    {
    toolbar.Template(@<text>
            <div class="pull-left">
                @if (AllowCreate)
                {
                    <a class="btn btn-mini btn-success" href="@Url.Action("CreateContract", "CRMContractList", new { typeContract = "THUONG" })">HĐ Thường</a>
                    <a class="btn btn-mini btn-success" href="@Url.Action("CreateContract", "CRMContractList", new { typeContract = "CPM"})">HĐ CPM</a>
                    <a class="btn btn-mini btn-success" href="@Url.Action("CreateContract", "CRMContractList", new { typeContract = "GOI" })">HĐ Gói</a>
                    <a class="btn btn-mini btn-success" href="@Url.Action("CreateContract", "CRMContractList", new { typeContract = "PHIEU" })">Phiếu ĐKQC</a>
                    <a class="btn btn-mini btn-success" href="@Url.Action("CreateContract", "CRMContractList", new { typeContract = "PHIEUCPM" })">Phiếu CPM</a>
                    <a class="btn btn-mini btn-success" href="@Url.Action("CreateContract", "CRMContractList", new { typeContract = "PHIEUPR" })">Phiếu PR Giá rẻ</a>
                    <a class="btn btn-mini btn-danger" id="btnGridDelete" onclick="showConfirmPopup(1)">Xóa</a>
                }
            </div>
        </text>);
    })
                                            .Pageable(pager => pager.PageSizes(new[] { 20, 50, 100, 200, 300 }))
                                            .Resizable(r => r.Columns(true))
            //.ColumnMenu()
                                            .Events(events => { events.DataBound("dataBound"); })
                                            .DataSource(dataSource => dataSource
                                                .Ajax()
                                                .Batch(true)
                                                .PageSize(20)
                                                .Sort(sort =>
                                                {
                                                    sort.Add("NgayTao").Descending();
                                                })
                                                .Model(model =>
                                                {
                                                    model.Id(p => p.PKContractDraft);
                                                })
                                                .Read(read => read.Action("Read", "CRMContractList"))))
</div>
@Html.Partial("_popup_view_contract")

<script>
    //BaoAdd
    var isCopy = false;
    function copyDuThao(obj) {  
        var currentRow = $(obj).closest("tr");
        var dataItem = $("#Grid").data("kendoGrid").dataItem(currentRow);
        isCopy = true;
        window.open(r + "/CRMContractList/EditContract/" + dataItem.PKContractDraft + '?Type=' + dataItem.LoaiHopDong + '&Copy=' + isCopy, + '_blank');
    }
    function dataBound(e) {
        $('[data-rel=tooltip]').tooltip();
        $('[data-rel=popover]').popover({ html: true });
    }
    $(document).ready(function () {
        $("#listRegion,#listGroup,#listCareLevel,#listStaff,#listStatus,#listCustomerType,#listCategory,#listContract,#contracttype,#listApprove").chosen();
        $("#select-filter-lable").chosen();

        $('#orderDate,#approveDate,#createdDate').daterangepicker({
            autoclose: true,
            ranges: {
                'Hôm nay': [moment(), moment()],
                'Hôm qua': [moment().subtract('days', 1), moment().subtract('days', 1)],
                '7 ngày trước': [moment().subtract('days', 6), moment()],
                '30 ngày trước': [moment().subtract('days', 29), moment()],
                'Tháng này': [moment().startOf('month'), moment().endOf('month')],
                'Tháng trươc': [moment().subtract('month', 1).startOf('month'), moment().subtract('month', 1).endOf('month')]
            }, format: 'DD/MM/YYYY',
            locale: {
                applyLabel: 'Xác nhận',
                cancelLabel: 'Đóng lại',
                fromLabel: 'Từ',
                toLabel: 'Đến',
                customRangeLabel: 'Tuỳ chọn',
                daysOfWeek: ['T7', 'CN', 'T2', 'T3', 'T4', 'T5', 'T6'],
                monthNames: ['Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6', 'Tháng 7', 'Tháng 8', 'Tháng 9', 'Tháng 10', 'Tháng 11', 'Tháng 12'],
                firstDay: 1,
            }
        });
        CountStatus();
        //setfilter(keyfilter);
        if ('@isKT' == 'True') {
            callFilter(2, true);
            $('#btnCHO_DUYET').addClass("btn-grey").removeClass("btn-info");
            $('#btnAll').removeClass("btn-grey").addClass("btn-info");
        }

        if ('@isKD' == 'True') {
            callFilter("0", true);
            $('#btnDANG_SOAN').addClass("btn-grey").removeClass("btn-info");
            $('#btnAll').removeClass("btn-grey").addClass("btn-info");
        }


    });
    //
    var type = '';
    var PKContract = 0;
    function reviewContractIndex(obj) {
        //
        type = '';
        PKContract = 0;
        var currentRow = $(obj).closest("tr");
        var dataItem = $("#Grid").data("kendoGrid").dataItem(currentRow);
        //
        $("#popup-view-contract").modal("show");
        type = dataItem.LoaiHopDong;
        PKContract = dataItem.PKContractDraft;
        $.ajax({
            url: r + '/Ajax/GetTemplateContract/',
            type: 'POST',
            data: { Id: parseInt(PKContract), isView: true, Type: type },
            success: function (data, textStatus, jqXHR) {
                debugger;
                //if (print) {
                //    printContract(data);
                //} else {
                $("#popup-view-contract .modal-body-content").html(data);
                //}
                //console.log(data);
            },
        });
    }
    function reviewContract(print) {
        $("#popup-view-contract").modal("show");
        $.ajax({
            url: r + '/Ajax/GetTemplateContract/',
            type: 'POST',
            data: { Id: parseInt(PKContract), isView: true, Type: type },
            success: function (data, textStatus, jqXHR) {
                printContract(data);
            },
        });
    }
    function printContract(html) {
        var printWin = window.open("about:blank", "Voucher", "menubar=no;status=no;toolbar=no;");
        printWin.document.write(html);
        printWin.document.close();
        printWin.window.print();
        printWin.close();
    }
    function exportContract() {
        if (parseInt(PKContract) != 0) {
            window.location = r + '/Ajax/GetTemplateContract/' + PKContract + '?isView=false&Type=' + type;
        }
    }
    $("#btnAll").addClass("btn-grey").removeClass("btn-info");
    //BaoHV
    $("#btn-count-contract_draff button").click(function () {
        $("#btn-count-contract_draff button").addClass("btn-info").removeClass("btn-grey");
        $(this).addClass("btn-grey").removeClass("btn-info");
    });
    var keyfilter = "";
    function CountStatus() {
        $.post(r + "/Ajax/CountStatus", { view: 'ContractDraft' }, function (data) {
            $('#txtAll').text(data.TAT_CA);
            $('#txt_@lstStatus.ToList()[0].ParamID').text(data.DANG_SOAN);
            $('#txt_@lstStatus.ToList()[1].ParamID').text(data.CHO_DUYET);
            $('#txt_@lstStatus.ToList()[2].ParamID').text(data.DA_DUYET);
            $('#txt_@lstStatus.ToList()[3].ParamID').text(data.DA_DONG_BO);
            $('#txt_@lstStatus.ToList()[4].ParamID').text(data.TU_CHOI); //Tu Choi
            $('#txt_@lstStatus.ToList()[5].ParamID').text(data.HUY_DIEU_CHINH);
            $('#txt_@lstStatus.ToList()[6].ParamID').text(data.DA_XOA);
        });
    }

    function convertDate(str) {
       
        var splitDate = str.split('/');
        var day = splitDate[0];
        var month = splitDate[1];
        var year = splitDate[2];
        return year + "/" + month + "/" + day;
    }
    function callFilter(statusFilter, stActive) {
       
        $('#listStatus option:selected').removeAttr('selected');
        $('#listStatus').prop('disabled', stActive);
        keyfilter = statusFilter;
        setfilter(keyfilter);
    }
    var keyfilter = "";
    $('.quick-filter').click(function (e) {
        if ($(this).val() == "") {
            callFilter("", false);
        }
        else {
            callFilter($(this).val(), true);
        }
    });
    $('#listStatus,#contracttype,#listCustomerType,#listCategory').on('change', function () {
        setfilter(keyfilter);
    });
    function delExitsDate(e) {
        $(e).parents(".btncleardatetimepicker").find("input").val('');
    }
    $("#txtSearch,#txtcode").keypress(function (e) {
        if (e.keyCode == 13) {
            setfilter(keyfilter);
        }
    });
    function setfilter(keyfilter) {
       
        var grid = $('#Grid').data('kendoGrid');
        var filter = { logic: "and", filters: [] };

        var fillterOr = { logic: "or", filters: [] };
        if (keyfilter != "") {
            $('#listStatus').val(keyfilter);
        }
        // status
        var listStatus = $('#listStatus option:selected');
        $('#listStatus').trigger('chosen:updated');
        var fillterStatus = { logic: "or", filters: [] }
        if (listStatus.length > 0) {
            for (var i = 0; i < listStatus.length; i++) {
                var option = listStatus[i].value;
                if (option == '') {
                    fillterStatus.filters.push({ field: "TrangThai", operator: "contains", value: '' });
                }
                else {
                    fillterStatus.filters.push({ field: "TrangThai", operator: "eq", value: option });
                }
            }
            filter.filters.push(fillterStatus);
        }
        var listRegion = $('#listRegion option:selected');
        if (listRegion.length > 0) {

            for (var i = 0; i < listRegion.length; i++) {
                var option = listRegion[i].value;
                if (option == '') {
                    fillterOr.filters.push({ field: "RegionID", operator: "contains", value: '' });
                }
                else {
                    fillterOr.filters.push({ field: "RegionID", operator: "eq", value: option });
                }
            }
            filter.filters.push(fillterOr);
        }
        var listGroup = $('#listGroup option:selected');
        if (listGroup.length > 0) {
            var fillterlistGroup = { logic: "or", filters: [] }
            for (var i = 0; i < listGroup.length; i++) {
                var option = listGroup[i].value;
                if (option == '') {
                    fillterlistGroup.filters.push({ field: "TeamID", operator: "contains", value: '' });
                }
                else {
                    fillterlistGroup.filters.push({ field: "TeamID", operator: "eq", value: option });
                }
            }
            filter.filters.push(fillterlistGroup);
        }
        var text = $("#txtSearch").val();
        if (text) {
            var filterOr = { logic: "or", filters: [] };
            filterOr.filters.push({ field: "CustomerCode", operator: "contains", value: text });
            filterOr.filters.push({ field: "CustomerID", operator: "contains", value: text });
            filterOr.filters.push({ field: "ShortName", operator: "contains", value: text });
            filterOr.filters.push({ field: "CustomerName", operator: "contains", value: text });
            
            filter.filters.push(filterOr);
        }

        var code = $("#txtcode").val();
        if (code) {
            var filterOr = { logic: "or", filters: [] };
            filterOr.filters.push({ field: "Code", operator: "contains", value: code });
            filter.filters.push(filterOr);
        }

        var listContractType = $('#contracttype option:selected');
        if (listContractType.length > 0) {
            var fillterContractype = { logic: "or", filters: [] }
            for (var i = 0; i < listContractType.length; i++) {
                var option = listContractType[i].value;
                if (option == '') {
                    fillterContractype.filters.push({ field: "LoaiHopDong", operator: "contains", value: '' });
                }
                else {
                    fillterContractype.filters.push({ field: "LoaiHopDong", operator: "eq", value: option });
                }
            }
            filter.filters.push(fillterContractype);
        }
        // listCustomerType
        var listCustomerType = $('#listCustomerType option:selected');
        var fillterCustomerType = { logic: "or", filters: [] }
        if (listCustomerType.length > 0) {
            for (var i = 0; i < listCustomerType.length; i++) {
                var option = listCustomerType[i].value;
                if (option == '') {
                    fillterCustomerType.filters.push({ field: "CustomerType", operator: "contains", value: '' });
                }
                else {
                    fillterCustomerType.filters.push({ field: "CustomerType", operator: "eq", value: option });
                }
            }
            filter.filters.push(fillterCustomerType);
        }

        // listCategory
        var listCategory = $('#listCategory option:selected');
        if (listCategory.length > 0) {
            var fillterCategory = { logic: "or", filters: [] }
            for (var i = 0; i < listCategory.length; i++) {
                var option = listCategory[i].value;
                if (option == '') {
                    fillterCategory.filters.push({ field: "CategoryID", operator: "contains", value: '' });
                }
                else {
                    fillterCategory.filters.push({ field: "CategoryID", operator: "eq", value: option });
                }
            }
            filter.filters.push(fillterCategory);
        }

        // listStaff
        var listStaff = $('#listStaff option:selected');
        var fillterStaff = { logic: "or", filters: [] }
        if (listStaff.length > 0) {
            for (var i = 0; i < listStaff.length; i++) {
                var option = listStaff[i].value;
                if (option == '') {
                    fillterStaff.filters.push({ field: "UserIDStaff", operator: "contains", value: '' });
                }
                else {
                    fillterStaff.filters.push({ field: "UserIDStaff", operator: "eq", value: option });
                }
            }
            filter.filters.push(fillterStaff);
        }
        var listApprove = $('#listApprove option:selected');
        if (listApprove.length > 0) {
            var fillterStaff = { logic: "or", filters: [] }
            for (var i = 0; i < listApprove.length; i++) {
                var option = listApprove[i].value;
                if (option == '') {
                    fillterStaff.filters.push({ field: "UserApproved", operator: "contains", value: '' });
                }
                else {
                    fillterStaff.filters.push({ field: "UserApproved", operator: "eq", value: option });
                }
            }
            filter.filters.push(fillterStaff);
        }
        var approveDate = $("#approveDate").val();
        if (approveDate) {
            debugger;
            var d = new Date()
            var s_date = approveDate.split('-')[0].trim();
            var e_date = approveDate.split('-')[1].trim();
            e_date = new Date(convertDate(e_date));
            s_date = new Date(convertDate(s_date));
            e_date.setDate(e_date.getDate() + 1);
            if (s_date != "" && e_date != "") {
                var filterApproveDate = { logic: "and", filters: [] };
                filterApproveDate.filters.push({ field: "ThoiGianDuyet", operator: "gte", value: s_date });
                filterApproveDate.filters.push({ field: "ThoiGianDuyet", operator: "lte", value: e_date });
                filter.filters.push(filterApproveDate);
            }
        }

        var createdDate = $("#createdDate").val();
        if (createdDate) {
           
            var d = new Date()
            var s_date = createdDate.split('-')[0].trim();
            var e_date = createdDate.split('-')[1].trim();
            e_date = new Date(convertDate(e_date));
            s_date = new Date(convertDate(s_date));
            e_date.setDate(e_date.getDate() + 1);
            if (s_date != "" && e_date != "") {
                var filterCreatedDate = { logic: "and", filters: [] };
                filterCreatedDate.filters.push({ field: "NgayTao", operator: "gte", value: s_date });
                filterCreatedDate.filters.push({ field: "NgayTao", operator: "lte", value: e_date });
                filter.filters.push(filterCreatedDate);
            }
        }
        grid.dataSource.filter(filter);
    }
    function checkAll(e) {
        var x = $(e).prop('checked');
        $('#Grid').find(".checkvalue").each(function () {
            $(this).prop('checked', x);
        });
    }
    $('#listRegion').on('change', function () {
        LoadGroupByRegion($('#listRegion').val());
        // setfilter(keyfilter);
    });
    function LoadGroupByRegion(Regionid) {
       
        $.post(r + "/Ajax/GetlistGroupByRegion", { RegionID: Regionid, type: 'ALL' }, function (data) {
            $("#divGroupByRegion").html(data);
        });
    }
    function LoadUserByGroup(groupid) {
        $.post(r + "/Ajax/GetlistEmployeeByGroup", { GroupID: groupid }, function (data) {
            $("#emloyeebygroup").html(data);
        });
    }
    $('#listGroup').on('change', function () {
        
        LoadUserByGroup($('#listGroup').val());
        // setfilter(keyfilter);
    });
    $('#listStaff').on('change', function () {
        // setfilter(keyfilter);
    });

    if ('@viewall' == "True") {
        $('#listRegion').prop('disabled', false);
        $('#listGroup').prop('disabled', false);
        $('#listStaff').prop('disabled', false);
        $('#listRegion').trigger('chosen:updated');
        LoadGroupByRegion($('#listRegion').val());
        $('#listGroup').on('change', function () {
            LoadUserByGroup($('#listGroup').val());
        });
        function LoadUserByGroup(groupid) {
            $.post(r + "/Ajax/GetlistEmployeeByGroup", { GroupID: groupid }, function (data) {
                $("#emloyeebygroup").html(data);
            });
        }
    }
    else {
        if ('@viewKT' == "True") {
            $('#listRegion').prop('disabled', false);
            $('#listGroup').prop('disabled', false);
            $('#listStaff').prop('disabled', false);
            $('#listApprove').prop('disabled', false);
            // $('#listRegion').val('');
            // $('#listRegion').trigger('chosen:updated');
            // $('#listApprove').val('');
            // $('#listApprove').trigger('chosen:updated');
        }
        else {
            if ('@viewLeader' == "True") {
                $('#listRegion').prop('disabled', true);
                $('#listGroup').prop('disabled', true);
                $('#listStaff').prop('disabled', false);
                $('#listRegion').val('@ViewBag.listRegion[0].HierarchyID');
                $('#listRegion').trigger('chosen:updated');
                $('#listGroup').val('@ViewBag.listTeam[0].TeamID');
                $('#listGroup').trigger('chosen:updated');
                $('#listStaff').val('@ViewBag.IdLeader');
                $('#listStaff').trigger('chosen:updated');

            }
            else {
                $('#listRegion').prop('disabled', true);
                $('#listGroup').prop('disabled', true);
                $('#listStaff').prop('disabled', true);
                $('#listRegion').val('@ViewBag.listRegion[0].HierarchyID');
                $('#listRegion').trigger('chosen:updated');
                $('#listGroup').val('@ViewBag.listTeam[0].TeamID');
                $('#listGroup').trigger('chosen:updated');
                $('#listStaff').val('@ViewBag.listStaff[0].RefStaffId');
                $('#listStaff').trigger('chosen:updated');
            }
        }
    }
</script>