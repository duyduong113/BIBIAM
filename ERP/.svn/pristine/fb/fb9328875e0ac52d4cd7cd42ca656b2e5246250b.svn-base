@{
    ViewBag.Title = "Danh sách đơn hàng";
}
<div class="row-fluid">
    <div class="span12">
        <div class="widget-box">
            <div class="widget-header widget-header-blue widget-header-flat">
                <p style="font-size:14px">@Resources.Multi.Filter</p>

                <span class="widget-toolbar">
                    <a href="#" data-action="collapse">
                        <i class="icon-chevron-up"></i>
                    </a>
                </span>
            </div>
            <div class="widget-body">
                <div class="widget-main">
                    <div class="row-fluid">
                        <div class="span12">

                            <input class="span1" type="text" id="filterText" placeholder="Tìm theo MĐH, Tên, CMND, SĐT khách hàng…" style="width:250px" />
                            <input type="text" name="date-range-picker span2" id="CreatedAtDate" placeholder="Ngày đơn hàng(từ-đến)" style="width: 130px;height:20px;" />
                            <select name="select" id="listStatus" class='chosen-select span2' data-placeholder="Chọn trạng thái xử lý…" multiple>
                                @foreach (var a in ViewBag.BankActionStatus)
                                {
                                    if (@a.CodeID == "BankActionStatus01" || @a.CodeID == "BankActionStatus02")
                                    {
                                        <option value="@a.CodeID" selected>@a.Description</option>
                                    }
                                    else
                                    {
                                        <option value="@a.CodeID">@a.Description</option>
                                    }
                                    
                                }
                            </select>
                            <select name="select" id="listOrderStatus" class='chosen-select span3' data-placeholder="Chọn trạng thái đơn hàng…" multiple>
                                @foreach (var a in ViewBag.Status)
                                {
                                    <option value="@a.RefID">@a.Name</option>
                                }
                            </select>
                            <button type="button" id="btnSearch" class="btn btn-primary btn-small" onclick="filter()" style="float:none">@Resources.Multi.Filter</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row-fluid">
    <div class="span12">
        @(Html.Kendo()
    .Grid<ERPAPD.Models.Deca_Bank_TransactionsViewModel>()
    .Name("grid")
    .Columns(columns =>
    {

        columns.Bound(p => p.ID).Width(80).Filterable(false).Visible(false);
        columns.ForeignKey(p => p.BankActionStatus, (System.Collections.IEnumerable)ViewBag.BankActionStatus, "CodeID", "Description").Width(115).Title("Trạng thái xử lý");
        columns.Bound(p => p.OrderID).Width(100).Title(Resources.Multi.OrderCode);
        columns.Bound(p => p.RefID).Width(100).Title("Mã ĐH-OCM");
        columns.Bound(p => p.AuthTransRef).Width(160).Title("Mã GDTT");
        columns.Bound(p => p.Amount).Format("{0:N0}").Width(120).Title("Giá trị giao dịch");
        columns.Bound(p => p.OrderDate).Width(120).Title("Ngày giao dịch").Format("{0:" + Resources.Multi.DateFormat+ " HH:mm:ss}");
        columns.Bound(p => p.CustomerName).Width(140).Title(Resources.Multi.CustomerName);
        columns.Bound(p => p.PhysicalID).Width(85).Title("Số CMND");
        columns.Bound(p => p.MobilePhone).Width(90).Title("Điện thoại");
        columns.Bound(p => p.Installment).Width(95).Title("KH chọn TG");
        columns.ForeignKey(p => p.BankInstallment, (System.Collections.IEnumerable)ViewBag.BankInstallment, "ID", "Installment").Width(100).Title("NH duyệt TG");
        columns.ForeignKey(p => p.Bank, (System.Collections.IEnumerable)ViewBag.Bank, "BankID", "BankName").Width(100).Title("Ngân hàng");
        columns.Bound(p => p.TransactionInfo).Width(350).Title("Thông tin giao dịch");
        columns.ForeignKey(p => p.Status, (System.Collections.IEnumerable)ViewBag.Status, "RefID", "Name").Width(140).Title("Trạng thái đơn hàng");
        columns.Bound(p => p.CreatedAt).Title(Resources.Multi.CreatedAt).Width(120).Format("{0:dd/MM/yyyy HH:mm}");
        columns.Bound(p => p.CreatedBy).Title(Resources.Multi.CreatedBy).Width(100);
        columns.Bound(p => p.UpdatedAt).Title(Resources.Multi.UpdatedAt).Width(120).Format("{0:dd/MM/yyyy HH:mm}");
        columns.Bound(p => p.UpdatedBy).Title(Resources.Multi.UpdatedBy).Width(100);
    })
    .Pageable(a => a.PageSizes(new int[] { 20, 50, 100 }))
    .Sortable()
    .Scrollable()
    .Events(events => { events.DataBound("dataBound"); })
            .ToolBar(toolbar =>
            {

                toolbar.Custom()
                .Text(Resources.Multi.Export)
                .HtmlAttributes(new { @class = "export btn btn-info" })
                .Url(Url.Action("ExportData", "BankTransactions", new { filter = "~", sort = "~" }));
                toolbar.Custom()
             .Text("Nhập kết quả từ Excel")
            .HtmlAttributes(new { @class = "btn btn-purple", id = "import", Href = "javascript:void(0)" });
            })
    .Navigatable()
    .Filterable()
    .Reorderable(r => r.Columns(true))
    .Resizable(r => r.Columns(true))
    .ColumnMenu()
    .DataSource(dataSource => dataSource
    .Ajax()
    .Batch(true)
    .PageSize(20)
    .Sort(a => a.Add(m => m.BankActionStatus).Ascending())
    .Filter(f => { f.Add(a => a.BankActionStatus).IsEqualTo("BankActionStatus01").Or().IsEqualTo("BankActionStatus02"); })
    .Read(read => read.Action("Read", "BankTransactions")))
        )
    </div>
</div>

@(Html.Kendo()
      .Window()
      .Name("window")
      .Title("ImportForm")
      .Content(@<text>
        <div class="row-fluid">
            <div class="span4">
                <form id="importform" action="@Url.Content("~/BankTransactions/ImportFromExcel")" method="post" class="form-horizontal" enctype="multipart/form-data" style="margin-bottom:0px;">
                    <input type="file" id="FileUpload" name="FileUpload" />
                </form>
            </div>
            <button type="button" id="btnImport" class="btn btn-purple btn-small span2" style="float: right;">Import</button>
        </div>
        <div class="row-fluid">
            <a id="btndownload" style="display: none" class="btn btn-warning btn-small">@Resources.Multi.DownloadTemplateError</a>
        </div>
    </text>)
      .Draggable()
      .Resizable()
      .Visible(false)
      .Width(1000)
      .Actions(actions => actions.Close())

)
<script>

    $(document).ready(function () {
        $('#CreatedAtDate').daterangepicker({
            format: 'YYYY/MM/DD'
        });
        $("#listStatus").chosen();
        $("#listOrderStatus").chosen();
        $('#import').bind('click', function () {
            $("#window").kendoWindow({
                actions: {}, /*from Vlad's answer*/
                draggable: true,
                height: "300px",
                modal: true,
                resizable: false,
                width: "500px",
                visible: false /*don't show it yet*/
            }).data("kendoWindow").center().open();
            $('#FileUpload').ace_file_input({
                no_file: 'No File ...',
                btn_choose: 'Choose',
                btn_change: 'Change',
                droppable: false,
                onchange: null,
                thumbnail: false //| true | large
                //whitelist:'gif|png|jpg|jpeg'
                //blacklist:'exe|php'
                //onchange:''
                //
            });
        });

        //$('#import').attr('data-toggle', 'modal');
        $('#btnImport').bind('click', function () {
            $('#importform').submit();
        });
        $('a.export').bind('click', function () {

        });
        (function () {
            $("#importform").ajaxForm({
                beforeSend: function () {
                    $("#window").data("kendoWindow").close();
                    $(document).ajaxStart($.blockUI({ message: '<i class="icon-spinner icon-spin blue bigger-125" style="font-size:30px;"></i>', theme: false })).ajaxStop($.unblockUI);
                },
                uploadProgress: function (event, position, total, percentComplete) {
                },
                success: function (data) {
                    if (data.success) {
                        $("#grid").data("kendoGrid").dataSource.read();
                        $.gritter.add({
                            // (string | mandatory) the heading of the notification
                            title: '',
                            // (string | mandatory) the text inside the notification
                            text: 'Import successfully ' + data.total + ' record(s)',
                            class_name: 'gritter-success'
                        });
                        if (data.totalError > 0) {
                            $("#window").data("kendoWindow").open();
                            $('#btndownload').css('display', 'inline-block');
                            $('#btndownload').attr('href', r + "/BankTransactions/Download?file=" + data.link);
                        }
                        else {
                            $('#btndownload').css('display', 'none');
                            $('#btndownload').attr('href', "");
                        }
                    }
                    else {
                        $.gritter.add({
                            // (string | mandatory) the heading of the notification
                            title: '',
                            // (string | mandatory) the text inside the notification
                            text: data.message,
                            class_name: 'gritter-error'
                        });
                    }
                },
                complete: function (xhr) {

                }
            });
        })();
    })
    $("#filterText").keypress(function (e) {
        if (e.keyCode == 13) {
            filter();
        }
    });
    $("#filterText").keypress(function (e) {
        if (e.keyCode == 13) {
            filter();
        }
    });
    function filter() {

        grid = $("#grid").data("kendoGrid");
        var text = $('#filterText').val();
        var filter = { logic: "and", filters: [] };
        var CreatedAtDate = $('#CreatedAtDate').val();

        var filtertext = { logic: "or", filters: [] };

        var listStatus = $('#listStatus option:selected');
        var listOrderStatus = $('#listOrderStatus option:selected');
        var fillterStatus = { logic: "or", filters: [] }
        var fillterOrderStatus = { logic: "or", filters: [] }

        if (listStatus.length > 0) {
            for (var i = 0; i < listStatus.length; i++) {
                var option = listStatus[i].value;
                if (option == '') {
                    fillterStatus.filters.push({ field: "BankActionStatus", operator: "contains", value: '' });
                }
                else {
                    fillterStatus.filters.push({ field: "BankActionStatus", operator: "eq", value: option });
                }
            }
            filter.filters.push(fillterStatus);
        }


        if (listOrderStatus.length > 0) {
            for (var i = 0; i < listOrderStatus.length; i++) {
                var option = listOrderStatus[i].value;
                if (option == '') {
                    fillterOrderStatus.filters.push({ field: "Status", operator: "contains", value: '' });
                }
                else {
                    fillterOrderStatus.filters.push({ field: "Status", operator: "eq", value: option });
                }
            }
            filter.filters.push(fillterOrderStatus);
        }

        if (CreatedAtDate) {
            var startdate = CreatedAtDate.split('-')[0].trim();
            var enddate = CreatedAtDate.split('-')[1].trim();
            var todate = new Date(enddate);
            todate.setDate(todate.getDate() + 1);
            filter.filters.push({ field: "OrderDate", operator: "gte", value: startdate });
            filter.filters.push({ field: "OrderDate", operator: "lt", value: kendo.toString(todate, 'yyyy-MM-dd') });
        }

        if (text) {
            filtertext.filters.push({ field: "OrderID", operator: "contains", value: text });
            filtertext.filters.push({ field: "CustomerName", operator: "contains", value: text });
            filtertext.filters.push({ field: "PhysicalID", operator: "contains", value: text });
            filtertext.filters.push({ field: "MobilePhone", operator: "contains", value: text });
            filter.filters.push(filtertext);
        }

        grid.dataSource.filter(filter);
    }
    function error_handler(e) {
        if (e.errors) {
            var message = "@Resources.Multi.Error:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                    $("#grid").data("kendoGrid").dataSource.read();
                }
            });
            $.gritter.add({
                // (string | mandatory) the heading of the notification
                title: '',
                // (string | mandatory) the text inside the notification
                text: message,
                class_name: 'gritter-error'
            });
        }
    }
    function onRequestEnd(e) {

        if (e.type == "update" && !e.response.Errors) {
            $.gritter.add({
                // (string | mandatory) the heading of the notification
                title: '',
                // (string | mandatory) the text inside the notification
                text: '@Resources.Multi.Update @Resources.Multi.Successfully',
                class_name: 'gritter-success'
            });
            $("#grid").data("kendoGrid").dataSource.read();
        }
    }
    function resizeGrid() {
        //Company Type
        var offsetbottom = parseInt($(window).height()) - parseInt($('#grid').offset().top);
        var gridElement = $("#grid"),
        dataArea = gridElement.find(".k-grid-content"),
        otherElements = gridElement.children().not(".k-grid-content"),
        otherElementsHeight = 0;
        otherElements.each(function () {
            otherElementsHeight += $(this).outerHeight();
        });
        dataArea.height(offsetbottom - otherElementsHeight - 30);
    }

    function dataBound(e) {
        resizeGrid();
        drawcolor();
        var grid = this;

        // ask the parameterMap to create the request object for you
        var requestObject = (new kendo.data.transports["aspnetmvc-server"]({ prefix: "" }))
        .options.parameterMap({
            page: grid.dataSource.page(),
            sort: grid.dataSource.sort(),
            filter: grid.dataSource.filter()
        });

        // Get the export link as jQuery object
        var $exportLink = grid.element.find('.export');


        // Get its 'href' attribute - the URL where it would navigate to
        var href = $exportLink.attr('href');

        // Update the 'page' parameter with the grid's current page
        //href = href.replace(/page=([^&]*)/, 'page=' + requestObject.page || '~');

        // Update the 'sort' parameter with the grid's current sort descriptor
        href = href.replace(/sort=([^&]*)/, 'sort=' + requestObject.sort || '~');

        // Update the 'pageSize' parameter with the grid's current pageSize
        //href = href.replace(/pageSize=([^&]*)/, 'pageSize=' + grid.dataSource._pageSize);

        //update filter descriptor with the filters applied

        href = href.replace(/filter=([^&]*)/, 'filter=' + (requestObject.filter || '~'));

        // Update the 'href' attribute
        $exportLink.attr('href', href);
    }
    var columnBankStatus = 1;
    var columnstatus = 14;
    function drawcolor() {
        $('.k-icon.k-edit').remove();
        var data = $("#grid").data("kendoGrid").dataSource.data();
        $("td").filter(function () {
            return $(this).text() === "00:00 01/01/1900";
        }).html('');
        // $('td:contains("01/01/1900")').html('');
        $.each(data, function (i, row) {
            // $('tr[data-uid="' + row.uid + '"] td:nth-child(' + columndetail + ')').text(row.Detail);
            // to mau status
            try {
                if (row.BankActionStatus == "BankActionStatus01") {
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(' + columnBankStatus + ')').css("background-color", "#F0EFEF");
                }
                else if (row.BankActionStatus == "BankActionStatus02") {
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(' + columnBankStatus + ')').css("background-color", "#FCF6CF");
                }
                else if (row.BankActionStatus == "BankActionStatus03") {
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(' + columnBankStatus + ')').css("background-color", "#D5FAC9");
                }
                else if (row.BankActionStatus == "BankActionStatus04") {
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(' + columnBankStatus + ')').css("background-color", "#FACDCD");
                }
            }
            catch (err) {
            }
            try {
                if (row.Status == "0") {
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(' + columnstatus + ')').css("background-color", "#EDEDED");
                }
                else if (row.Status == "1") {
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(' + columnstatus + ')').css("background-color", "#EDEDED");
                }
                else if (row.Status == "2") {
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(' + columnstatus + ')').css("background-color", "#EDEDED");
                }
                else if (row.Status == "3") {
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(' + columnstatus + ')').css("background-color", "#EDEDED");
                }
                else if (row.Status == "4") {
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(' + columnstatus + ')').css("background-color", "#E2EFDA");
                }
                else if (row.Status == "5") {
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(' + columnstatus + ')').css("background-color", "#D5F3DB").css("color", "#126D24");
                }
                else if (row.Status == "6") {
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(' + columnstatus + ')').css("background-color", "#C6EFCE").css("color", "#126D24");
                }
                else if (row.Status == "7") {
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(' + columnstatus + ')').css("background-color", "#FFF2CC");
                }
                else if (row.Status == "8") {
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(' + columnstatus + ')').css("background-color", "#FFE699").css("color", "white");
                }
                else if (row.Status == "9") {
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(' + columnstatus + ')').css("background-color", "#F8CBAD").css("color", "white");
                }
                else if (row.Status == "10") {
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(' + columnstatus + ')').css("background-color", "#FF7D7D").css("color", "white");
                }
            }
            catch (err) {
            }
        });
    }

</script>
