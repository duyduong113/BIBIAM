@model IEnumerable<ERPAPD.Models.DC_Article>

@{
    ViewBag.Title = Resources.Multi.ManagePost;

    bool AllowCreate = (ViewData["AllowCreate"] != null && (bool)ViewData["AllowCreate"]);
    bool AllowUpdate = (ViewData["AllowUpdate"] != null && (bool)ViewData["AllowUpdate"]);
    bool AllowDelete = (ViewData["AllowDelete"] != null && (bool)ViewData["AllowDelete"]);
    bool AllowExport = (ViewData["AllowExport"] != null && (bool)ViewData["AllowExport"]);
    string FormatDateTime = HttpContext.Current.Session["DateTime"] != null ? HttpContext.Current.Session["DateTime"].ToString() : "MM/dd/yyyy";
}
<script src="@Url.Content("~/Scripts/underscore.js")"></script>
<div class="row-fluid">
    <div class="span12">
        <div class="widget-box">
            <div class="row-fluid">
                <div class="span12">
                    <input class="span1" type="text" id="filterText" placeholder="Tiêu đề, nội dung…" style="width:250px" />
                    @*<select name="select" id="listStatus" class='chosen-select span2' data-placeholder="@Resources.Multi.Active..." multiple>
                        <option value="true">Active</option>
                        <option value="false">Inactive</option>
                    </select>*@
                    <button type="button" id="btnSearch" class="btn btn-primary btn-small" onclick="filter()" style="float:none">@Resources.Multi.Filter</button>
                </div>
            </div>
        </div>
    </div>
</div>
<div>
    <div class="row-fluid">
        @(Html.Kendo()
              .Grid(Model)
              .Name("Grid")
              .Columns(columns =>
              {
                  columns.Bound(p => p.ArticleId).HeaderTemplate("<input style='text-align:center;opacity:1;' type='checkbox' id= 'checkAll' />")
                      .ClientTemplate("<input style='text-align:center' onClick='getValue(this)' class='checkItem' type='checkbox' id= '#=ArticleId#' />")
                      .Width(10).Filterable(false).Sortable(false);
                  columns.Bound(p => p.Title).Title(Resources.Multi.Title).Width(160).ClientTemplate("<a href='" + Url.Action("Edit", "Article") + "/#=ArticleId#'>#=Title#</a>");
                  columns.Bound(p => p.Active).Title(Resources.Multi.Active).Width(30);
                 // columns.Bound(p => p.PostContent).Title(Resources.Multi.Post).Width(200).ClientTemplate("#=PostContent#");
                  columns.Command(command =>
                  {
                      //command.Custom("Edit").Click("Edit").Text(Resources.Multi.Edit).HtmlAttributes(new { @class = "btn btn-warning", @style = "display:" + (AllowUpdate ? "inline-block" : "none") });
                      command.Custom("ViewDetails").Click("showDetails").Text("Xem trước").HtmlAttributes(new { @class = "btn btn-info" });
                  }).Width(70);
                  columns.Bound(p => p.UpdatedBy).Width(90).Title(Resources.Multi.UpdatedBy).HeaderHtmlAttributes(new { style = "overflow: visible; white-space: normal;vertical-align: top" });
                  //columns.Bound(p => p.UpdatedDate).Format("{0:" + FormatDateTime + "}").Width(90).Title(Resources.Multi.UpdatedAt).ClientTemplate("#if(kendo.toString(UpdatedDate,'dd/MM/yyyy') != '01/01/1900'){#" + "#=ConvertTimeZone(UpdatedDate," + Constants.TIME_ZONE + ")#" + "#}#").HeaderHtmlAttributes(new { style = "overflow: visible; white-space: normal;vertical-align: top" });
                  columns.Bound(p => p.UpdatedDate).Format("{0:" + FormatDateTime + "}").Width(90).Title(Resources.Multi.UpdatedAt);
              })
              .Scrollable(scrollable => scrollable.Virtual(true))
              .Pageable(pager => pager
              .PageSizes(new[] { 20, 100, 200, 300 }))
              .Sortable()
                //.Selectable(selectable => selectable.Mode(GridSelectionMode.Single).Type(GridSelectionType.Row))
              .Events(events => { events.DataBound("dataBound"); })
              .ToolBar(toolbar =>
              {
                  toolbar.Template(@<text>
                    <div class="pull-left">
                        @if (AllowCreate)
                        {
                            <a class="btn btn-success btn-small" href="javascript:void(0)" id="btnCreate">
                                @*<i class="icon-plus"></i>*@
                                @Resources.Multi.Add
                            </a>
                        }
                        <a class="btn btn-warning btn-small" href="javascript:void(0)" id="btnActive" onclick="showConfirmPopup(1)">
                            @*<i class="icon-ok"></i>*@ @Resources.Multi.Active
                        </a>
                        <a class="btn btn-warning btn-small" href="javascript:void(0)" id="btnInactive" onclick="showConfirmPopup(0)">
                            @*<i class="icon-remove"></i>*@ @Resources.Multi.InActive
                        </a>
                        @if (AllowDelete)
                        {
                            <a class="btn btn-small btn-danger" href="javascript:void(0)" id="btnGridDelete" onclick="showConfirmPopup(-1)">
                                @*<i class=" icon-trash"></i>*@
                                @Resources.Multi.GridDelete
                            </a>
                        }
                    </div>
                </text>);

                  //  toolbar.Custom()
                  //         .Text(Resources.Multi.Add)
                  //         .HtmlAttributes(new { id = "btnCreate", @class = "btn btn-success", @style = "display:" + (AllowCreate ? "inline-block" : "none"), @Href = "javascript:void(0)" });
                  //  toolbar.Custom()
                  //          .Text(Resources.Multi.Delete)
                  //         .HtmlAttributes(new { id = "btnDelete", @class = "btn btn-danger", @style = "display:" + (AllowDelete ? "inline-block" : "none"), @Href = "javascript:void(0)" });
              })
                                      .Scrollable()
                                      //.ColumnMenu()
                                      //.Filterable()
                                      .Navigatable()
                                     // .Resizable(resize => resize.Columns(true))
                                      .DataSource(dataSource => dataSource
                                                                          .Ajax()
                                                                          .PageSize(100)
                                                                          .Read("Read", "Article"))
        )
        @(Html.Kendo()
              .Window()
              .Name("Details")
              .Title("PostContent")
              .Visible(false)
              .Modal(true)
              .Draggable(true)
              .Width(1200)
              .Height(600)
        )

        <script type="text/x-kendo-template" id="template">
            <div><h3>#=Title#</h3></div>
            <div>#=PostContent#</div>
        </script>

        <script type="text/javascript">
            var detailsTemplate = kendo.template($("#template").html());

            function showDetails(e) {
                e.preventDefault();

                var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
                var wnd = $("#Details").data("kendoWindow");

                wnd.content(detailsTemplate(dataItem));
                wnd.center().open();
            }
        </script>
    </div>
</div>
@Html.Partial("_popup")
<script>
    function filter() {
        var grid = $("#Grid").data("kendoGrid");
        var valueSearch = $("#filterText").val();
        var filter = { logic: "and", filters: [] };
        if (valueSearch) {
            filter.filters.push({ field: "Title", operator: "contains", value: valueSearch });
          //  filter.filters.push({ field: "PostContent", operator: "contains", value: valueSearch });
        }
        grid.dataSource.filter(filter);
    }
    //Done
    $('#filterText').bind('keypress', function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            filter();
        }
    });
    $('#btnCreate').bind('click', function () {
        window.location = '@Url.Action("Create", "Article")';
    });
    
    function Edit(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        //jump to edit page
        window.location = '@Url.Action("Edit", "Article")/' + dataItem.ArticleId;
    }

    function resizeGrid() {
        var offsetbottom = parseInt($(window).height()) - parseInt($('#Grid').offset().top);
        var gridElement = $("#Grid"),
        dataArea = gridElement.find(".k-grid-content"),
        otherElements = gridElement.children().not(".k-grid-content"),
        otherElementsHeight = 0;
        otherElements.each(function () {
            otherElementsHeight += $(this).outerHeight();
        });
        dataArea.height(offsetbottom - otherElementsHeight - 30);
    }
    $(window).resize(function () {
        resizeGrid();
    });
    function dataBound() {
        resizeGrid();
        //load selected
        var gridDataSource = $("#Grid").data("kendoGrid").dataSource;
        var $Grid = $("#Grid");
        $('#Grid').find(".k-grid-content tbody tr").each(function () {
            var $tr = $(this);
            var uid = $tr.attr("data-uid");
            var data_entry = _.find(gridDataSource._data, function (data_source) {
                return data_source.uid === uid;
            });
            $tr.addClass('kendo-data-row').attr('data-kendoGrid-rowid', data_entry.ArticleId);
        });

        //Mark any selected rows as selected (persists selections from page to page)
        var selectedRowIds = $Grid.attr('data-kendoGrid-selected');
        if (selectedRowIds != null) {
            var selectedRowIdArray = selectedRowIds.split(',');
            var visibleRows = $Grid.find('.kendo-data-row');
            $(visibleRows).each(function () {
                $row = $(this);
                var rowID = $row.attr('data-kendoGrid-rowid');
                if (_.contains(selectedRowIdArray, rowID)) {
                    //$row.addClass('k-state-selected');
                    $row.find('.checkItem').attr('checked', 'checked');
                }
            });
            var totalview = $("#Grid").data("kendoGrid").dataSource.view().length;
            var totalchecked = $('.checkItem:checked').length;
            if (totalview != totalchecked) {
                $('#checkAll').removeAttr("checked");
            }
            else {
                $('#checkAll').attr("checked", "checked");
            }
        }
    }

    function onChange(e) {
    }

    function readData(e) {
        var $Grid = $("#Grid");
        var $cb = $(e);

        //Get Current Selected Values
        var selectedVals = [];
        var selectedRowIds = $Grid.attr('data-kendoGrid-selected');
        if (selectedRowIds != null && selectedRowIds != "") {
            selectedVals = selectedRowIds.split(',');
        }

        var $row = $cb.parents('.kendo-data-row').first();
        var rowId = $row.attr('data-kendoGrid-rowid');
        if ($cb.is(':checked')) {
            //$row.addClass('k-state-selected');
            selectedVals.push(rowId);
        }
        else {
            $('#checkAll').removeAttr("checked");
            //$row.removeClass('k-state-selected');
            selectedVals = _.without(selectedVals, rowId);
        }

        //Set selected values to a custom data attribute on the grid
        $Grid.attr('data-kendoGrid-selected', selectedVals);
    }

    function getValue(e) {
        readData(e);
    }

    $(document).ready(function () {
        //alert('@Html.Raw(@ViewBag.listDatetime)');
        $('#checkAll').bind('click', function () {
            if ($(this).is(':checked')) {
                $('.checkItem').each(function () {
                    if (!$(this).is(':checked')) {
                        $(this).trigger('click');
                    }
                })
            }
            else {
                $('.checkItem').each(function () {
                    if ($(this).is(':checked')) {
                        $(this).trigger('click');
                    }
                })
            }
        });
        
    });
</script>
