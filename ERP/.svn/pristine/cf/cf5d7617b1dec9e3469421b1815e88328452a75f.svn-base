@using MCC.Models;
@using CloudinaryDotNet;
@{
    ViewBag.Title = Html.Raw(Resources.Global._businessgroup);
    bool all = ViewBag.accessDetail != null ? ViewBag.accessDetail.access["all"] : false;
    bool view = ViewBag.accessDetail != null ? ViewBag.accessDetail.access["view"] : false;
    bool update = ViewBag.accessDetail != null ? ViewBag.accessDetail.access["update"] : false;
    bool create = ViewBag.accessDetail != null ? ViewBag.accessDetail.access["create"] : false;
    bool delete = ViewBag.accessDetail != null ? ViewBag.accessDetail.access["delete"] : false;
    bool export = ViewBag.accessDetail != null ? ViewBag.accessDetail.access["export"] : false;
}
@{
    var newData = new tw_BusinessGroup();
    newData.active = true;
}

<style>
    .k-pager-wrap {
        background: none;
        border: none;
        box-shadow: none;
        padding-top: 10px;
    }

    .todo-tasklist-item.selected {
        background-color: #D2EDF3;
    }

    .bootstrap-tagsinput {
        width: 100%;
    }

    .AccessRightsMobileBootbox .modal-dialog {
        width: 90%;
    }

    .max100 {
        max-width: 100%;
    }
</style>

<div class="row">
    <div class="col-md-5">
        <script type="text/x-kendo-tmpl" id="template">
            <div class="todo-tasklist-item #=active == true ? 'todo-tasklist-item-border-green' : 'todo-tasklist-item-border-red'# todo-tasklist-item_#=id#" style="cursor:default;">
                <div class="col-md-3" style="padding-left: 0; text-align: center;">
                    <img src="#=imagesSize ? imagesSize.thumb : 'http://www.placehold.it/140x140/EFEFEF/AAAAAA&amp;text=no+image'#" class="img-responsive" style="display:inline">
                </div>
                <div class="col-md-8" style="padding-left:0;">
                    <div class="todo-tasklist-item-title" style="padding-bottom:2px;">
                        #=groupCode# - #=name#
                        @*<span style="font-weight: 300; font-size: 13px; color: \\#217ebd; ">| #=domain#</span>*@
                    </div>
                    <span class="item-status pull-right">
                        <a onclick="edit(this)" class="todo-username-btn btn btn-circle btn-default btn-sm"><i class="fa fa-eye"></i> @Html.Raw(Resources.Global._detail)</a>
                    </span>
                    <div class="todo-tasklist-item-text">
                        @Html.Raw(Resources.Global._phone_number): #=phone ? phone : ''#
                    </div>
                    <div class="todo-tasklist-item-text">
                        @Html.Raw(Resources.Global._email): #=email ? email : ''#
                    </div>
                    <div class="todo-tasklist-item-text">
                        @Html.Raw(Resources.Global._businessgroup_showroom): #=showroomName ? showroomName : ''#
                    </div>
                    <div class="todo-tasklist-item-text">
                        @Html.Raw(Resources.Global._showroom_count_employee): #=employeeNumber ? employeeNumber : ''#
                    </div>
                </div>
            </div>
        </script>
        <div class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption">
                    <span class="caption-subject bold uppercase">@Html.Raw(Resources.Global._businessgroup_list)</span>
                </div>
                <div class="inputs">
                    <div class="portlet-input input-inline input-small">
                        <div class="input-icon right">
                            <i class="icon-magnifier"></i>
                            <input type="text" class="form-control form-control-solid input-circle" onkeyup="Search(this)" placeholder="@Html.Raw(Resources.Global._search)...">
                        </div>
                    </div>
                </div>  
                <div class="inputs" style="margin-right:10px;">
                    <a onclick="clearForm()" class="btn btn-default btn-circle btn-outline btn-sm">@Html.Raw(Resources.Global._create) <i class="fa fa-arrow-right"></i></a>
                </div>              
            </div>
            <div class="portlet-body">
                <div class="todo-tasklist">
                    @(Html.Kendo().ListView<MCC.Models.tw_ShowroomBranch>()
                            .Name("listView")
                            .TagName("div")
                            .HtmlAttributes(new { @class = "general-item-list", @style = "border-style:none;box-shadow:none;" })
                            .ClientTemplateId("template")
                            .DataSource(dataSource =>
                            {
                                dataSource.Read(read => read.Action("Read", "BusinessGroup"));
                                dataSource.PageSize(10).Sort(s => s.Add(a => a.id).Descending());
                            })
                            .Events(events => { events.DataBound("onDatabound"); })
                            .Pageable()
                    )
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-7 formEdit">
    </div>
</div>
<script type="text/x-kendo-template" id="EditTemplate">
    <form action="@Url.Content("~/BusinessGroup/CreateUpdate")" method="post" id="EditForm" novalidate="novalidate">
        <input type="hidden" name="id" value="#=id#" />
        <div class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption">
                    <i class="icon-pencil"></i>
                    <span class="caption-subject bold uppercase"> @Html.Raw(Resources.Global._add_edit) @Html.Raw(Resources.Global._businessgroup_mgnt)</span>
                </div>
                <div class="actions">
                    @if (all || create || update)
                    {
                        <a onclick="clearForm()" class="btn default btn-circle">@Html.Raw(Resources.Global._cancel)</a>
                    }
                    #if(id>0){#
                    @if (all || delete)
                    {
                        <a onclick="removeBusinessGroup('#=id#')" class="btn red btn-circle">@Html.Raw(Resources.Global._delete)</a>
                    }
                    #}#
                    @if (all || create || update)
                    {
                        <button type="submit" class="btn blue btn-circle">@Html.Raw(Resources.Global._save)</button>
                        <a onclick="saveAndClear()" class="btn green btn-circle">@Html.Raw(Resources.Global._save_new)</a>
                    }
                </div>
            </div>
            <div class="portlet-body form ">
                <div class="tabbable-line">
                    <ul class="nav nav-tabs">
                        <li class="active">
                            <a href="\\#tab_1_1" data-toggle="tab"> @Html.Raw(Resources.Global._general) </a>
                        </li>
                        #if(id > 0){#
                        @if (all)
                        {
                            <li>
                                <a href="\\#tab_1_2" data-toggle="tab"> @Html.Raw(Resources.Global._businessgroup_listuser) </a>
                            </li>
                        }
                        #}#                         
                    </ul>
                    <div class="tab-content">
                        <div class="tab-pane in active" id="tab_1_1">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>@Html.Raw(Resources.Global._businessgroup_groupcode)<span class="required"> * </span></label>
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            <input type="text" class="form-control input-sm max100" placeholder="NH001" name="groupCode" value="#=groupCode!=null ? groupCode : ''#">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label>@Html.Raw(Resources.Global._businessgroup_groupname)<span class="required"> * </span></label>
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            <input type="text" class="form-control input-sm max100" placeholder="Nhóm anh Trãi" name="name" value="#=name!=null ? name : ''#">
                                        </div>
                                    </div>                                   
                                    <div class="form-group">
                                        <label>@Html.Raw(Resources.Global._businessgroup_leader)</label>
                                        @(Html.Kendo().DropDownList()
                                      .Name("leader")
                                      .HtmlAttributes(new { style = "width:100%" })
                                      .OptionLabel(Html.Raw(Resources.Global._businessgroup_leader) + "...")
                                      .DataTextField("name")
                                      .DataValueField("id")
                                      .Value("#=leader#")
                                      .Events(e => e.Change("changeLeader"))
                                      .Filter("contains")                                      
                                      .DataSource(source =>
                                      {
                                          source.Read(read =>
                                          {
                                              read.Action("GetUser", "CustomData");
                                          }).ServerFiltering(true);
                                      }).ToClientTemplate()
                                        )
                                    </div>                                    
                                    <div class="form-group">
                                        <label>@Html.Raw(Resources.Global._phone)</label>
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            <input type="text" class="form-control input-sm mask_phone max100 phone" placeholder="0909xxxxxx" name="phone" value="#=phone!=null ? phone : ''#" />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label>@Html.Raw(Resources.Global._email)</label>
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            <input type="text" name="email" class="form-control input-sm max100 email" placeholder="youremail@domain.com" value="#=email!=null ? email : ''#">
                                        </div>
                                    </div>  
                                    <div style=" margin-top:25px;">
                                        <label>@Html.Raw(Resources.Global._businessgroup_showroom)</label>
                                        @(Html.Kendo().DropDownList()
                                      .Name("showroomId")
                                      .HtmlAttributes(new { style = "width:100%" })
                                      .OptionLabel(Html.Raw(Resources.Global._businessgroup_showroom) + "...")
                                      .DataTextField("name")
                                      .DataValueField("id")
                                      .Value("#=showroomId#")
                                      .Filter("contains")
                                      .Enable(false)
                                      .AutoBind(false)
                                      .CascadeFrom("leader")
                                      .DataSource(source =>
                                      {
                                          source.Read(read =>
                                          {
                                              read.Action("GetShowroomByLeader", "CustomData").Data("filterbyLeader");
                                          }).ServerFiltering(true);
                                      }).ToClientTemplate()
                                        )
                                    </div>
                                    <div class="form-group" style="margin-top:35px;">
                                        <div class="clearfix">
                                            <div class="btn-group btn-group-circle" data-toggle="buttons">
                                                <label class="btn red btn-sm btn-outline #=!active ? 'active' : ''#">
                                                    #if(active==false){#
                                                    <input type="radio" name="active" value="false" class="toggle" checked> @Html.Raw(Resources.Global._showroom_inactive)
                                                    #}else{#
                                                    <input type="radio" name="active" value="false" class="toggle"> @Html.Raw(Resources.Global._showroom_inactive)
                                                    #}#
                                                </label>
                                                <label class="btn green btn-sm btn-outline #=active ? 'active' : ''#">
                                                    #if(active==true){#
                                                    <input type="radio" name="active" value="true" class="toggle" checked> @Html.Raw(Resources.Global._showroom_active)
                                                    #}else{#
                                                    <input type="radio" name="active" value="true" class="toggle"> @Html.Raw(Resources.Global._showroom_active)
                                                    #}#
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-group">
                                        <div class="fileinput fileinput-new" data-provides="fileinput">
                                            <label>@Html.Raw(Resources.Global._showroom_image)</label>
                                            <div class="clearfix">
                                                <div class="input-group">
                                                    <div class="fileinput fileinput-new" data-provides="fileinput">
                                                        <div class="fileinput-new thumbnail" style="width: 280px; ">
                                                            <img src="#=imagesSize ? imagesSize.small : 'http://www.placehold.it/280x160/EFEFEF/AAAAAA&amp;text=no+image'#" alt="" />
                                                        </div>
                                                        <div class="fileinput-preview fileinput-exists thumbnail" style="max-width: 300px; "> </div>
                                                        <div>
                                                            <span class="btn default btn-file btn-sm btn-circle">
                                                                <span class="fileinput-new"> @Html.Raw(Resources.Global._select_image) </span>
                                                                <span class="fileinput-exists"> @Html.Raw(Resources.Global._change) </span>
                                                                <input type="file" name="file">
                                                            </span>
                                                            <a href="javascript:;" class="btn red fileinput-exists btn-sm btn-circle" data-dismiss="fileinput"> @Html.Raw(Resources.Global._remove) </a>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>

                        #if(id>0){#
                        @if (all)
                        {
                            <div class="tab-pane" id="tab_1_2">
                                @Html.Partial("_UserInGroup")
                            </div>
                        }
                        #}#
                    </div>
                </div>
                <div class="form-actions right">
                    @if (all || create || update)
                    {
                        <a onclick="clearForm()" class="btn btn-sm default btn-circle">@Html.Raw(Resources.Global._cancel)</a>
                    }
                                        #if(id>0){#
                                        @if (all || delete)
                    {
                        <a onclick="removeBusinessGroup('#=id#')" class="btn btn-sm red btn-circle">@Html.Raw(Resources.Global._delete)</a>
                    }
                                        #}#
                                        @if (all || create || update)
                    {
                        <button type="submit" class="btn btn-sm blue btn-circle">@Html.Raw(Resources.Global._save)</button>
                        <a onclick="saveAndClear()" class="btn btn-sm green btn-circle">@Html.Raw(Resources.Global._save_new)</a>
                    }
                </div>
            </div>
        </div>
    </form>
</script>
@Html.Partial("_UserInGroup_Extension")
<script type="text/x-kendo-template" id="NoItemsTemplate">
    <div class="text-center" style="padding: 30px 0 20px 0;">
        <img src="@Url.Content("~/Images/matbuon.png")" />
        <div style="font-size: 18px; margin-top: 10px;">@Html.Raw(Resources.Global._have_not) @Html.Raw(Resources.Global._showroom_lower) @Html.Raw(Resources.Global._yet)</div>
        <div style="margin-top:10px;"><a onclick="clearForm()" class="btn btn-default btn-circle btn-outline btn-sm">@Html.Raw(Resources.Global._create) <i class="fa fa-arrow-right"></i></a></div>
    </div>
</script>
<script>      
    function cardSelected(e) {
        $(".todo-tasklist-item").removeClass("selected");
        $(e).closest(".todo-tasklist-item").addClass("selected");
    }
    function removeBusinessGroup(id) {
        bootbox.dialog({
            message: "@Resources.Global._are_your_sure", title: "@Resources.Global._del_BusinessGroup",
            buttons:
                {
                    //success:
                    //    { label: "Success!", className: "green", callback: function () { alert("great success") } },
                    danger: { label: "@Resources.Global._close", className: "btn default btn-circle btn-sm", callback: function () { } },
                    main: {
                        label: "@Resources.Global._confirm", className: "btn green btn-circle btn-sm", callback: function () {
                            App.blockUI({ boxed: !0, message: '@Resources.Global._just_amoment...' });
                            $.post(r + "/BusinessGroup/deleteBusinessGroup", { id: id }, function (data) {
                                if (data.success) {
                                    $("#listView").data("kendoListView").dataSource.read();
                                    toastr.clear();
                                    toastr.success('', '@Resources.Global._delete_successfully');
                                    clearForm();
                                } else {
                                    toastr.clear();
                                    toastr.error('', data.error);
                                }
                                App.unblockUI();
                            });
                        }
                    }
                }
        })
    }
    var reset = false;
    function saveAndClear() {
        reset = true;
        $('#EditForm').submit();
    }
    function clearForm() {
        loadForm(JSON.parse('@Html.Raw(Json.Encode(newData))'));
    }    
    function edit(e) {
        var data = $("#listView").data("kendoListView").dataItem($(e).closest(".todo-tasklist-item"))
        loadForm(data);
        cardSelected(e);
        if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
            $("html, body").animate({
                scrollTop: $(".formEdit").offset().top
            }, 600);
        } else {
            $("html, body").animate({
                scrollTop: $(".formEdit").offset().top - 70
            }, 600);
        }
    }
    function loadForm(data) {
        var EditTemplate = kendo.template($("#EditTemplate").html());
        $(".formEdit").html(EditTemplate(data));
        loadValidate(data);        
        $(".tagsinput").tagsinput()
    }
    loadForm(JSON.parse('@Html.Raw(Json.Encode(newData))'));

    function loadValidate(currentData) {
        var e = $("#EditForm"),
        r = $(".alert-danger", e),
        i = $(".alert-success", e);
        e.validate(
            {
                errorElement: "span",
                errorClass: "help-block help-block-error",
                focusInvalid: !1,
                ignore: "",
                rules:
                    {
                        groupCode: { minlength: 5, required: !0 },
                        name: { minlength: 5, required: !0 }                                          
                    },
                invalidHandler: function (e, t) {
                    i.hide(), r.show(), App.scrollTo(r, -200)
                },
                errorPlacement: function (e, r) {
                    var i = $(r).parent(".input-icon").children("i");
                    i.removeClass("fa-check").addClass("fa-warning"),
                    i.attr("data-original-title",
                        e.text()).tooltip({ container: "body" })
                },
                highlight: function (e) {
                    $(e).closest(".form-group").removeClass("has-success").addClass("has-error")
                },
                unhighlight: function (e) {
                },
                success: function (e, r) {
                    var i = $(r).parent(".input-icon").children("i");
                    $(r).closest(".form-group").removeClass("has-error").addClass("has-success"),
                    i.removeClass("fa-warning").addClass("fa-check")
                },
                submitHandler: function (e) {
                    i.show(); r.hide();
                    //e[0].submit()
                    $(e).ajaxSubmit({
                        beforeSend: function () {
                            App.blockUI({ boxed: !0, message: '@Resources.Global._just_amoment...' });
                        },
                        success: function (data) {
                            if (data.success) {
                                toastr.success('', '@Resources.Global._save_successfully')
                                $("#listView").data("kendoListView").dataSource.read();
                                if (reset) {
                                    reset = false;
                                    loadForm(JSON.parse('@Html.Raw(Json.Encode(newData))'));
                                } else {
                                    if (currentData.id == 0) {
                                        loadForm(data.data);
                                    }
                                    setTimeout(function () { $(".todo-tasklist-item_" + data.data.id).addClass("selected") }, 1000);
                                }
                            }
                            else {
                                toastr.error('', data.error)
                            }
                        },
                        complete: function (xhr) {
                            App.unblockUI();
                        }
                    });
                }
            });
    }  

    function Search(e) {
        listView = $("#listView").data("kendoListView");
        var seachText = $(e).val();

        var filter = { logic: "and", filters: [] };
        var filterDesc = { logic: "or", filters: [] };

        if (seachText.length) {
            filterDesc.filters.push({ field: "groupCode", operator: "contains", value: seachText });
            filterDesc.filters.push({ field: "name", operator: "contains", value: seachText });
            filterDesc.filters.push({ field: "email", operator: "contains", value: seachText });
            filterDesc.filters.push({ field: "phone", operator: "contains", value: seachText });
            filter.filters.push(filterDesc);
        }

        listView.dataSource.filter(filter);
    }    

    function onDatabound(e) {
        var listView = this;

        // ask the parameterMap to create the request object for you
        var requestObject = (new kendo.data.transports["aspnetmvc-server"]({ prefix: "" }))
        .options.parameterMap({
            page: listView.dataSource.page(),
            sort: listView.dataSource.sort(),
            filter: listView.dataSource.filter()
        });

        // Get the export link as jQuery object
        var $exportLink = $('.export');


        // Get its 'href' attribute - the URL where it would navigate to
        var href = $exportLink.attr('href');

        if (href) {
            // Update the 'page' parameter with the listView's current page
            //href = href.replace(/page=([^&]*)/, 'page=' + requestObject.page || '~');

            // Update the 'sort' parameter with the listView's current sort descriptor
            href = href.replace(/sort=([^&]*)/, 'sort=' + requestObject.sort || '~');

            // Update the 'pageSize' parameter with the listView's current pageSize
            //href = href.replace(/pageSize=([^&]*)/, 'pageSize=' + listView.dataSource._pageSize);

            //update filter descriptor with the filters applied

            href = href.replace(/filter=([^&]*)/, 'filter=' + (requestObject.filter || '~'));

            // Update the 'href' attribute
            $exportLink.attr('href', href);
        }

        if (this.dataSource.total() == 0) {
            var NoItemsTemplate = kendo.template($("#NoItemsTemplate").html());
            $(this.element).next("#listView_pager").css('display', 'none');
            $(this.element).html(NoItemsTemplate({}));
        } else {
            $(this.element).next("#listView_pager").css('display', 'block');
        }
    }

    function changeLeader(e) {
        var leaderId = $("#leader").data("kendoDropDownList").value();        
       
        $.post(r + "/CustomData/GetUserDetail", { leaderId: leaderId }, function (data) {
            if (data.success) {              
                $('.email').val(data.data[0].email);
                $('.phone').val(data.data[0].phone);
            }         
        });       
    };

    function filterbyLeader() {
        return {
            leader: $("#leader").val()
        };
    }
</script>
