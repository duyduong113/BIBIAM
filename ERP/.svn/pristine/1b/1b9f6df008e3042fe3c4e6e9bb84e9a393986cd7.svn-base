@using ERPAPD.Models
@{
    ViewBag.Title = "Cấu hình tham số";
}
@{
    var dict = Model != null ? (Dictionary<string, object>)Model : new Dictionary<string, object>();
    var asset = dict.ContainsKey("asset") ? (Dictionary<string, bool>)dict["asset"] : new Dictionary<string, bool>();
    // var listActiveStatus = dict.ContainsKey("activestatus") ? (List<ActiveStatus>)dict["activestatus"] : new List<ActiveStatus>();

    bool AllowCreate = (ViewData["AllowCreate"] != null && (bool)ViewData["AllowCreate"]);
    bool AllowUpdate = (ViewData["AllowUpdate"] != null && (bool)ViewData["AllowUpdate"]);
    bool AllowDelete = (ViewData["AllowDelete"] != null && (bool)ViewData["AllowDelete"]);
    bool AllowExport = (ViewData["AllowExport"] != null && (bool)ViewData["AllowExport"]);
    bool AllowImport = (ViewData["AllowImport"] != null && (bool)ViewData["AllowImport"]);
}
<script src="~/Scripts/assets/js/select2.min.js"></script>
<script src="@Url.Content("~/Scripts/jquery.blockUI.js")"></script>

<div class="row-fluid">
    <div class="span12">
        <div class="widget-box">
            <div class="row-fluid">
                <div class="span12">
                    <section class="col col-lg-4" style="float:left">
                        <label class="input">
                            <input type="text" class="input-xs" id="txtSearch" placeholder="Nhập loại hoặc giá trị đê tìm kiếm">
                        </label>
                    </section>
                    <button type="button" id="btnSearch" class="btn btn-primary btn-small" onclick="doSearch()" style="float:none">@Resources.Multi.Filter</button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row-fluid">
    <div class="span12">
        <!-- NEW COL START -->
        <article class="col-sm-12">
            <div class="widget-body">
                @(Html.Kendo().Grid<ERPAPD.Models.Parameters>()
        .Name("grid")
                    .Columns(columns =>
                    {
                        columns.Bound(p => p.ID).HeaderTemplate("<input style='text-align:center;opacity:1;' type='checkbox' id= 'checkboxcheckAll'  onClick='checkAll(this)' />").ClientTemplate("<input style='text-align:center' class='checkrowid' type='checkbox' id='#=ID#'  />").Width(30).Filterable(false).Sortable(false);
                        // columns.Bound(p => p.Id).HtmlAttributes(new { data_id = "#=Id#", onclick = "onOpenPopupDe(1,this)", @style = "color:\\#428bca;cursor:pointer;text-decoration:underline" }).Title("ID").Width(60).Hidden();
                        // columns.Bound(p => p.ParamID).HtmlAttributes(new { data_id = "#=Id#", onclick = "onOpenPopupDe(1,this)", @style = "color:\\#428bca;cursor:pointer;text-decoration:underline" }).Title("ParamID").Width(60);
                        columns.Bound(p => p.ParamID).Title("Mã tham số")
                            .HtmlAttributes(new { data_column = "ParamID", style = "text-align:left; background-color: rgb(198, 239, 206);" })
                            .Width(140);
                        columns.Bound(p => p.Type).Title("Loại")
                            .HtmlAttributes(new { data_column = "Type", style = "text-align:left; background-color: rgb(198, 239, 206);" })
                            .Width(104);
                        columns.Bound(p => p.Value).Title("Giá trị")
                            .HtmlAttributes(new { data_column = "Value", style = "text-align:left; background-color: rgb(198, 239, 206);" }).Width(210);
                        columns.Bound(p => p.Descr).Title("Mô tả").HtmlAttributes(new { data_column = "Descr", style = "text-align:left; background-color: rgb(198, 239, 206);" }).Width(280);
                        columns.Bound(p => p.Status).Width(120).Title("Trạng thái").ClientTemplate("#if(Status == true){#Hoạt động#}else{#Ngưng hoạt động#}#").HtmlAttributes(new { style = "background-color:\\#dff0d8;color:\\#468847" });
                        columns.Bound(p => p.CreatedBy).Title("Người tạo").Width(95);
                        columns.Bound(p => p.CreatedAt).Width(110).Format("{0:dd/MM/yyyy}").HtmlAttributes(new { style = "text-align:left;" }).Title("Ngày tạo").Width(110);
                        columns.Bound(p => p.UpdatedBy).Title("Người cập nhật").Width(110);
                        columns.Bound(o => o.UpdatedAt).Title("Ngày cập nhật").Format("{0:dd/MM/yyyy}").Width(110).ClientTemplate("#if(kendo.toString(UpdatedAt,'dd/MM/yyyy') != '01/01/1900'){#" + "#= kendo.toString(UpdatedAt,'dd/MM/yyyy') #" + "#}#");
                    })
                    .ToolBar(toolBar =>
                    {
                    toolBar.Template(@<text>
                            <div class="pull-left">
                                <a class="btn btn-success btn-small" href="javascript:void(0)" id="btnGridAdd" onclick="Create()">
                                    @*<i class="icon-plus"></i>*@ @Resources.Multi.btnAdd
                                </a>
                                <a class="btn btn-primary btn-small" href="javascript:void(0)" id="btnGridSave" onclick="Update()">
                                    @*<i class="icon-plus"></i>*@ @Resources.Multi.btnSave
                                </a>
                                <a class="btn btn-default btn-small " href="javascript:void(0)" id="btnGridCancel" onclick="Cancel()">
                                    @*<i class="icon-plus"></i>*@ Hủy thay đổi
                                </a>
                                <a class="btn btn-danger btn-small" href="javascript:void(0)" id="btnGridCancel" onclick="showConfirmPopup(1)">
                                    @*<i class="icon-plus"></i>*@ Xóa bỏ
                                </a>
                                @*<a class="btn btn-info btn-small" href="@Url.Content("~/Groups/Excel_Export")" id="btnGridExport">
                                    <i class="fa fa-file-excel-o fa-1"></i>@Resources.Multi.GridExport
                                </a>*@              
                            </div>
                        </text>);

                    })
                    .Events(events => { events.DataBound("onDatabound"); })
                    .Pageable(pager => pager.PageSizes(new[] { 20, 100, 200, 300 }))
                    .Resizable(r => r.Columns(true))
                    .Editable(e => e.Mode(GridEditMode.InCell))
                    .Navigatable()
                    .Scrollable()
                    .Sortable()
                    .DataSource(dataSource => dataSource
                        .Ajax()
                        .Batch(true)
                        .PageSize(100)
                        //.Sort(sort =>
                        //{
                        //    sort.Add("ParamID").Ascending();
                        //})
                        .Model(model =>
                        {
                            model.Id(p => p.ID);
                            model.Field(p => p.ID).Editable(false);
                            model.Field(p => p.CreatedBy).Editable(false);
                            model.Field(p => p.CreatedAt).Editable(false);
                            model.Field(p => p.UpdatedBy).Editable(false);
                            model.Field(p => p.UpdatedAt).Editable(false);
                            model.Field(p => p.Status).DefaultValue(true);
                        })
                         .Events(e => { e.Error("error_handler"); e.RequestEnd("onRequestEnd"); })
                    .Read(read => read.Action("Read", "Utilities_Parameters"))
                    .Create(read => read.Action("UpdateDetail", "Utilities_Parameters"))
                    .Update(read => read.Action("UpdateDetail", "Utilities_Parameters"))
                    )
                )
            </div>
        </article>
        <!-- END COL -->
        <!--Xuanph - add - 24/12/2015 -->
    </div>
    
</div>
@Html.Partial("_popup")

<script>
    var indexTabstripActive = -1;
    var contentTab;
    $(document).ready(function () {
        //document.title = "Cấu hình tham số";
        //goi ham search khi nhan enter
        $("#txtSearch").keypress(function (e) {
            if (e.keyCode == 13) {
                doSearch();
            }
        });
        

    });
    //========================================== code co ban ====================================
    //search
    function doSearch() {
        var grid = $("#grid").data("kendoGrid");
        var filter = { logic: "and", filters: [] };
        var text = $("#txtSearch").val();
        if (text) {
            var filterOr = { logic: "or", filters: [] };
            filterOr.filters.push({ field: "ParamID", operator: "contains", value: text });
            filterOr.filters.push({ field: "Value", operator: "contains", value: text });
            filterOr.filters.push({ field: "Descr", operator: "contains", value: text });
            filterOr.filters.push({ field: "Type", operator: "contains", value: text });
            filter.filters.push(filterOr);
        }
        //text = $("#selectIsActive_search").val();
        //if (text) {
        //    filter.filters.push({ field: "IsActive", operator: "eq", value: text });
        //}
        grid.dataSource.filter(filter);
    }
    //grid
    function onDatabound(e) {
        resizegrid();
        var grid = $("#grid").data("kendoGrid");
        // ask the parameterMap to create the request object for you
        var requestObject = (new kendo.data.transports["aspnetmvc-server"]({ prefix: "" }))
        .options.parameterMap({
            page: grid.dataSource.page(),
            sort: grid.dataSource.sort(),
            filter: grid.dataSource.filter()
        });
        var $exportLink = grid.element.find('.export');

        var href = $exportLink.attr('href');
        if (href) {
            href = href.replace(/sort=([^&]*)/, 'sort=' + requestObject.sort || '~');
            href = href.replace(/filter=([^&]*)/, 'filter=' + (requestObject.filter || '~'));
            $exportLink.attr('href', href);
        }
        $("#divLoading").hide();
    }
    function error_handler(e) {
        if (e.errors) {
            var message = "@Resources.Multi.Error:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
        }
    }

    //function onRequestStart(e) {
    //    $("#divLoading").show();
    //}

   function onRequestEnd(e) {
        if (e.type == "update" || e.type == "create" || e.type == "delete") {
            if (e.response.Errors == null) {
                if (e.response.Errors == null) {
                    $.gritter.add({
                        title: '',
                        text: '@Resources.Multi.Save @Resources.Multi.Success.ToLower()',
                        class_name: 'gritter-success'
                    });
                }
            }
        }
    }

    function onRequestStart(e) {
        blockUI(false);
    }

    function blockUI(isMark) {
        if (isMark) {
            $(document).ajaxStart($.blockUI({ message: '<i class="fa fa-spinner fa-3x fa-lg fa-spin txt-color-blueDark"></i>', theme: false })).ajaxStop($.unblockUI);
        }
        else {
            $(document).ajaxStart($.blockUI({
                message: '<i class="fa fa-spinner fa-3x fa-lg fa-spin txt-color-blueDark"></i>', theme: false, overlayCSS: {
                    backgroundColor:

            'transparent'
                }
            })).ajaxStop($.unblockUI);
        }
    }
    //========================================== code khac neu co ====================================

    function resizegrid() {
        var offsetbottom = parseInt($(window).height()) - parseInt($('#grid').offset().top);
        var gridElement = $("#grid"),
        dataArea = gridElement.find(".k-grid-content"),
        otherElements = gridElement.children().not(".k-grid-content"),
        otherElementsHeight = 0;
        otherElements.each(function () {
            otherElementsHeight += $(this).outerHeight();
        });
        dataArea.height(offsetbottom - otherElementsHeight - 1);
    }
    // BaoHV add
    function Update() {
        if ($('#grid').data('kendoGrid').dataSource.hasChanges() == true) {
            $('#grid').data('kendoGrid').saveChanges();
        }
    }
    function Create()
    {
        $("#grid").data("kendoGrid").dataSource.insert();
    }
    function Cancel() {
        $('#grid').data('kendoGrid').cancelChanges();
    }
    function checkAll(e) {
        var x = $(e).prop('checked');
        $('#grid').find(".checkrowid").each(function () {
            $(this).prop('checked', x);
        });
    }
</script>

