@using BIBIAM.Core.Entities;
@using MCC.Models;
@using CloudinaryDotNet;
@{
    ViewBag.Title = Html.Raw(Resources.Global.order_info);
    bool all = ViewBag.accessDetail != null ? ViewBag.accessDetail.access["all"] : false;
    bool view = ViewBag.accessDetail != null ? ViewBag.accessDetail.access["view"] : false;
    bool update = ViewBag.accessDetail != null ? ViewBag.accessDetail.access["update"] : false;
    bool create = ViewBag.accessDetail != null ? ViewBag.accessDetail.access["create"] : false;
    bool delete = ViewBag.accessDetail != null ? ViewBag.accessDetail.access["delete"] : false;
    bool export = ViewBag.accessDetail != null ? ViewBag.accessDetail.access["export"] : false;
}
@{
    var newData = new Merchant_OrderHeader();
    
}
<script src="~/Scripts/utilitycommon.js"></script>
<style>
    .k-pager-wrap {
        background: none;
        border: none;
        box-shadow: none;
        padding-top: 10px;
    }

    .todo-tasklist-item.selected {
        background-color: #D2EDF3;
    }

    .bootstrap-tagsinput {
        width: 100%;
    }

    .AccessRightsMobileBootbox .modal-dialog {
        width: 90%;
    }

    .active-color {
        color: blue;
    }

    .inactive-color {
        color: red;
    }

    .max100 {
        max-width: 100%;
    }
</style>

<div class="row">
    <div class="col-md-4">
        <script type="text/x-kendo-tmpl" id="template">
            <div class="todo-tasklist-item todo-tasklist-item-border-green todo-tasklist-item_#=id#" style="cursor:default;">
               
                <div class="col-md-8" style="padding-left:0;">
                    <div class="todo-tasklist-item-title" style="padding-bottom:2px;">
                        #=ma_don_hang#
                    </div>
                    <div class="todo-tasklist-item-text">
                        #=hoten#
                    </div>
                    <span class="item-status pull-right">
                        <a onclick="edit(this)" class="todo-username-btn btn btn-circle btn-info btn-sm " style="margin-right:-95px "><i class="fa fa-eye"></i> @Html.Raw(Resources.Global._detail)</a>
                    </span>
                    <div class="todo-tasklist-item-text">
                        #=so_dien_thoai_giao#
                    </div>
                    
                    <div class="todo-tasklist-item-text">
                        #=dia_chi_giao_hang# - #=quan_huyen_giao# -
                        #=tinh_thanh_giao#
                    </div>
                    <div class="todo-tasklist-item-text" style="color:red">
                        #=trang_thai_don_hang#
                    </div>
                </div>
            </div>
        </script>
        <div class="portlet light bordered">
            <div class="portlet-title">
                    <div class="caption">
                        <span class="caption-subject bold uppercase">@Html.Raw(Resources.Global.order_list)</span>
                    </div>
                    
                    <div class="inputs pull-right">
                        <div class="portlet-input input-inline input-small">
                            <div class="input-icon right">
                                <i class="icon-magnifier"></i>
                                <input type="text" class="form-control form-control-solid input-circle" id="SearchText" onkeyup="Search(this)" placeholder="@Html.Raw(Resources.Global._search)...">
                            </div>
                        </div>
                    </div>
                    <div class="btn-group">
                        <a class="btn btn-circle blue btn-sm" onclick="showMoreFilter(this)">
                            <span class="moreFilterText">@Html.Raw(Resources.Global._more)</span>
                            <i class="fa fa-filter"></i>
                        </a>
                    </div>
                    <div class="inputs" style="margin-right:10px;">
                        <a onclick="clearForm()" class="btn btn-default btn-circle btn-outline btn-sm">@Html.Raw(Resources.Global._create) <i class="fa fa-arrow-right"></i></a>
                    </div>
                </div>
            <div class="portlet-body">
                <div class="row filterMore" style="display: none; padding-bottom: 20px;margin-bottom:10px">
                    <div class="col-md-12">
                        <form role="form" class="filterForm">
                            <div class="row" style="margin-bottom:5px;">
                                <div class="col-md-12">
                                    <label>@Html.Raw(Resources.Global._status)</label>
                                    @(Html.Kendo().DropDownList()
                                        .Name("trang_thai")
                                        .DataTextField("Text")
                                        .OptionLabel("TRẠNG THÁI")
                                        .DataValueField("Value")
                                        .HtmlAttributes(new { @style = "width:100%;" })
                                        .OptionLabel(Html.Raw(Resources.Global._status).ToString())
                                        .BindTo(new List<SelectListItem>() {
                                          new SelectListItem() {
                                              Text = "MỚI",
                                              Value = "New"
                                          },
                                          new SelectListItem() {
                                              Text = "XÁC NHẬN",
                                              Value = "Confirm"
                                          },
                                          new SelectListItem() {
                                              Text = "VẬN CHUYỂN",
                                              Value = "Shipping"
                                          },
                                          new SelectListItem() {
                                              Text = "ĐÃ GIAO",
                                              Value = "POD"
                                          },
                                          new SelectListItem() {
                                              Text = "HOÀN TẤT",
                                              Value = "Completed"
                                          },
                                          new SelectListItem() {
                                              Text = "HOÀN TẤT",
                                              Value = "Completed"
                                          },
                                          new SelectListItem() {
                                              Text = "HỦY",
                                              Value = "Cancel"
                                          }
                                          
                                          
                                    })
                                    )
                                </div>
                            </div>
                            <div class="row" style="margin-bottom:5px;">
                                <div class="col-md-12">
                                    <label>Từ ngày</label>
                                    <div class="input-group input-icon right date date-picker" data-date-format="dd/mm/yyyy">
                                        <input type="text" class="form-control input-sm" placeholder="dd/MM/yyyy" id="ngay_bat_dau" readonly>
                                        <span class="input-group-btn">
                                            <button class="btn default input-sm" type="button">
                                                <i class="fa fa-calendar"></i>
                                            </button>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="row" style="margin-bottom:5px;">
                                <div class="col-md-12">
                                    <label>Đến ngày</label>
                                    <div class="input-group input-icon right date date-picker" data-date-format="dd/mm/yyyy">
                                        <input type="text" class="form-control input-sm" placeholder="dd/MM/yyyy" id="ngay_ket_thuc" readonly>
                                        <span class="input-group-btn">
                                            <button class="btn default input-sm" type="button">
                                                <i class="fa fa-calendar"></i>
                                            </button>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="row" style="margin-bottom:5px;">
                                <div class="col-md-12 text-right">
                                    <div class="btn-group">
                                        <a class="btn btn-circle red btn-sm clearFilter" onclick="clearFilter()">
                                            <span class="moreFilterText">@Html.Raw(Resources.Global._clear)</span>
                                            <i class="fa fa-close"></i>
                                        </a>
                                        <a class="btn btn-circle btn-sm green" onclick="filter()" style="margin-left:5px;"><i class="fa fa-search"></i> @Html.Raw(Resources.Global._search)</a>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
                <div class="todo-tasklist">
                    @(Html.Kendo().ListView<BIBIAM.Core.Entities.Merchant_OrderHeader>()
                            .Name("listView")
                            .TagName("div")
                            .HtmlAttributes(new { @class = "general-item-list", @style = "border-style:none;box-shadow:none;" })
                            .ClientTemplateId("template")
                            .DataSource(dataSource =>
                            {
                                dataSource.Read(read => read.Action("Read", "Merchant_Order"));
                                dataSource.PageSize(10).Sort(s => s.Add(a => a.id).Descending());
                            })
                            .Events(events => { events.DataBound("onDatabound"); })
                            .Pageable()
                    )
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-8 formEdit">
    </div>
</div>
@Html.Partial("_From_Order_Detail")
@Html.Partial("_Order_Grid_Partial")
@Html.Partial("popup_AddDetail")
@Html.Partial("popup_Cancel")
<script>
    $(document).ready(function () {
        loadForm(JSON.parse('@Html.Raw(Json.Encode(newData))'));
        Search();
    });
    function filterDistrict() {
        return {
            ma_thanh_pho: $("#tinh_thanh_giao").val()
        };
    }
    var trang_thai_don_hang = "";
    function onConfirm() {
        trang_thai_don_hang = "Confirm";
        ChangeStatus();
    }
    function onShipping() {
        trang_thai_don_hang = "Shipping";
        ChangeStatus();
    }
    function onPOD() {
        trang_thai_don_hang = "POD";
        ChangeStatus();
    }
    function onCompleted() {
        trang_thai_don_hang = "Completed";
        ChangeStatus();
    }
    function Cancel() {
        $.ajax({
            type: "POST",
            async: true,
            url: r + "/Merchant_Order/Cancel",
            data: { ma_don_hang: $("#ma_don_hang").val(), ly_do_huy:$("#ly_do_huy").val() },
            dataType: "json",
            success: successFunc,
            error: errorFunc
        });

        function successFunc(data) {
            if (data.success) {
                $("#listView").data("kendoListView").dataSource.read();
                loadForm(data.data);
                toastr.clear();
                toastr.success('', 'Thành công');
            }
            else {
                toastr.clear();
                toastr.error('', data.error);
            }
        }

        function errorFunc() {
            toastr.clear();
            toastr.error('', "Lỗi");
        }
        bootbox.hideAll();
    };
    function showMoreFilter(e) {
        if ($(".filterMore").css("display") == "none") {
            $(".filterMore").css("display", "block");
            $(".clearFilter").css("display", "block");
            $(e).find(".moreFilterText").html("@Html.Raw(Resources.Global._simple)");
        } else {
            $(".filterMore").css("display", "none");
            $(".clearFilter").css("display", "none");
            $(e).find(".moreFilterText").html("@Html.Raw(Resources.Global._more)");
        }
    }
    function clearFilter() {
        $(".filterForm")[0].reset();
        filter();
    }
    function filter() {
        debugger
        listView = $("#listView").data("kendoListView");
        var trang_thai = $("#trang_thai").val();
        var SearchText = $("#SearchText").val();
        var s_date = $("#ngay_bat_dau").val();
        var e_date = $("#ngay_ket_thuc").val();
        e_date = new Date(e_date);
        s_date = new Date(s_date);
        e_date.setDate(e_date.getDate() + 1);
        var filter = { logic: "and", filters: [] };
        if (s_date&&e_date) {
            var filterCreatedDate = { logic: "and", filters: [] };
            filterCreatedDate.filters.push({ field: "ngay_tao", operator: "gte", value: s_date });
            filterCreatedDate.filters.push({ field: "ngay_tao", operator: "lte", value: e_date });
            filter.filters.push(filterCreatedDate);
        }
        if (trang_thai) {
                filter.filters.push({ field: "trang_thai_don_hang", operator: "eq", value: trang_thai });
        }
        if (SearchText) {
                var filterDesc = { logic: "or", filters: [] };
                filterDesc.filters.push({ field: "ma_don_hang", operator: "contains", value: seachText });
                filterDesc.filters.push({ field: "so_dien_thoai_giao", operator: "contains", value: seachText });
                filterDesc.filters.push({ field: "hoten", operator: "contains", value: seachText });
                filter.filters.push(filterDesc);
        }
        listView.dataSource.filter(filter);
    }
        function ChangeStatus() {
            $.ajax({
                type: "POST",
                async: true,
                url: r + "/Merchant_Order/ChangeStatus",
                data: { ma_don_hang: $("#ma_don_hang").val(), trang_thai_don_hang: trang_thai_don_hang },
                dataType: "json",
                success: successFunc,
                error: errorFunc
            });

            function successFunc(data) {
                if (data.success) {
                    $("#listView").data("kendoListView").dataSource.read();
                    loadForm(data.data);
                    toastr.clear();
                    toastr.success('', 'Thành công');
                }
                else {
                    toastr.clear();
                    toastr.error('', data.error);
                }
            }

            function errorFunc() {
                toastr.clear();
                toastr.error('', "Lỗi");
            }
        };
        function deleteOrder(ma_don_hang) {
            bootbox.dialog({
                message: "@Resources.Global._are_your_sure", title: "Xóa đơn hàng",
                buttons:
                    {

                        danger: { label: "@Resources.Global._close", className: "btn default btn-circle btn-sm", callback: function () { } },
                        main: {
                            label: "@Resources.Global._confirm", className: "btn green btn-circle btn-sm", callback: function () {
                                App.blockUI({ boxed: !0, message: '@Resources.Global._just_amoment...' });
                                $.post(r + "/Merchant_Order/deleteOrder", { ma_don_hang: ma_don_hang }, function (data) {
                                    if (data.success) {
                                        $("#listView").data("kendoListView").dataSource.read();
                                        toastr.clear();
                                        toastr.success('', 'Xóa thành công');
                                        clearForm();
                                    } else {
                                        toastr.clear();
                                        toastr.error('', data.error);
                                    }
                                    App.unblockUI();
                                });
                            }
                        }
                    }
            })
        }
        function Search(e) {
            listView = $("#listView").data("kendoListView");
            var seachText = $(e).val();

            var filter = { logic: "and", filters: [] };
            var filterDesc = { logic: "or", filters: [] };

            if (seachText) {
                filterDesc.filters.push({ field: "ma_don_hang", operator: "contains", value: seachText });
                filterDesc.filters.push({ field: "so_dien_thoai_giao", operator: "contains", value: seachText });
                filterDesc.filters.push({ field: "hoten", operator: "contains", value: seachText });
                filter.filters.push(filterDesc);
            }
            listView.dataSource.filter(filter);
        }
        function deleteRow(e) {
            var data = $("#OrderDetailGrid").data("kendoGrid").dataItem($(e).parents('tr'));
            if (data)
                $("#OrderDetailGrid").data("kendoGrid").dataSource.remove(data);
        }
        function LineStatus(data) {
            if (data.trang_thai_don_hang == "New") {
                $("#New").removeClass("inactive").addClass("done");
            }
            else {
                if (data.trang_thai_don_hang == "Confirm") {
                    $("#New,#Confirm").removeClass("inactive").addClass("done");

                }
                else {
                    if (data.trang_thai_don_hang == "Shipping") {
                        $("#New,#Confirm").removeClass("inactive").addClass("done");
                        $("#Shipping").removeClass("inactive").addClass("error");
                    }
                    else {
                        if (data.trang_thai_don_hang == "POD") {
                            $("#New,#Confirm,#Shipping,#POD").removeClass("inactive").addClass("done");
                        }
                        else if (data.trang_thai_don_hang == "Completed") {
                            $("#New,#Confirm,#Shipping,#POD,#Completed").removeClass("inactive").addClass("done");
                        }
                    }
                }
            }
        }
        function onDatabound(e) {
            var holdMaSP = "";
            var listView = this;
            var requestObject = (new kendo.data.transports["aspnetmvc-server"]({ prefix: "" }))
            .options.parameterMap({
                page: listView.dataSource.page(),
                sort: listView.dataSource.sort(),
                filter: listView.dataSource.filter()
            });
            var $exportLink = $('.export');
            var href = $exportLink.attr('href');

            if (href) {
                href = href.replace(/sort=([^&]*)/, 'sort=' + requestObject.sort || '~');
                href = href.replace(/filter=([^&]*)/, 'filter=' + (requestObject.filter || '~'));
                $exportLink.attr('href', href);
            }
        }
        function onDataboundPopup(e) {
            var listView = this;
            var requestObject = (new kendo.data.transports["aspnetmvc-server"]({ prefix: "" }))
            .options.parameterMap({
                page: listView.dataSource.page(),
                sort: listView.dataSource.sort(),
                filter: listView.dataSource.filter()
            });
            var $exportLink = $('.export');
            var href = $exportLink.attr('href');

            if (href) {
                href = href.replace(/sort=([^&]*)/, 'sort=' + requestObject.sort || '~');
                href = href.replace(/filter=([^&]*)/, 'filter=' + (requestObject.filter || '~'));
                $exportLink.attr('href', href);
            }
        }
        function clearForm() {
            loadForm(JSON.parse('@Html.Raw(Json.Encode(newData))'));
        }
        function loadForm(data) {

            var EditTemplate = kendo.template($("#OrderHeader").html());
            $(".formEdit").html(EditTemplate(data));
            var GridTemplate = kendo.template($("#OrderDetailGrid").html());
            $("#gridTemplate").html(GridTemplate(data));
            loadValidate(data);
            LineStatus(data);
            $(".date-picker").datepicker({
                rtl: App.isRTL(), autoclose: !0,
            });
        }
        function gridSelected(e) {
            $(".todo-tasklist-item").removeClass("selected");
            $(e).closest(".todo-tasklist-item").addClass("selected");
        }
        function openCancel() {
            var CancelTemplate = kendo.template($("#CancelTemplate").html());
            bootbox.dialog({
                closeButton: true,
                message: CancelTemplate(0),
                title: "Hủy đơn hàng",
                buttons:
                {
                    danger: { label: "@Html.Raw(Resources.Global._close)", className: "btn default btn-circle btn-sm", callback: function () { } },
                    main: { label: "@Html.Raw(Resources.Global._cancel)", className: "btn red btn-circle btn-sm", callback: function () { Cancel(); return false; } },
                }
            });
            $(".date-picker").datepicker({ rtl: App.isRTL(), orientation: "left", autoclose: !0 });
        }
        function openCreateDetailPO() {
            var CreatePOTemplate = kendo.template($("#CreatePOTemplate").html());
            bootbox.dialog({
                closeButton: true,
                message: CreatePOTemplate(0),
                title: "@Html.Raw(Resources.Global._add_product) ",
                buttons:
                {
                    danger: { label: "@Html.Raw(Resources.Global._close)", className: "btn default btn-circle btn-sm", callback: function () { } },
                    main: { label: "@Html.Raw(Resources.Global._po_new_buttonnew)", className: "btn green btn-circle btn-sm", callback: function () { SaveToGrid(); return false; } },
                }
            });
            $(".date-picker").datepicker({ rtl: App.isRTL(), orientation: "left", autoclose: !0 });
            loadValidateCreatePOForm();
        }
        function SaveToGrid() {
            InsertToGrid();
        }
        function InsertToGrid() {
            debugger
            var ma_san_pham = item.ma_san_pham;
            var so_luong = $("#so_luong").val();
            var so_luong_khuyen_mai = $("#so_luong_khuyen_mai").val();
            var khuyen_mai = $("#phan_tram_khuyen_mai").val();
            if (!ma_san_pham) {
                alert("Chọn Sản Phẩm");
                return;
            }
            if (!so_luong) {
                alert("Nhập số lượng");
                return;
            }
            $.ajax({
                type: "POST",
                async: true,
                url: r + "/Merchant_Order/GetProductInfo",
                data: { ma_san_pham: ma_san_pham },
                dataType: "json",
                success: successFunc,
                error: errorFunc
            });

            function successFunc(data) {
                if (data.success) {
                    var ten_san_pham = data.data.ten_san_pham;
                    var don_gia = data.data.don_gia;
                    var thanh_tien = don_gia * so_luong;
                    var grid = $("#OrderDetailGrid").data("kendoGrid");
                    grid.dataSource.add({ ma_san_pham: ma_san_pham, ten_san_pham: ten_san_pham, don_gia: don_gia, so_luong: so_luong, khuyen_mai: khuyen_mai, thanh_tien: thanh_tien, sp_khuyen_mai: so_luong_khuyen_mai });
                    alert("Đã thêm sản phẩm " + $("#ma_san_pham").val());
                }
                else {
                    alert('error');
                }
            }

            function errorFunc() {
                alert('error');
            }

        }
        function change_grid() {
            var so_loai = 0;
            var so_luong = 0;
            var tong_tien = 0;
            var khuyen_mai = 0;
            for (var i = 0; i < $("#OrderDetailGrid").data("kendoGrid").dataSource.data().length; i++) {
                var dataItem = $("#OrderDetailGrid").data("kendoGrid").dataSource.data()[i];
                so_loai++;
                so_luong += parseInt(dataItem.so_luong);
                tong_tien += parseInt(dataItem.thanh_tien);
                if (dataItem.khuyen_mai != null) {
                    khuyen_mai += parseInt(dataItem.thanh_tien) * dataItem.khuyen_mai / 100;
                }
            }
            $("#so_loai_sp").empty().append('Số loại sản phẩm: ' + so_loai);
            $("#so_luong_sp").empty().append('Số lượng sản phẩm: ' + so_luong);
            $("#tong_tien").empty().append('Tổng tiền đơn hàng: ' + tong_tien);
            $("#khuyen_mai").empty().append('Tổng tiền khuyến mãi: ' + khuyen_mai);
            $("#tien_thanh_toan").empty().append('Tổng tiền thanh toán: ' + (tong_tien - khuyen_mai));
        }

        function edit(e) {
            var data = $("#listView").data("kendoListView").dataItem($(e).closest(".todo-tasklist-item"))
            loadForm(data);

            gridSelected(e);
            if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
                $("html, body").animate({
                    scrollTop: $(".formEdit").offset().top
                }, 600);
            } else {
                $("html, body").animate({
                    scrollTop: $(".formEdit").offset().top - 70
                }, 600);
            }
        }
        function loadValidateCreatePOForm() {

        }
        function loadValidate(currentData) {
            var e = $("#EditForm"),
            r = $(".alert-danger", e),
            i = $(".alert-success", e);
            e.validate(
            {
                errorElement: "span",
                errorClass: "help-block help-block-error",
                focusInvalid: !1,
                ignore: "",
                rules:
                    {
                        dien_thoai: { minlength: 1, required: !0, maxlength: 11 },
                        dia_chi_giao_hang: { minlength: 1, required: !0, maxlength: 255 },
                        quan_huyen_giao: { minlength: 1, required: !0, maxlength: 55 },
                        tinh_thanh_giao: { minlength: 1, required: !0, maxlength: 55 },
                        hinh_thuc_thanh_toan: { minlength: 1, required: !0, maxlength: 100 },

                    },
                invalidHandler: function (e, t) {
                    i.hide(), r.show(), App.scrollTo(r, -200)
                },
                errorPlacement: function (e, r) {
                    var i = $(r).parent(".input-icon").children("i");
                    i.removeClass("fa-check").addClass("fa-warning"),
                    i.attr("data-original-title",
                        e.text()).tooltip({ container: "body" })
                },
                highlight: function (e) {
                    $(e).closest(".form-group").removeClass("has-success").addClass("has-error")
                },
                unhighlight: function (e) {
                },
                success: function (e, r) {
                    var i = $(r).parent(".input-icon").children("i");
                    $(r).closest(".form-group").removeClass("has-error").addClass("has-success"),
                    i.removeClass("fa-warning");
                },
                submitHandler: function (e) {
                    debugger
                    i.show(); r.hide();
                    $("#EditForm").append('<input type="text" name="ma_khach_hang" class="hidden" value="' + customer.ma_khach_hang + '" />');
                    kendo.toString(kendo.parseDate($("#EditForm input[name='ngay_mua']").val()), 'yyyy/MM/dd');
                    var obj = getDataFromGrid();
                    debugger
                    $(e).ajaxSubmit({
                        type: 'POST',
                        data: { details: obj },
                        dataType: 'json',
                        mimeType: "multipart/form-data",
                        beforeSend: function () {
                            App.blockUI({ boxed: !0, message: '@Resources.Global._just_amoment...' });
                        },
                        success: function (data) {
                            if (data.success) {
                                toastr.success('', '@Resources.Global._save_successfully')
                                loadForm(data.data);
                                $("#listView").data("kendoListView").dataSource.read();
                                setTimeout(function () { $(".todo-tasklist-item_" + data.ma_don_hang).addClass("selected") }, 1000);
                                Search();
                            }
                            else {
                                toastr.error('', data.error)
                            }
                        },
                        complete: function (xhr) {
                            App.unblockUI();
                        }

                    });
                }
            });
        }
        function changeCity(e) {
            holdCity = $("#tinh_thanh_giao").val();
        };
        function changeDistrict(e) {
            holdDistrict = $("#quan_huyen_giao").val();
        };
        function onDataProduct() {
            return {
                text: $("#ma_san_pham").val()
            }
        }
        function onDataCustomer() {
            return {
                text: $("#ma_khach_hang").val()
            }
        }
        var item;
        function ChangeTenSP(e) {
            item = this.dataItem(e.item.index());;
            $.ajax({
                type: "POST",
                async: true,
                url: r + "/Merchant_Order/GetProductInfo",
                data: { ma_san_pham: item.ma_san_pham },
                //contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: successFunc,
                error: errorFunc
            });

            function successFunc(data) {
                if (data.success) {
                    $("#createPOForm input[id='don_gia']").val(kendo.toString(data.data.don_gia, 'n0'));
                }
                else {
                    $("#createPOForm input[id='don_gia']").val(data.error)
                }
            }

            function errorFunc() {
                alert('error');
            }
        }
        var customer;
        function ChangeKH(e) {
            debugger
            customer = this.dataItem(e.item.index());
            $("#EditForm input[id='so_dien_thoai_giao']").val(customer.sdt);
        }
        function onSave(data) {
            if (data.values.so_luong < 1 || data.values.so_luong > 1000000) {
                data.preventDefault();
                toastr.warning(data.values.so_luong < 1 ? 'Số lượng tối thiểu là 1' : 'Số lượng tối đa là 1,000,000');
            }
            $("#OrderDetailGrid").data("kendoGrid").refresh();
        }
        function error_handler(e) {
            if (e.errors) {
                if (e.errors) {
                    var message = "\n";
                    $.each(e.errors, function (key, value) {
                        if ('errors' in value) {
                            $.each(value.errors, function () {
                                message += this + "\n";
                            });
                        }
                    });
                    toastr.error(message)
                }
            }
        }
        function Create() {
            $("#OrderDetailGrid").data("kendoGrid").dataSource.insert()
        }
        function Validate() {
            for (var i = 0; i < $("#OrderDetailGrid").data("kendoGrid").dataSource.data().length; i++) {
                var dataItem = $("#OrderDetailGrid").data("kendoGrid").dataSource.data()[i];
                if (dataItem.ma_san_pham == '' || dataItem.ma_san_pham == null) {
                    $("#OrderDetailGrid").data("kendoGrid").dataSource.remove(dataItem);
                    i--;
                }
            }
        }
        function getDataFromGrid() {
            Validate();
            var obj = [];
            $.each($("#OrderDetailGrid").data("kendoGrid").dataSource.data(), function () {
                if (!this.ma_san_pham) {
                    return;
                }
                var detail = new Object();
                detail.ma_san_pham = this.ma_san_pham;
                detail.so_luong = this.so_luong;
                detail.khuyen_mai = this.khuyen_mai;
                detail.sp_khuyen_mai = this.sp_khuyen_mai;
                obj.push(detail);
            });
            return obj;
        }
        function GridPartialonDatabound(e) {
            var count = 0;
            $.each($("#OrderDetailGrid").data("kendoGrid").dataSource.data(), function () {
                if (this.ma_san_pham)
                    count++;
            });
        }
        function Upsert() {
            Validate();
            var grid = $("#OrderDetailGrid").data("kendoGrid");
            if (grid.dataSource.view().length == 0) {
                toastr.error("Phiếu nhập kho này chưa có sản phẩm nào!");
                return;
            }
            $("#EditForm").submit();
        }
        function saveAndClear() {
            Validate();
            var grid = $("#OrderDetailGrid").data("kendoGrid");
            if (grid.dataSource.view().length == 0) {
                toastr.error("Phiếu nhập kho này chưa có sản phẩm nào!");
                return;
            }
            $("#EditForm").submit();
            clearForm();
        }
</script>