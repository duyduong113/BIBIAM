@{
    int global = 0;
    int c = 0;

}
<table id="list-staff-revenue" class="table table-striped table-bordered table-hover">
    <thead>
        <tr align="center">
            <th style="width:25%">Nhân viên</th>
            <th style="width:10%">Miền</th>
            <th style="width:20%">Nhóm</th>
            <th style="width:7%">Tỷ lệ</th>
            <th style="width:15%">Doanh số ký</th>
            <th style="width:15%">DS thực hiện</th>
            <th style="width:0%;display:none">Chuyển năm sau</th>
            <th style="width:0%; display:none">DS khác</th>
            <th style="width:7%">Đứng HĐ</th>
            <th style="width:3%"><button data-rel="tooltip" data-placement="left" title="" data-original-title="Thêm" type="button" class="btn btn-minier btn-success tooltip-success" onclick="plusGroupRevenueStaff()"><i class="icon-plus"></i></button></th>
        </tr>
    </thead>
    <tbody class="list">
        @if (ViewBag.staffDraff != null && ViewBag.staffDraff.Count > 0)
        {

            foreach (var item in ViewBag.staffDraff)
            {
                <tr class="group-staff-revenue">
                   <td>
                       @(Html.Kendo().AutoComplete()
                                    .Name("txt-FullName-" + global)
                                    .DataTextField("FullName")
                                    //.Value(Html.Raw(item.FullName))
                                    .Placeholder("Nhập tên nhân viên")
                                    .Filter("contains")
                                    .MinLength(1)
                                    .HtmlAttributes(new { style = "width:100%", @class = "txt-name-employer", @onfocus = "setGlobal(" + global + ")" })
                                    .DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action("SuggestEmployer", "CRMContractList")
                                                .Data("onAdditionalDataName");
                                        })
                                        .ServerFiltering(true);
                                    })
                                    .Events(e =>
                                    {
                                        e.Select("onSelectItem");
                                    })
                       )
                       <script>
                        $("#txt-FullName-@global").val('@Html.Raw(item.FullName)');
                       </script>
                       @{ global++;}
                   </td>
                    <td>
                        <input type="hidden" name="PKStaff" value="@item.PKStaff" />
                        <input type="hidden" name="StaffId" value="@item.StaffId" />
                        <input type="hidden" name="UnitId" value="@item.UnitId" />
                        <input type="hidden" name="GroupId" value="@item.GroupId" />
                        <input class="staff-revenue-region" value="@item.Province" type="text" disabled />
                    </td>
                    <td><input class="staff-revenue-group" value="@item.TeamName" type="text" disabled /></td>
                    <td><input style="width:80%" name="Percent" onchange="changePercent(true,false)" class="staff-revenue-proportion" value="@item.Percent" type="number" /></td>
                    <td><input onchange="changePercent(false, false)" name="Money" class="staff-revenue-revenue-up currency" value="@item.Money.ToString("#,##0")" type="text" data-thousands="," data-decimal="." data-precision="0" /></td>
                    <td><input name="MoneyInYear" class="staff-revenue-implementation currency" value="@item.MoneyInYear.ToString("#,##0")" type="text" data-thousands="," data-decimal="." data-precision="0" /></td>
                    <td  style="display:none" ><input name="MoneyNextYear" class="staff-revenue-next-year currency" type="text" value="@item.MoneyNextYear.ToString("#,##0")" data-thousands="," data-decimal="." data-precision="0" /></td>
                    <td  style="display:none" ><input  style="display:none" name="MoneyNextYear2" class="staff-revenue-other currency" type="text" value="@item.MoneyNextYear2.ToString("#,##0")" data-thousands="," data-decimal="." data-precision="0" /></td>
                    <td>
                        @if (item.Charge == "checked")
                        {
                            <input name="Charge" type="checkbox" class="staff-revenue-presenter" checked>
                        }
                        else
                        {
                            <input name="Charge" type="checkbox" class="staff-revenue-presenter">
                        }
                    </td>
                    <td>
                        <button data-rel="tooltip" data-placement="left" title="" data-original-title="Xóa" type="button" class="btn btn-minier btn-danger tooltip-error" onclick="minusGroupRevenueStaff(this, '@item.PKStaff')"><i class="icon-minus"></i></button>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>
<script>
    var num = parseInt("@global");
    var chGlobal;
    function setGlobal(k) {
        chGlobal = k;
    }
    function onSelectItem(e) {
        var dataItem = this.dataItem(e.item.index());
        $(this.element).parents(".group-staff-revenue").find("input[name='StaffId']").val(dataItem.RefStaffId);
        $(this.element).parents(".group-staff-revenue").find("input[name='UnitId']").val(dataItem.Region);
        $(this.element).parents(".group-staff-revenue").find("input[name='GroupId']").val(dataItem.Team);
        $(this.element).parents(".group-staff-revenue").find(".staff-revenue-region").val(dataItem.RegionName);
        $(this.element).parents(".group-staff-revenue").find(".staff-revenue-group").val(dataItem.TeamName);
    }
    function onAdditionalDataName() {
        return {
            text: $("#txt-FullName-" + chGlobal).val()
        };
    }
    function changePercent(isP, isSubmit) {
        var sumP = 0;
        $("#list-staff-revenue .group-staff-revenue").each(function (i) {
            if (isP) {
                var per = $(this).find("input[name='Percent']").val();
                var money = moneyBeforeVat * parseInt(per) / 100;
                if (!money) {
                    money = 0;
                }
                $(this).find("input[name='Money']").val(numberToCurrency(money));
            } else {
                var money = currencyToNumber($(this).find("input[name='Money']").val());
                var per = money / moneyBeforeVat * 100;
                $(this).find("input[name='Percent']").val(parseFloat(per).toFixed(2));
            }
            sumP += parseInt(per);
            if (!money) {
                money = 0;
            }
            $(this).find("input[name='MoneyInYear']").val(numberToCurrency(money));
        })
        if (!isSubmit) {
            if (sumP > 100) {
                alert("Tỉ lệ không được hơn 100%");
                return false;
            }
            if (sumP < 100) {
                alert("Tỉ lệ chưa đủ 100%");
                return false;
            }
        }

    }
    function saveStaff() {
        var arr = [];
        var loop = true;
        $("#list-staff-revenue .group-staff-revenue").each(function (i) {
            var ob = {};
            ob.FKContract = $("#formContract").attr("data-contract");
            $(this).find("input").each(function () {
                if ($(this).attr("name") == "StaffId") {
                    if ($(this).val() == "") {
                        alert("Tên nhân viên không được để trống !");
                        loop = false;
                        return false;
                    }
                    ob.StaffId = $(this).val();
                }
                if ($(this).attr("name") == "PKStaff") {
                    ob.PKStaff = $(this).val();
                }
                if ($(this).attr("name") == "UnitId") {
                    ob.UnitId = $(this).val();
                }
                if ($(this).attr("name") == "GroupId") {
                    ob.GroupId = $(this).val();
                }
                if ($(this).attr("name") == "Percent") {
                    if ($(this).val() == "") {
                        alert("Chưa nhập tỉ lệ !");
                        loop = false;
                        return false;
                    }
                    ob.Percent = currencyToNumber($(this).val());
                }
                if ($(this).attr("name") == "Money") {
                    if ($(this).val() == "") {
                        alert("Doanh số ký không được để trống !");
                        loop = false;
                        return false;
                    }
                    ob.Money =currencyToNumber($(this).val());
                }
                if ($(this).attr("name") == "MoneyInYear") {
                    ob.MoneyInYear = currencyToNumber($(this).val());
                }
                if ($(this).attr("name") == "MoneyNextYear") {
                    ob.MoneyNextYear = currencyToNumber($(this).val());
                }
                if ($(this).attr("name") == "MoneyNextYear2") {
                    ob.MoneyNextYear2 = currencyToNumber($(this).val());
                }
                if ($(this).attr("name") == "Charge" && $(this).is(":checked")) {
                        ob.Charge = "checked";
                }
            })
            arr[i] = ob;
        })
        if (!loop) {
            return false;
        }
        //return;
        $.ajax({
            url: r+"/CRMContractList/ContractStaffDraff_Save",
            type: 'POST',
            data: { listStaff: arr },
            async: false,
            success: function (data, textStatus, jqXHR) {
                if (data.success) {
                    loop = true;
                }
                else {
                    $.gritter.add({
                        title: 'Lỗi',
                        text: data.message,
                        class_name: 'gritter-error'
                    });
                    loop = false;
                }


            },
            error: function (jqXHR, textStatus, errorThrown) {
                $.gritter.add({
                    text: 'Lỗi Cập nhật !',
                    class_name: 'gritter-error'
                });
            }
        });
        return loop;
    }
    function plusGroupRevenueStaff() {
        $.post(r + "/Ajax/GetInputSuggestEmployer/", { incree: parseInt(num) }, function (data) {
            $("#list-staff-revenue tbody").append(data);         
            num++;
            addEventAfter();
        })
        return;
    }

    function minusGroupRevenueStaff(e, pk) {
        if (!confirm("Bạn có chắc xóa dữ liệu này")) {
            return;
        }
        $(e).closest('tr').remove();
        if (pk) {
            addTaskList("STAFF", pk);
        }
       
    }
    //baohv
    function copyStaff() {
        $("#list-staff-revenue .group-staff-revenue").each(function (i) {
            $(this).find("input").each(function () {
                if ($(this).attr("name") == "PKStaff") {
                    $(this).val('');
                }
            })
        });
    }
</script>

