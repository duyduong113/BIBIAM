@{
    ViewBag.Title = "Gian hàng";
}
<style>
    .k-alt .editable {
        background-color: #C8E6C9;
    }

    .editable {
        background-color: #E8F5E9;
    }
</style>

<div class="row-fluid">
    <div class="span12">
        <div class="widget-box">
            <div class="row-fluid frame-search">
                <input class="input-medium" id="txtMerchant" type="text" placeholder="Tìm kiếm">
                <button type="button" class="btn btn-small btn-primary" onclick='filter()'>Search</button>
            </div>
        </div>
    </div>
</div>


<div class="row-fluid">
    @(Html.Kendo().Grid<BIBIAM.Core.Entities.Merchant>()
                    .Name("Grid")
                    .Columns(columns =>
                    {
                        columns.Bound(p => p.id)
                             .HeaderTemplate("<input style='text-align:center;opacity:1;' type='checkbox' id= 'checkboxcheckAll'  onClick='checkAll(this)' />")
                             .ClientTemplate("<input style='text-align:center' class='checkrowid' type='checkbox' id='#=id#'/> ")
                             .Width(25).Filterable(false).Sortable(false);
                        columns.Bound(p => p.ma_gian_hang).Title("Mã gian hàng").Width(100).HtmlAttributes(new { @class = "editable" });
                        columns.Bound(p => p.ten_gian_hang).Title("Tên gian hàng").Width(300).HtmlAttributes(new { @class = "editable" });
                        columns.Bound(p => p.ten_viet_tat).Title("Tên viết tắt").Width(100).HtmlAttributes(new { @class = "editable" });
                        columns.Bound(p => p.ten_tieng_anh).Width(110).Title("Tên tiếng anh").Width(300).HtmlAttributes(new { @class = "editable" });
                        columns.Bound(p => p.website).Width(100).Title("Website").Width(300).HtmlAttributes(new { @class = "editable" }); ;
                        columns.Bound(p => p.dien_thoai).Title("Điện thoại").Width(300).HtmlAttributes(new { @class = "editable" });
                        columns.Bound(p => p.email).Title("Email").Width(100).HtmlAttributes(new { @class = "editable" });
                        columns.Bound(p => p.fax).Title("Fax").Width(100).HtmlAttributes(new { @class = "editable" });
                        columns.Bound(p => p.dia_chi_tru_so).Title("Địa chỉ trụ sở").Width(100).HtmlAttributes(new { @class = "editable" });
                        columns.Bound(p => p.ma_tinh_tp).Title("Mã tỉnh").Width(100).HtmlAttributes(new { @class = "editable" });
                        columns.Bound(p => p.ten_tinh_tp).Title("Tên tỉnh").Width(100).HtmlAttributes(new { @class = "editable" });
                        columns.Bound(p => p.ma_quan_huyen).Title("Mã quận huyện").Width(100).HtmlAttributes(new { @class = "editable" });
                        columns.Bound(p => p.ten_quan_huyen).Title("Tên quận huyện").Width(100).HtmlAttributes(new { @class = "editable" }); 
                        columns.Bound(p => p.ngay_tiep_xuc).Title("Ngày tiếp xúc").Width(100).Format("{0:dd/MM/yyyy HH:mm}").HtmlAttributes(new { style = "text-align:right" }).HtmlAttributes(new { @class = "editable" });
                        columns.Bound(p => p.ngay_ky_hop_dong).Width(100).Title("Ngày ký hợp đồng").Format("{0:dd/MM/yyyy HH:mm}").HtmlAttributes(new { style = "text-align:right" }).HtmlAttributes(new { @class = "editable" });
                        columns.Bound(p => p.ngay_hoat_dong).Width(100).Title("Ngày hoạt động").Format("{0:dd/MM/yyyy HH:mm}").HtmlAttributes(new { style = "text-align:right" }).HtmlAttributes(new { @class = "editable" });
                        columns.Bound(p => p.ly_do_giay_to_phap_ly).Title("Lý do giấy tờ pháp lý").Width(100).HtmlAttributes(new { @class = "editable" });
                        columns.Bound(p => p.tai_khoan_thanh_toan).Title("Tài khoản thanh toán").Width(100).HtmlAttributes(new { @class = "editable" });
                        columns.Bound(p => p.dao_tao_quan_ly).Title("Đào tạo quản lý").Width(100).HtmlAttributes(new { @class = "editable" });
                        columns.Bound(p => p.trang_thai_duyet).Title("Trạng thái duyệt").Width(100).HtmlAttributes(new { @class = "editable" });
                        columns.Bound(p => p.trang_thai_xuat_ban).Title("Trạng thái xuất bản").Width(100).HtmlAttributes(new { @class = "editable" });
                        columns.Bound(p => p.nguoi_duyet).Title("Người duyệt").Width(100).HtmlAttributes(new { @class = "editable" });
                        columns.Bound(p => p.ngay_duyet).Width(100).Title("Ngày duyệt").Format("{0:dd/MM/yyyy HH:mm}").HtmlAttributes(new { style = "text-align:right" }).HtmlAttributes(new { @class = "editable" });
                        columns.Bound(p => p.ngay_tao).Width(110).Title("Ngày tạo").Format("{0:dd/MM/yyyy HH:mm}").HtmlAttributes(new { style = "text-align:right" });
                        columns.Bound(p => p.nguoi_tao).Width(100).Title("Người tạo");
                        columns.Bound(p => p.ngay_cap_nhat).Title("Ngày cập nhật").Width(110).Format("{0:dd/MM/yyyy HH:mm}").HtmlAttributes(new { style = "text-align:right" });
                        columns.Bound(p => p.nguoi_cap_nhat).Title("Người cập nhật").Width(100);
                        columns.Bound(p => p.mo_ta).Title("Mô tả").Width(100).HtmlAttributes(new { @class = "editable" });                      
                    })
                    .Pageable(pager => pager.PageSizes(new[] { 100, 200, 300, 500 }))
                    .Scrollable()
                    .ToolBar(toolbar =>
                            {
                                toolbar.Template(@<text>
                                    <div class="pull-left">

                                        <a class="btn btn-success btn-small" onclick="Create()" href="javascript:void(0)" id="">
                                            @*<i class="icon-plus"></i>*@ @Resources.Multi.Add
                                        </a>
                                        <a class="btn btn-primary btn-small" href="javascript:void(0)" id="btnGridSave" onclick="Update()">
                                            @*<i class="icon-plus"></i>*@ @Resources.Multi.btnSave
                                        </a>
                                        <a class="btn btn-default btn-small " href="javascript:void(0)" id="btnGridCancel" onclick="Cancel()">
                                            @*<i class="icon-plus"></i>*@ Hủy thay đổi
                                        </a>
                                        @if (ViewBag.Delete)
                                        {
                                            <a class="btn btn-danger btn-small" href="javascript:void(0)" onclick="showConfirmPopup(1)" id="btnGridDelete">
                                                @*<i class="icon-plus"></i>*@ @Resources.Multi.Delete
                                            </a>
                                        }
                                    </div>
                                </text>);
                                //toolbar.Create().Text("Thêm");
                                //toolbar.Save().SaveText("Lưu").CancelText("Hủy");
                                //if (ViewBag.Delete)
                                //{
                                //    toolbar.Custom()
                                //       .Text("Xóa")
                                //       .HtmlAttributes(new { @class = "exportClass btn btn-danger", Href = "javascript:void(0)", @style = "margin-right: 10px;min-width: 70px;", onClick = "DeletePage()" });
                                //}
                            })

                                                                                                                                                                                                                        .Editable(editable => editable.Mode(GridEditMode.InCell))
                                                                                                                                                                                                                        .Pageable(x => x.PageSizes(new int[] { 100, 200, 300, 500 }))
                                                                                                                                                                                                                        .Events(events => { events.DataBound("dataBound"); })
                                                                                                                                                                                                                        .Reorderable(reorderable => reorderable.Columns(true))
                                                                                                                                                                                                                        .Resizable(resizable => resizable.Columns(true))
                                                                                                                                                                                                                        .DataSource(dataSource => dataSource
                                                                                                                                                                                                                        .Ajax()
                                                                                                                                                                                                                        .Batch(true)
                                                                                                                                                                                                                        .PageSize(100)
                                                                                                                                                                                                                        .Events(events => { events.Error("error_handler"); events.RequestEnd("onRequestEnd"); })
                                                                                                                                                                                                                        .Model(model =>
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                             model.Id(p => p.id);
                                                                                                                                                                                model.Field(p => p.ma_gian_hang).Editable(false);
                                                                                                                                                                                //model.Field(p => p.ten_gian_hang).Editable(true);
                                                                                                                                                                                //model.Field(p => p.ten_viet_tat).Editable(true);
                                                                                                                                                                                //model.Field(p => p.ten_tieng_anh).Editable(true);
                                                                                                                                                                                //model.Field(p => p.website).Editable(true);
                                                                                                                                                                                //model.Field(p => p.dien_thoai).Editable(true);
                                                                                                                                                                                //model.Field(p => p.email).Editable(true);
                                                                                                                                                                                //model.Field(p => p.fax).Editable(true);
                                                                                                                                                                                //model.Field(p => p.dia_chi_tru_so).Editable(true);
                                                                                                                                                                                //model.Field(p => p.ma_tinh_tp).Editable(true);
                                                                                                                                                                                //model.Field(p => p.ten_tinh_tp).Editable(true);
                                                                                                                                                                                //model.Field(p => p.ma_quan_huyen).Editable(true);
                                                                                                                                                                                //model.Field(p => p.ten_quan_huyen).Editable(true);
                                                                                                                                                                                //model.Field(p => p.ngay_tiep_xuc).Editable(true);
                                                                                                                                                                                //model.Field(p => p.ngay_ky_hop_dong).Editable(true);
                                                                                                                                                                                //model.Field(p => p.ngay_hoat_dong).Editable(true);
                                                                                                                                                                                //model.Field(p => p.ly_do_giay_to_phap_ly).Editable(true);
                                                                                                                                                                                //model.Field(p => p.tai_khoan_thanh_toan).Editable(true);
                                                                                                                                                                                //model.Field(p => p.dao_tao_quan_ly).Editable(true);
                                                                                                                                                                                //model.Field(p => p.trang_thai_duyet).Editable(true);
                                                                                                                                                                                //model.Field(p => p.trang_thai_xuat_ban).Editable(true);
                                                                                                                                                                                //model.Field(p => p.nguoi_duyet).Editable(true);
                                                                                                                                                                                //model.Field(p => p.ngay_duyet).Editable(true);
                                                                                                                                                                                //model.Field(p => p.ngay_tao).Editable(true);
                                                                                                                                                                                //model.Field(p => p.nguoi_tao).Editable(true);
                                                                                                                                                                                //model.Field(p => p.ngay_cap_nhat).Editable(true);
                                                                                                                                                                                //model.Field(p => p.nguoi_cap_nhat).Editable(true);
                                                                                                                                                                                //model.Field(p => p.mo_ta).Editable(true);
                                                                                                                                                                                                                        })
                                                                                                                                                                                                                                .Read(c => c.Action("Read", "Merchant"))
                                                                                                                                                                                                                                .Create(c => c.Action("Create", "Merchant"))
                                                                                                                                                                                                                                .Update(c => c.Action("Update", "Merchant"))
                                                                                                                                                                                                                    )
    )
</div>
@Html.Partial("_popup")
<script>
    function Create() {
        $("#Grid").data("kendoGrid").dataSource.insert();
    }
    function Update() {
        if ($('#Grid').data('kendoGrid').dataSource.hasChanges() == true) {
            $('#Grid').data('kendoGrid').saveChanges();
        }
    }
    function Cancel() {
        $('#Grid').data('kendoGrid').cancelChanges();
    }
    $(document).ready(function () {
        filter();
    });
    function resizeGrid(gridname) {
        var offsetbottom = parseInt($(window).height()) - parseInt($('#' + gridname).offset().top);
        $("#" + gridname).find(".k-grid-content, .k-grid-content-locked").height(offsetbottom - 105);
    }
    function dataBound(e) {
        resizeGrid('Grid');
    }
    function error_handler(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br>";
                    });
                }
            });
            $.gritter.add({
                title: 'Lỗi',
                text: message,
                class_name: 'gritter-error'
            });
        }
    }

    function onRequestEnd(e) {
        if ((e.type == "update" || e.type == "create") && !e.response.Errors) {
            $.gritter.add({
                title: '',
                text: 'Lưu thành công',
                class_name: 'gritter-success'
            });
            if (e.type == "create") {
                this.read();
            }
        }
    }
    function filter() {
        grid = $("#Grid").data("kendoGrid");
        var filter = { logic: "and", filters: [] };

        var txtMaGianHang = $("#txtMerchant").val();
        if (txtMaGianHang) {
            filter.filters.push({ field: "ma_gian_hang", operator: "contains", value: txtMaGianHang });
        }

        grid.dataSource.filter(filter);
    }

    /////////
    function checkAll(e) {
        var x = $(e).prop('checked');
        $('#Grid').find(".k-grid-content .checkrowid").each(function () {
            $(this).prop('checked', x);
        });
    }

    //function DeletePage(data) {
    //    var list = Getlistcheck();
    //    if (!list) return;
    //    var c = confirm("Bạn có chắc chắn muốn xóa những dữ liệu này");
    //    if (!c) return;
    //    PostAndBlock(r + "/Merchant/DeletePage", { listid: list }, function (data) {
    //        if (data.success) {
    //            $.gritter.add({
    //                title: '',
    //                text: 'Xóa thành công',
    //                class_name: 'gritter-success'
    //            });
    //            $("#Grid").data("kendoGrid").dataSource.read();
    //        }
    //        else {
    //            $.gritter.add({
    //                title: 'Lỗi',
    //                text: data.message,
    //                class_name: 'gritter-error'
    //            });
    //        }
    //    });
    //}
    function Getlistcheck() {
        var listrowid = '';
        $('#Grid').find(".k-grid-content .checkrowid").each(function () {
            if ($(this).prop('checked') == true) {
                listrowid += $(this).data("id") + ',';
                $(this).data();
            }
        });
        return listrowid;
    }
</script>
