@{
    ViewBag.Title = "ERPAPD | SMS MO";
}
<style>
    .modal {
        width: 300px;
    }
</style>
<div class="row-fluid">
    <div class="span12">
        <div class="widget-box">
            <div class="widget-header widget-header-blue widget-header-flat">
                <p style="font-size:14px">@Resources.Multi.Filter</p>

                <span class="widget-toolbar">
                    <a href="#" data-action="collapse">
                        <i class="icon-chevron-up"></i>
                    </a>
                </span>
            </div>

            <div class="widget-body">
                <div class="widget-main">
                    <div class="row-fluid">
                        <div class="span12">
                            <input class="span1" type="text" id="info" placeholder="Phone, PhysicalID, Fullname" style="width:200px" />
                            <input class="span1" type="text" id="product" placeholder="ProductID, ProductPriceID, ProductName" style="width:200px" />
                            <select name="select" id="status" class='chosen-select span2' style="width: 400px" data-placeholder="Chọn trạng thái…" multiple>
                                <option value="">Tất cả</option>
                                <option value="new" selected>Mới tạo</option>
                                <option value="processing" selected>Đang xử lý</option>
                                <option value="done">Hoàn tất</option>
                                <option value="cancelled">Hủy bỏ</option>
                            </select>
                            <button type="button" id="btnSearch" class="btn btn-primary btn-small" onclick="filter()" style="float:none">@Resources.Multi.Filter</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row-fluid">
    <div class="span12">
        @(Html.Kendo()
    .Grid<ERPAPD.Models.Deca_SMSMO>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Command(command =>
        {
            command.Custom("processing").Text("Đang xử lý").Click("processing").HtmlAttributes(new { @class = "btn btn-success", href = "javascript:void(0)" });
            command.Custom("done").Text("Hoàn tất").Click("done").HtmlAttributes(new { @class = "btn btn-primary", href = "javascript:void(0)" });
            command.Custom("cancelled").Text("Hủy bỏ").Click("cancelled").HtmlAttributes(new { @class = "btn btn-danger", href = "javascript:void(0)" });
        }).Width(210).Title("");
        columns.Bound(p => p.CreatedAt).Format("{0:" + Resources.Multi.DateFormat+ " HH:mm:ss}").Width(125).Title("Thời gian nhận");
        columns.Bound(p => p.MobilePhone).Width(105).Title("Điện thoại");
        columns.Bound(p => p.CustomerID).ClientTemplate("#=Fullname#-#=CompanyName#").Title("Khách hàng").Width(210);
        columns.Bound(p => p.Info).Width(80).Title("Nội dung SMS");
        columns.Bound(p => p.ProductID).ClientTemplate("#=ProductID#-#=ProductPriceID#-#=ProductName#").Title("Thông tin sản phẩm").Width(220);
        columns.Bound(p => p.Status).Title(Resources.Multi.Status).Width(90);
        columns.Bound(p => p.OrderID).Title(Resources.Multi.OrderCode).Width(120);
        columns.Bound(p => p.CancelledReason).Title("Lý do hủy").Width(130);
        columns.Bound(p => p.CreatedBy).Width(100).Title(Resources.Multi.CreatedBy);
        columns.Bound(p => p.UpdatedAt).Width(120).Format("{0:" + Resources.Multi.DateFormat+ " HH:mm:ss}").Title(Resources.Multi.UpdatedAt).ClientTemplate("#if(kendo.toString(UpdatedAt,'dd/MM/yyyy') != '01/01/1900'){#" + "#=ConvertTimeZone(UpdatedAt," + Constants.TIME_ZONE + ")#" + "#}#").HeaderHtmlAttributes(new { style = "overflow: visible; white-space: normal;vertical-align: top" });
        columns.Bound(p => p.UpdatedBy).Width(100).Title(Resources.Multi.UpdatedBy);
    })
    .ToolBar(tools =>
    {
        tools.Excel().Text(Resources.Multi.Export);
    })
    .Events(events => { events.DataBound("dataBound"); })
    .Pageable()
    .Sortable()
    .Scrollable()
    .Navigatable()
    .Filterable()
    .Excel(excel => excel
    .FileName("SMSMO.xlsx")
    .Filterable(true)
    .ProxyURL(Url.Action("Excel_Export", "SMSMOManagement")))
    .Reorderable(r => r.Columns(true))
    .Resizable(r => r.Columns(true))
    .ColumnMenu()
    .DataSource(dataSource => dataSource
    .Ajax()
    .Batch(true)
    .PageSize(20)
    .Filter(f => f.Add(a => a.Status).IsNotEqualTo("done").And().IsNotEqualTo("cancelled"))
    .Read(read => read.Action("Read", "SMSMOManagement"))
    )
        )
    </div>
</div>
<script type="text/x-kendo-template" id="edit">
    @using (Html.BeginForm("ChangeStatusCancelled", "SMSMOManagement", FormMethod.Post, new { id = "editform", @style = "margin:0;" }))
    {
        <input type="hidden" name="Id" value="#:Id#" />
        <div class="control-group">
            <label class="control-label">Lý do</label>
            <div class="controls">
                <textarea cols="3" rows="3" name="Description" placeholder="Lý do hủy"></textarea>
            </div>
        </div>
    }
</script>
<script>
    $("#filterText").keypress(function (e) {
        if (e.keyCode == 13) {
            filter();
        }
    });

    $("#status").chosen();

    function resizeGrid() {
        var offsetbottom = parseInt($(window).height()) - parseInt($('#grid').offset().top);
        var gridElement = $("#grid"),
        dataArea = gridElement.find(".k-grid-content"),
        otherElements = gridElement.children().not(".k-grid-content"),
        otherElementsHeight = 0;
        otherElements.each(function () {
            otherElementsHeight += $(this).outerHeight();
        });
        dataArea.height(offsetbottom - otherElementsHeight - 50);
    }
    $(window).resize(function () {
        resizeGrid();
    });
    function dataBound() {
        resizeGrid();
        drawcolor();
    }

    function drawcolor() {
        var data = $("#grid").data("kendoGrid").dataSource.data();
        $.each(data, function (i, row) {
            // to mau status
            try {
                if (row.Status == "new") {
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(' + 7 + ')').html('<span class="badge badge-yellow" style="font-size:10px;">Mới tạo</span>');
                }
                else if (row.Status == "processing") {
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(' + 7 + ')').html('<span class="badge badge-success" style="font-size:10px;">Đang xử lý</span>');
                }
                else if (row.Status == "done") {
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(' + 7 + ')').html('<span class="badge badge-primary" style="font-size:10px;">Hoàn tất</span>');
                }
                else if (row.Status == "cancelled") {
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(' + 7 + ')').html('<span class="badge badge-important" style="font-size:10px;">Hủy bỏ</span>');
                }
            }
            catch (err) {
            }
        });
    }

    function filter() {

        grid = $("#grid").data("kendoGrid");
        var info = $('#info').val();
        var product = $("#product").val();
        var filter = { logic: "and", filters: [] };
        var filterInfo = { logic: "or", filters: [] };
        var filterStatus = { logic: "or", filters: [] };
        var listStatus = $("#status option:selected");
        var filterProduct = { logic: "or", filters: [] };

        if (listStatus.length > 0) {
            for (var i = 0; i < listStatus.length; i++) {
                var option = listStatus[i].value;
                if (option == '') {
                    filterStatus.filters.push({ field: "Status", operator: "contains", value: '' });
                }
                else {
                    filterStatus.filters.push({ field: "Status", operator: "eq", value: option });
                }
            }
            filter.filters.push(filterStatus);
        }
        if (info) {
            filterInfo.filters.push({ field: "MobilePhone", operator: "contains", value: info });
            filterInfo.filters.push({ field: "PhysicalID", operator: "contains", value: info });
            filterInfo.filters.push({ field: "Fullname", operator: "contains", value: info });
            filter.filters.push(filterInfo);
        }
        if (product) {
            filterProduct.filters.push({ field: "ProductID", operator: "contains", value: product });
            filterProduct.filters.push({ field: "ProductPriceID", operator: "contains", value: product });
            filterProduct.filters.push({ field: "ProductName", operator: "contains", value: product });
            filter.filters.push(filterProduct);
        }
        grid.dataSource.filter(filter);
    }

    function done(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var c = confirm("Đổi trạng thái thành done?");
        if (c) {
            $.post(r + "/SMSMOManagement/ChangeStatusDone", { Id: dataItem.Id }, function (data) {
                if (data.success) {
                    $("#grid").data("kendoGrid").dataSource.read();
                    $.gritter.add({
                        title: "@Resources.Multi.Success",
                        text: "Đổi trạng thái @Resources.Multi.Success.ToLower()",
                        class_name: 'gritter-success',
                    });
                } else {
                    $.gritter.add({
                        title: "@Resources.Multi.Error",
                        text: data.error,
                        class_name: 'gritter-error',
                    });
                }
            });
        } else {
            return false;
        }
    }
    function processing(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var c = confirm("Đổi trạng thái thành processing?");
        if (c) {
            $.post(r + "/SMSMOManagement/ChangeStatusProcessing", { Id: dataItem.Id }, function (data) {
                if (data.success) {
                    $("#grid").data("kendoGrid").dataSource.read();
                    $.gritter.add({
                        title: "@Resources.Multi.Success",
                        text: "Đổi trạng thái @Resources.Multi.Success.ToLower()",
                        class_name: 'gritter-success',
                    });
                } else {
                    $.gritter.add({
                        title: "@Resources.Multi.Error",
                        text: data.error,
                        class_name: 'gritter-error',
                    });
                }
            });
        } else {
            return false;
        }
    }
    function cancelled(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));


        var detailsTemplate = kendo.template($("#edit").html());
        bootbox.dialog(detailsTemplate(dataItem), [
            {
                "label": "Hủy bỏ",
                "class": "btn-small btn-grey",
                "callback": function () {
                }
            }, {
                "label": "Lưu lại",
                "class": "btn-small btn-primary",
                "callback": function () {
                    $('#editform').submit();
                    return false;
                }
            }]
         );

        $("#editform").ajaxForm({
            beforeSend: function () {
                $(document).ajaxStart($.blockUI({ message: '<i class="icon-spinner icon-spin blue bigger-125" style="font-size:30px;"></i>', theme: false })).ajaxStop($.unblockUI);
            },
            success: function (data) {
                if (data.success) {
                    $("#grid").data("kendoGrid").dataSource.read();
                    $.gritter.add({
                        // (string | mandatory) the heading of the notification
                        title: '',
                        // (string | mandatory) the text inside the notification
                        text: '@Resources.Multi.Save @Resources.Multi.Success.ToLower()',
                        class_name: 'gritter-success'
                    });
                } else {
                    $.gritter.add({
                        // (string | mandatory) the heading of the notification
                        title: '',
                        // (string | mandatory) the text inside the notification
                        text: data.error,
                        class_name: 'gritter-error'
                    });
                }
            }
        });
    }
</script>
