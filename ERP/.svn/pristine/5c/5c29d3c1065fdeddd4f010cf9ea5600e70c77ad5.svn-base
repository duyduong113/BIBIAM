@model IEnumerable<ERPAPD.Models.CRM_Label>
@{
    ViewBag.Title = "Quản lý nhãn";
    bool AllowCreate = (ViewData["AllowCreate"] != null && (bool)ViewData["AllowCreate"]);
    bool AllowUpdate = (ViewData["AllowUpdate"] != null && (bool)ViewData["AllowUpdate"]);
    bool AllowDelete = (ViewData["AllowDelete"] != null && (bool)ViewData["AllowDelete"]);
    bool AllowExport = (ViewData["AllowExport"] != null && (bool)ViewData["AllowExport"]);
}
<div class="row-fluid">
    <div class="span12">
        <div class="widget-box">
            <div class="row-fluid">
                <div class="span12">
                    <input type="text" class="input-xs" id="txtSearch" placeholder="Nhập loại hoặc giá trị đê tìm kiếm">
                    <button type="button" id="btnSearch" class="btn btn-primary btn-small" onclick="doSearch()" style="float:none">@Resources.Multi.Filter</button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row-fluid">
    <div class="span12">
        <article class="col-sm-12">
            <div class="widget-body">
                @(Html.Kendo()
                .Grid(Model)
                .Name("Grid")
                .Editable()
                .Columns(columns =>
                {
                    columns.Bound(p => p.RowID).Hidden();
                    columns.Bound(p => p.LabelID)
                        .HeaderTemplate("<input type='checkbox' id='checkboxcheckAll'  onClick='checkAll(this)' />")
                        .ClientTemplate("<input class='checkrowid' type='checkbox' id='#=RowID#'  />")
                        .HtmlAttributes(new { style = "text-align:center" })
                        .HeaderHtmlAttributes(new { style = "text-align:center" })
                        .Width(25).Filterable(false).Sortable(false);
                    columns.Bound(p => p.Name).Width(180).Title("Tên");
                    columns.Bound(p => p.Value).Width(150).Title("Giá trị")
                        .ClientTemplate(
                        "<div data-name='#=Name#' data-value='#=Value#' data-id='#=RowID#'><span style='background-color:#=Value#;' class='span4 show-color' onclick='changeColor(this)'></span>"
                        + "<span class='name-color'>#=Value#</span></div>"
                        );
                    columns.Bound(p => p.RowCreatedAt).Width(110).Title("Ngày tạo").Format("{0:" + Resources.Multi.DateFormat + "}").HtmlAttributes(new { style = "text-align:right" });
                    columns.Bound(p => p.RowCreatedUser).Width(110).Title("Người tạo");
                    columns.Bound(p => p.RowUpdatedAt).Width(100).Title("Ngày cập nhật").Format("{0:" + Resources.Multi.DateFormat + "}").HtmlAttributes(new { style = "text-align:right" });
                    columns.Bound(p => p.RowUpdatedUser).Width(100).Title("Người cập nhật");
                })
                .ToolBar(toolbar =>
                {
                    if (AllowUpdate)
                    {
                        toolbar.Template(@<text>
                            <div class="pull-left">
                                @if (AllowCreate)
                                {
                                    <a class="btn btn-success btn-small" href="javascript:void(0)" id="btnGridAdd">
                                        @*<i class="icon-plus"></i>*@ @Resources.Multi.Add
                                    </a>
                                }

                                @if (AllowDelete)
                                {
                                    <a class="btn btn-danger btn-small" href="javascript:void(0)" onclick="showConfirmPopup(1)" id="btnGridDelete">
                                        @*<i class="icon-plus"></i>*@ @Resources.Multi.Delete
                                    </a>
                                }
                                @*<a class="btn btn-warning btn-small" href="javascript:void(0)" id="btnGridCancel">
                                        <i class="icon-plus"></i> Hủy
                                    </a>*@
                            </div>
                        </text>);
                    }
                }).Events(events => { events.DataBound("onDatabound"); })
                .Pageable(pager => pager.PageSizes(new[] { 20, 100, 200, 300 }))
                .Resizable(r => r.Columns(true))
                .Navigatable()
                .Scrollable()
                .Sortable()
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .Batch(true)
                    .PageSize(20)
                    .Events(events => { events.Error("error_handler"); events.RequestEnd("onRequestEnd"); })
                    .Model(model =>
                        {
                            model.Id(p => p.RowID);
                            model.Field(p => p.Value).Editable(false);
                        })
                    .Read("Label_Read", "Label")
                    .Create("Label_Save", "Label")
                    .Update("Label_Save", "Label")
                ))
            </div>
        </article>
    </div>
</div>
<div id="modal-form" class="modal hide" tabindex="-1">
    <div class="k-window-titlebar k-header">
        <span class="k-window-title">Thêm Label</span>
        <button type="button" class="btclose" data-dismiss="modal">&times;</button>
    </div>

    <div class="modal-body overflow-visible">
        <div class="row-fluid">
            <form action="~/Label/Label_Save" method="post" id="formLabel" enctype="multipart/form-data" style="margin:0px">
                <div class="control-group">
                    <label class="control-label">Chọn màu Label</label>
                    <div class="controls">
                        <select name="Value" class="chosen-select" id="select-label" data-placeholder="Chọn màu..." style="width:480px">
                            <option style="background-color:#b3dc6c" value="#ac725e">#ac725e</option>
                            <option style="background-color:#d06b64" value="#d06b64">#d06b64</option>
                            <option style="background-color:#f83a22" value="#f83a22">#f83a22</option>
                            <option style="background-color:#fa573c" value="#fa573c">#fa573c</option>
                            <option style="background-color:#ff7537" value="#ff7537">#ff7537</option>
                            <option style="background-color:#ffad46" value="#ffad46">#ffad46</option>
                            <option style="background-color:#42d692" value="#42d692">#42d692</option>
                            <option style="background-color:#16a765" value="#16a765">#16a765</option>
                            <option style="background-color:#7bd148" value="#7bd148">#7bd148</option>
                            <option style="background-color:#b3dc6c" value="#b3dc6c">#b3dc6c</option>
                            <option style="background-color:#fbe983" value="#fbe983">#fbe983</option>
                            <option style="background-color:#fad165" value="#fad165">#fad165</option>
                            <option style="background-color:#92e1c0" value="#92e1c0">#92e1c0</option>
                            <option style="background-color:#9fe1e7" value="#9fe1e7">#9fe1e7</option>
                            <option style="background-color:#9fc6e7" value="#9fc6e7">#9fc6e7</option>
                            <option style="background-color:#4986e7" value="#4986e7">#4986e7</option>
                            <option style="background-color:#9a9cff" value="#9a9cff">#9a9cff</option>
                            <option style="background-color:#b99aff" value="#b99aff">#b99aff</option>
                            <option style="background-color:#c2c2c2" value="#c2c2c2">#c2c2c2</option>
                            <option style="background-color:#cabdbf" value="#cabdbf">#cabdbf</option>
                            <option style="background-color:#cca6ac" value="#cca6ac">#cca6ac</option>
                            <option style="background-color:#f691b2" value="#f691b2">#f691b2</option>
                            <option style="background-color:#cd74e6" value="#cd74e6">#cd74e6</option>
                            <option style="background-color:#a47ae2" value="#a47ae2">#a47ae2</option>
                            <option style="background-color:#555" value="#555">#555</option>
                        </select>
                    </div>
                </div>

                <div class="control-group">
                    <label class="control-label">Tên Label</label>
                    <div class="controls">
                        <input id="txt-color-name" type="text" name="Name" placeholder="Nhập tên label" value="" style="width:466px" />
                        <input id="id-row" type="hidden" name="RowID" value="" />
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="modal-footer">
        <button id="saveLabel" class="btn btn-info btn-small ">
            @*<i class="icon-ok"></i>*@ Lưu Lại
        </button>
        <button class="btn btn-default btn-small" data-dismiss="modal">
            @*<i class="icon-undo"></i>*@ Bỏ qua
        </button>
    </div>
</div>
@Html.Partial("_popup")
<script>
    var element;
    function changeColor(e) {
        $('#modal-form').modal('show');
        $(".k-window-title").text("Chỉnh sửa Label");     
        $('#select-label').chosen();      
        element = $(e).parent();
        $("#id-row").val($(e).parent().attr("data-id"));
       // console.log($(e).parent().attr("data-value"));
        $("#select-label").val($(e).parent().attr("data-value"));
        $("#select-label").trigger('change');
        $("#txt-color-name").val($(e).parent().attr("data-name"));

    }
    $("#txtSearch").keypress(function (e) {
        if (e.keyCode == 13) {
            doSearch();
        }
    });
    function doSearch() {
        var grid = $("#Grid").data("kendoGrid");
        var filter = { logic: "and", filters: [] };
        var text = $("#txtSearch").val();
        if (text) {
            var filterOr = { logic: "or", filters: [] };
            filterOr.filters.push({ field: "Name", operator: "contains", value: text });
            filterOr.filters.push({ field: "Value", operator: "contains", value: text });
            filter.filters.push(filterOr);
        }
        grid.dataSource.filter(filter);
    }
    function onDatabound(e) {
        resizegrid();
        var grid = $("#Grid").data("kendoGrid");
        // ask the parameterMap to create the request object for you
        var requestObject = (new kendo.data.transports["aspnetmvc-server"]({ prefix: "" }))
        .options.parameterMap({
            page: grid.dataSource.page(),
            sort: grid.dataSource.sort(),
            filter: grid.dataSource.filter()
        });
    }
    function resizegrid() {
        var offsetbottom = parseInt($(window).height()) - parseInt($('#Grid').offset().top);
        var gridElement = $("#Grid"),
        dataArea = gridElement.find(".k-grid-content"),
        otherElements = gridElement.children().not(".k-grid-content"),
        otherElementsHeight = 0;
        otherElements.each(function () {
            otherElementsHeight += $(this).outerHeight();
        });
        dataArea.height(offsetbottom - otherElementsHeight - 10);
    }
    $("#select-label").change(function () {
        $(".chosen-single").css("background-color", $(this).val());

    });
    $("#saveLabel").click(function () {
        $("#formLabel").submit();

    });
    $("#formLabel").validate({
        rules: {
            Name: { required: true }
        },
        messages: {
            Name: { required: "Thông tin bắt buộc" }

        },
        errorPlacement: function (error, element) {
            error.insertAfter(element);
        },
        submitHandler: function (form) {
            $(form).ajaxSubmit({
                clearForm: true,//To clear form after ajax submitting

                success: function (data) {
                    $('#modal-form').modal('hide');
                    if (data.success) {
                        $("#Grid").data("kendoGrid").dataSource.read();
                        $.gritter.add({
                            title: '',
                            text: "Lưu thành công!",
                            class_name: 'gritter-success'
                        });
                    }
                    else {
                        $.gritter.add({
                            title: '',
                            text: "Báo lỗi" + data.message,
                            class_name: 'gritter-error'
                        });
                    }
                }
            });
            return false;
        }
    });

    function checkAll(e) {
        var x = $(e).prop('checked');
        $('#Grid').find(".checkrowid").each(function () {
            $(this).prop('checked', x);
        });
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "Lỗi :\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                    //$("#Grid").data("kendoGrid").dataSource.read();
                }
            });
            $.gritter.add({
                // (string | mandatory) the heading of the notification
                title: '',
                // (string | mandatory) the text inside the notification
                text: message,
                class_name: 'gritter-error'
            });
        }
    }
    function onRequestEnd(e) {
        if (e.type == "update" && !e.response.Errors) {
            $.gritter.add({
                title: '',
                text: 'Cập nhật dữ liệu thành công',
                class_name: 'gritter-success'
            });
            $("#Grid").data("kendoGrid").dataSource.read();
        }
        if (e.type == "create" && !e.response.Errors) {
            $.gritter.add({
                title: '',
                text: 'Thêm mới dữ liệu thành công',
                class_name: 'gritter-success'
            });
            $("#Grid").data("kendoGrid").dataSource.read();
        }
    }
    $('#btnGridAdd').click(function () {
        $('#modal-form').modal('show');
        $(".k-window-title").text("Thêm Label");
        $('#select-label').chosen();
    })

    $('#btnGridSave').bind('click', function () {
        if ($('#Grid').data('kendoGrid').dataSource.hasChanges()) {
            $('#Grid').data('kendoGrid').saveChanges();
        }
    })

    $('#btnGridCancel').bind('click', function () {
        $('#Grid').data('kendoGrid').cancelChanges();
    })
</script>
