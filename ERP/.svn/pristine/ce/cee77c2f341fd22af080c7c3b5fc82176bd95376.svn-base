
@{
    ViewBag.Title = "Book banner";
    bool AllowCreate = (ViewData["AllowCreate"] != null && (bool)ViewData["AllowCreate"]);
    bool AllowUpdate = (ViewData["AllowUpdate"] != null && (bool)ViewData["AllowUpdate"]);
    bool AllowDelete = (ViewData["AllowDelete"] != null && (bool)ViewData["AllowDelete"]);
    bool AllowExport = (ViewData["AllowExport"] != null && (bool)ViewData["AllowExport"]);
}
@Html.Partial("popup")
<div class="row-fluid">
    <h6><b>Thông tin khách hàng</b></h6>
    <hr />
    <fieldset>
        <div class="span4">
            <div class="control-group">
                <label>Khách hàng</label>
                <div class="controls">
                    @(Html.Kendo().AutoComplete()
                              .Name("txt-CustomerID")
                              .DataTextField("CustomerName")
                              .Animation(true)
                              .Placeholder("Nhập tên khách hàng")
                              .Filter("contains")
                              .MinLength(1)
                              .HtmlAttributes(new { style = "width:100%", @class = "input-medium" })
                              .DataSource(source =>
                              {
                                  source.Read(read =>
                                  {
                                      read.Action("CustomerRead", "CRM_CustomerSupport")
                                          .Data("onAdditionalData");
                                  })
                                  .ServerFiltering(true);
                              })
                             .Events(e =>
                             {
                                 e.Select("onSelectCustomer");

                             })
                             .Template("<span>#=CustomerID# - #=CustomerName#</span>")
                    )
                </div>
            </div>
            <input type="hidden" class="span12" id="customer-id" placeholder="..." />
        </div>
        <div class="span2">
            <div class="control-group">
                <label>Nhãn hàng</label>
                <div class="controls">
                    <input type="text" class="span12" id="brand" placeholder="..." />
                </div>
            </div>
        </div>
        <div class="span2">
            <div class="control-group">
                <label>Nhân viên</label>
                <div class="controls">
                    <select id="staff" class="select" data-placeholder="--Nhân viên--" style="width:100%">
                        <option value="">-- Chọn nhân viên--</option>
                        @foreach (var item in ViewBag.listStaff)
                        {
                            <option value="@item.Code">@item.Name</option>
                        }
                    </select>
                </div>
            </div>
        </div>
        <div class="span2">
            <div class="control-group">
                <label>Mã book</label>
                <div class="controls">
                    <input type="text" class="input-medium" id="bookcode" value="@ViewBag.BookCode" readonly />
                </div>
            </div>
        </div>
    </fieldset>
   
</div>
<div class="row-fluid">
    <label class="span2">
        <input id="chckb-display-other" name="form-field-checkbox" type="checkbox" class="ace">
        <span class="lbl"> Hiển thị thông tin khác</span>
    </label>
</div>
<div id="guarantee" class="row-fluid" style="display:none">
    <fieldset>
        <div class="span2">
            <div class="control-group">
                <label>Email người bảo lãnh</label>
                <div class="controls">
                    <input type="text" id="emai-guarantee" value="" />
                </div>
            </div>
        </div>
        <div class="span2">
            <div class="control-group">
                <label>Người bảo lãnh</label>
                <div class="controls">
                    <input type="text" id="name-guarantee" value="" />
                </div>
            </div>
        </div>
        <div class="span2">
            <div class="control-group">
                <label>Chức vụ</label>
                <div class="controls">
                    <select id="position-guarantee" class="select" style="width:100%">
                        <option value="">-- Chọn Chức vụ--</option>
                        @foreach (var item in ViewBag.listPosition)
                        {
                            <option value="@item.Code">@item.Name</option>
                        }
                    </select>
                </div>
            </div>
        </div>
        <div class="span4">
            <div class="control-group">
                <label>Ghi chú</label>
                <div class="controls">
                    <textarea id="note-guarantee" cols="3" rows="1"></textarea>
                </div>
            </div>
        </div>
    </fieldset>
    <fieldset>
        <div class="span2">
            <div class="control-group">
                <label>Tiền bảo lãnh</label>
                <div class="controls">
                    <input type="number" id="money-guarantee" value="" />
                </div>
            </div>
        </div>
        <div class="span2">
            <div class="control-group">
                <label>Nội dung bảo lãnh</label>
                <div class="controls">
                    <input type="text" id="content-guarantee" value="" />
                </div>
            </div>
        </div>
        <div class="span2">
            <label>Từ ngày - Đến ngày</label>
            <div class="controls">
                <input type="text" class="input-xs" id="range-date-guarantee" placeholder="Từ ngày - Đến ngày" />
            </div>
        </div>
        <div class="span2">
            <div class="control-group">
                <label>File đính kèm</label>
                <div class="controls">
                    <input type="file" id="file-guarantee" name="file" />
                </div>             
            </div>
        </div>
    </fieldset>
</div>
<div class="row-fluid">
    <h6><b>Vị trí book</b></h6>
   
        <fieldset>
            @(Html.Kendo()
              .Grid<ERPAPD.Models.CRM_BookLocation>()
              .Name("Grid")
              .Columns(columns =>
              {
                  columns.Bound(p => p.ID).HeaderTemplate("<input style='text-align:center;opacity:1;' type='checkbox' id= 'checkboxcheckAll'  onClick='checkAll(this)' />").ClientTemplate("<input style='text-align:center' class='checkrowid' type='checkbox' id='#=ID#'  />").Width(30).Filterable(false).Sortable(false);

                  columns.ForeignKey(p => p.Website, (System.Collections.IEnumerable)ViewBag.listWebsite, "Code", "Name")
                         .Title("Website")
                         .Width(120)
                         .HtmlAttributes(new { style = "background-color:\\#dff0d8;color:\\#468847" })
                         .EditorTemplateName("GridNullableForeignKey");

                  columns.ForeignKey(p => p.Category, (System.Collections.IEnumerable)ViewBag.listCategory, "Code", "Name")
                         .Title("Chuyên mục")
                         .Width(120)
                         .HtmlAttributes(new { style = "background-color:\\#dff0d8;color:\\#468847" })
                         .EditorTemplateName("GridNullableForeignKey");

                  columns.ForeignKey(p => p.Location, (System.Collections.IEnumerable)ViewBag.listLocation, "Code", "Name")
                         .Title("Vị trí")
                         .Width(120)
                         .HtmlAttributes(new { style = "background-color:\\#dff0d8;color:\\#468847" })
                         .EditorTemplateName("GridNullableForeignKey");

                  columns.ForeignKey(p => p.Nature, (System.Collections.IEnumerable)ViewBag.listNature, "Code", "Name")
                         .Title("Chia sẻ")
                         .Width(120)
                         .HtmlAttributes(new { style = "background-color:\\#dff0d8;color:\\#468847" })
                         .EditorTemplateName("GridNullableForeignKey");

                  columns.Bound(p => p.NgayLen)
                         .Title("Ngày lên")
                         .Width(100).Format("{0:" + Resources.Multi.DateFormat + "}")
                         .ClientTemplate("#if(kendo.toString(NgayLen,'dd/MM/yyyy') != '01/01/1900'){#" + "#= kendo.toString(NgayLen,'" + Resources.Multi.DateFormat + "') #" + "#}#")
                         .HtmlAttributes(new { style = "background-color:\\#dff0d8;color:\\#468847" })
                         .EditorTemplateName("Date");

                  columns.Bound(p => p.NgayXuong)
                         .Title("Ngày xuống")
                         .Width(100).Format("{0:" + Resources.Multi.DateFormat + "}")
                         .ClientTemplate("#if(kendo.toString(NgayXuong,'dd/MM/yyyy') != '01/01/1900'){#" + "#= kendo.toString(NgayXuong,'" + Resources.Multi.DateFormat + "') #" + "#}#")
                         .HtmlAttributes(new { style = "background-color:\\#dff0d8;color:\\#468847" })
                         .EditorTemplateName("Date");

                  columns.Bound(p => p.SoNgay)
                         .Title("Số ngày")
                         .Width(120)
                         .HtmlAttributes(new { style = "background-color:\\#dff0d8;color:\\#468847", columnname = "SoNgay" })
                         .EditorTemplateName("Integer");

                  columns.Bound(p => p.SoTuan)
                         .Title("Số tuần")
                         .Width(120)
                         .HtmlAttributes(new { style = "background-color:\\#dff0d8;color:\\#468847", columnname = "SoTuan" })
                         .EditorTemplateName("Integer");

                  columns.Bound(p => p.Label)
                         .Title("Nhãn hàng")
                         .Width(120)
                         .HtmlAttributes(new { style = "background-color:\\#dff0d8;color:\\#468847" });

                  columns.Bound(p => p.Km2)
                         .Title("Hỗ trợ")
                         .Width(120)
                         .HtmlAttributes(new { style = "background-color:\\#dff0d8;color:\\#468847" });
                  //.EditorViewData(new { ViewBag.listWebsite })
                  //.EditorTemplateName("AutoCompleteTemplate");
                  //columns.Command(command => { command.Edit(); command.Destroy(); }).Width(250);

              })
              .ToolBar(toolbar =>
              {
              toolbar.Template(@<text>
                <div class="pull-left">
                    @if (AllowCreate)
                    {
                        <a class="btn btn-small btn-success" href="javascript:void(0)" id="btnGridAdd">
                            @*<i class="icon-plus"></i>*@ @Resources.Multi.Add
                        </a>
                        <button type="button" id="btnSaveBook" class="btn btn-primary btn-small">Lưu thông tin</button>
                        <a class="btn btn-small btn-danger" href="javascript:void(0)" onclick="showConfirmPopup('XOA')">
                            @*<i class="icon-plus"></i>*@ Xóa
                        </a>
                        <a class="btn btn-default btn-small" href="@Url.Action("Index", "CRM_BookingLocation") ">Trở về</a>
                    }
                </div>
            </text>);
              })

              .Navigatable()
              .AutoBind(false)
              .Editable(editable => editable.Mode(GridEditMode.InCell))
              .Events(events => { events.Edit("onEdit"); events.Change("onChange"); events.Save("onSave"); })
              .Resizable(resize => resize.Columns(true))
              .DataSource(dataSource => dataSource.Ajax()
                                        .Batch(true)
                                        .PageSize(50)
                                        .Events(events =>
                                        {
                                            events.Error("error_handler");
                                            events.RequestEnd("onRequestEnd");
                                        })
                                        .Model(model =>
                                        {
                                            model.Id(p => p.ID);
                                            model.Field(p => p.ID).Editable(false);
                                        })
                                        .Create(create => create.Action("CRM_BookingLocation_Create", "CRM_BookingLocation").Data("getHeaderInfo"))
                                        .Update(create => create.Action("CRM_BookingLocation_Update", "CRM_BookingLocation").Data("getHeaderInfo")))
            )
        </fieldset>
        @* </ Hiện thị thông tin> *@
       
</div>

<script>
    $(document).ready(function () {
        $('.select').chosen();
        $('#range-date-guarantee').daterangepicker({
            ranges: {
                'Hôm nay': [moment(), moment()],
                'Hôm qua': [moment().subtract('days', 1), moment().subtract('days', 1)],
                '7 ngày trước': [moment().subtract('days', 6), moment()],
                '30 ngày trước': [moment().subtract('days', 29), moment()],
                'Tháng này': [moment().startOf('month'), moment().endOf('month')],
                'Tháng trươc': [moment().subtract('month', 1).startOf('month'), moment().subtract('month', 1).endOf('month')]
            },
            format: 'YYYY/MM/DD',
            locale: {
                applyLabel: 'Xác nhận',
                cancelLabel: 'Đóng lại',
                fromLabel: 'Từ',
                toLabel: 'Đến',
                customRangeLabel: 'Tuỳ chọn',
                daysOfWeek: ['T7', 'CN', 'T2', 'T3', 'T4', 'T5', 'T6'],
                monthNames: ['Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6', 'Tháng 7', 'Tháng 8', 'Tháng 9', 'Tháng 10', 'Tháng 11', 'Tháng 12'],
                firstDay: 1,
            }
        });
        $('#file-guarantee').ace_file_input({
            no_file: 'No File ...',
            btn_choose: 'Choose',
            btn_change: 'Change',
            droppable: false,
            onchange: null,
            thumbnail: false //| true | large
            //whitelist:'gif|png|jpg|jpeg'
            //blacklist:'exe|php'
            //onchange:''
            //
        });

    })
  
    function checkAll(e) {
        var x = $(e).prop('checked');
        $('#Grid').find(".checkrowid").each(function () {
            $(this).prop('checked', x);
        });
    }
    function onAdditionalData() {
        return {
            text: $("#txt-CustomerID").val()
        };
    }
    function onSelectCustomer(e) {
        var dataItem = this.dataItem(e.item.index());
        $("#customer-id").val(dataItem.CustomerID);
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "Lỗi :\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                    //$("#Grid").data("kendoGrid").dataSource.read();
                }
            });
            $.gritter.add({
                // (string | mandatory) the heading of the notification
                title: '',
                // (string | mandatory) the text inside the notification
                text: message,
                class_name: 'gritter-error'
            });
        }
    }
    function onRequestEnd(e) {
        if (e.type == "update" && !e.response.Errors) {
            $.gritter.add({
                // (string | mandatory) the heading of the notification
                title: '',
                // (string | mandatory) the text inside the notification
                text: 'Cập nhật dữ liệu thành công',
                class_name: 'gritter-success'
            });
            $("#Grid").data("kendoGrid").dataSource.read();
        }
        if (e.type == "create" && !e.response.Errors) {
            $.gritter.add({
                // (string | mandatory) the heading of the notification
                title: '',
                // (string | mandatory) the text inside the notification
                text: 'Thêm mới dữ liệu thành công',
                class_name: 'gritter-success'
            });
            //window.history.back();
         
        }
    }

    function onEdit(e) {
      //  console.log(e.sender)
    }
    function onChange(e) {
        var selectedRows = this.select();
        console.log(selectedRows);
    }

    function onSave(e) {
        debugger
        if (e.container.attr('columnname') == 'SoNgay') {
            var numWeek = e.values.SoNgay / 7;
            if (numWeek % 2 == 0) {
                e.model.SoTuan = numWeek;
            }
            else {
                e.model.SoTuan = 0;
            }

            date = new Date();
            var dateUp = new Date(date.getFullYear(), date.getMonth(), date.getDate() + e.values.SoNgay);
            e.model.NgayXuong = dateUp;
            $(e.container).next().html(e.model.SoTuan);
            $(e.container).prev().html(kendo.toString(kendo.parseDate(e.model.NgayXuong), 'dd/MM/yyyy'));
        }

        if (e.container.attr('columnname') == 'SoTuan') {
            var numDay = e.values.SoTuan * 7;
            e.model.SoNgay = numDay;
            $(e.container).prev().html(e.model.SoNgay);

            date = new Date();
            dateUp = new Date(date.getFullYear(), date.getMonth(), date.getDate() + numDay);
            e.model.NgayXuong = dateUp;
            var dateUp = new Date(date.getFullYear(), date.getMonth(), date.getDate() + e.values.SoNgay);
            $(e.container).prev().prev().html(kendo.toString(kendo.parseDate(e.model.NgayXuong), 'dd/MM/yyyy'));
        }
    }

    $('#chckb-display-other').bind('click', function () {
        if ($(this).is(':checked')) {
            $('#guarantee').css('display', 'inline');
            $('.select').chosen();
            $('#position_guarantee_chosen').css('width', '100%');
        }
        else {
            $('#guarantee').css('display', 'none');
        }
    })
    
    function getHeaderInfo() {
        return {
            customerid: $('#customer-id').val(),
            staff: $('#staff').val(),
            bookcode: $('#bookcode').val(),
            brand: $('#brand').val(),
            email: $('#emai-guarantee').val(),
            name: $('#name-guarantee').val(),
            positon: $('#position-guarantee').val(),
            note: $('#note-guarantee').val(),
            money: $('#money-guarantee').val(),
            content: $('#content-guarantee').val(),
            date: $('#range-date-guarantee').val(),
        }
    }

    $('#btnGridAdd').click(function () {
        if ($('#customer-id').val() == "" || $('#staff').val() == "" || $('#bookcode').val() == "") {
            $.gritter.add({
                // (string | mandatory) the heading of the notification
                title: 'Lỗi',
                // (string | mandatory) the text inside the notification
                text: 'Vui lòng nhập Khách hàng',
                class_name: 'gritter-error'
            });
        }
        else {
            $("#Grid").data("kendoGrid").addRow();
        }
        
    })

    $('#btnSaveBook').bind('click', function () {
        if ($('#Grid').data('kendoGrid').dataSource.hasChanges() == true) {
            $('#Grid').data('kendoGrid').saveChanges();
        }
    })
</script>
