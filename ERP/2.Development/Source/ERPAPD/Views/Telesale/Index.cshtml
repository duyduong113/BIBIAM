@{
    ViewBag.Title = "Telesale - Call Activity";
}
<style>
    legend {
        display: block;
        width: 100%;
        padding: 0;
        margin-bottom: 20px;
        font-size: 16px;
        line-height: 40px;
        color: #144567;
    }

    .profile-activity img {
        max-width: 35px !important;
        border: none;
    }


    .dropdown-header {
        /*font-size: 1.2em;*/
        padding: 0px 0px;
    }

        .dropdown-header > span {
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
            text-align: left;
            display: inline-block;
            border-style: solid;
            border-width: 0 0 1px 1px;
            padding: .3em .6em;
            width: 33%;
        }

    #CustomerIDTicket-list .k-item > span {
        -webkit-box-sizing: border-box;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
        display: inline-block;
        border-style: solid;
        border-width: 0 0 1px 1px;
        vertical-align: top;
        min-height: 27px;
        width: 33%;
        padding: .6em 0 0 .6em;
        font-size: 11px;
    }

    #CustomerIDTicket-list .k-item {
        padding: 0px 0px 0px 0px;
    }

    #CustomerIDTicket-list .k-state-hover {
        padding: 0px 0px 0px 0px;
    }
    /*#txtPlateID-list .k-item > span:first-child {
            width: 77px;
            border-left-width: 0;
            padding: .6em 0 0 0;
        }*/
    #CustomerIDTicket-list img {
        -moz-box-shadow: 0 0 2px rgba(0,0,0,.4);
        -webkit-box-shadow: 0 0 2px rgba(0,0,0,.4);
        box-shadow: 0 0 2px rgba(0,0,0,.4);
        width: 70px;
        height: 70px;
    }

    #CustomerIDTicket-list h3 {
        /*font-size: 1.6em;*/
        margin: 0;
        padding: 0;
    }

    #CustomerIDTicket-list p {
        margin: 0;
        padding: 0;
    }

    #CustomerIDTicket_listbox {
        overflow-y: hidden !important;
    }

    .infobox-small {
        width: 120px;
        padding: 0px;
    }

    .infobox > .infobox-data {
        line-height: 10px;
        font-size: 10px;
        padding-left: 4px;
    }

        .infobox > .infobox-data > label {
            line-height: 8px;
        }

    table#sample-table-1 td {
        padding: 1px;
    }

    .t-head {
        line-height: 14px;
    }

    .percent {
        font-size: 10px;
    }

    .actual {
        font-weight: bold;
        line-height: 0px;
    }

    .duration {
        text-align: center;
        margin-left: 5px;
        font-style: italic;
    }

    .amount {
        color: blue;
        font-size: 12px;
        font-weight: bold;
        text-align: center;
    }

    .calc {
        font-size: 10px;
        text-align: center;
    }


    .history {
        font-size: 10px;
        padding: 3px 2px 2px;
    }
</style>


<div class="row-fluid unselectable">
    <div class="span12">
        <div class="row-fluid">
            <div class="span6">
                @Html.Partial("_CallingList")
                @Html.Partial("_TodoList")
                @Html.Partial("_TelesalesInfo")
            </div>
            <div class="span6">
                @Html.Partial("_TelesaleProfile", ViewData["TelesaleProfile"])
              
            </div>
        </div>
    </div>
</div>

@Html.Partial("_SendSMSForm")
@Html.Partial("_CreateTicketForm")
<script type="text/x-kendo-template" id="telesalePopup">
    @* div trên đành cho Thông tin khách hàng, form, .... *@
    <div class="row-fluid" style="background-color:\\#fff;">
        <div class="row-fluid">
            <div class="span12" style="margin-top:10px">
                @* Div dành cho thông tin khách hàng *@
                <div class="span4" style="padding-left: 10px;">
                    <div class="row-fluid">
                        <div class="span12" style="display:inline-flexbox">
                            <button class="btn btn-app no-radius btn-warning btn-mini" id="btnLoadAppointmentPopup" style="padding: 10px 5px 2px 5px;">
                                <i class="icon-calendar"></i>
                                <span style="font-size:10px">LỊCH HẸN</span>
                                #if(Master.AppointmentCount != '0'){#
                                <span class="badge badge-pink" id="lbAppoinmentCount">#:Master.AppointmentCount#</span>
                                #}#
                            </button>
                            <button class="btn btn-app no-radius btn-info btn-mini" id="btnLoadTicketPopup" style="padding: 10px 5px 2px 5px;">
                                <i class="icon-ticket"></i>
                                <span style="font-size:10px">TICKET</span>
                                #if(Master.TicketCount !='0'){#
                                <span class="badge badge-warning" id="lbTicketCount">#:Master.TicketCount#</span>
                                #}#
                            </button>
                            <button class="btn btn-app no-radius btn-danger btn-mini" onclick='OpenSkipCustomerPopup("#=Customer.Phone#", "#=Customer.PhysicalID#", "#=Master.Source#", "#=Master.RefID#", "#=Master.RefType#", "#=Master.RuleID#", "#=Customer.CustomerID#")' style="padding: 10px 5px 2px 5px;">
                                <i class="icon-forward"></i>
                                <span style="font-size:10px">BỎ QUA</span>
                            </button>
                            <button class="btn btn-app no-radius btn-purple btn-mini" id="btnNextPopup" style="padding: 10px 5px 2px 5px; ">
                                <i class="icon-arrow-right"></i>
                                <span style="font-size:10px">TIẾP TỤC</span>
                            </button>
                        </div>
                    </div>
                    <div class="row-fluid">
                        <div class="span12">
                            <address style="margin-bottom:5px">
                                <div style="font-size: 14px;color:\\#2283c5; margin-top:5px; margin-bottom: 5px">
                                    #if(Customer.CustomerID==null || typeof Customer.CustomerID == "undefined"){#
                                    <span style="color:red">[Chưa có thẻ]</span> -
                                    #}else{#
                                    #:Customer.CustomerID# -
                                    #}#
                                    #:Customer.Fullname#
                                </div>
                                <div>
                                    <span style="color:\\#999">Giới tính:</span>  #:Customer.Gender# |
                                    <span style="color:\\#999">Sinh ngày:</span> #: kendo.toString(kendo.parseDate(Customer.Birthday),"dd/MM/yyyy")#
                                    <br />
                                    <span style="color:\\#999">CMND:</span> #:Customer.PhysicalID# |
                                    <span style="color:\\#999">Tỉnh:</span> #:Customer.HomeTownDescription#
                                    <br />
                                    <span style="color:\\#999"> Điện thoại:</span> #:Customer.Phone# |
                                    <span style="color:\\#999">Email: </span> #:Customer.Email#
                                    <br />
                                    <span style="color:\\#999">Địa chỉ:</span> #:Customer.Address#
                                </div>
                                <div style="margin-top:5px;">
                                    <span style="color:\\#999">
                                        MNV:
                                    </span> #:Customer.EmployeeID# |
                                    <span style="color:\\#999">
                                        Công ty:
                                    </span> #:Customer.CompanyName#
                                    <br />
                                    <span style="color:\\#999">
                                        Chức vụ:
                                    </span> #:Customer.Position# |
                                    <span style="color:\\#999">
                                        Phòng ban:
                                    </span> #:Customer.Department#
                                    <br />
                                    <span style="color:\\#999">
                                        Ngày vào làm:
                                    </span>  #: kendo.toString(kendo.parseDate(Customer.StartWorkingDate),"dd/MM/yyyy") # |
                                    <span style="color:\\#999">
                                        Thu nhập:
                                    </span> #:kendo.toString(Customer.Income,"N0")#
                                    <br />
                                    <span style="color:\\#999">
                                        Nhận lương qua:
                                    </span> #:Customer.PayrollBankDesc#
                                </div>
                                #if(Customer.CustomerID==null || typeof Customer.CustomerID == "undefined"){#
                                <div style="margin-top:5px;">
                                    <span style="color:\\#999">
                                        Tín dụng tạm tính:
                                    </span> #:kendo.toString(Customer.CreditLimit,"N0") #
                                </div>
                                #}else{#
                                <div style="margin-top:5px;">
                                    <span style="color:\\#999">
                                        Tín dụng:
                                    </span> #:kendo.toString(Customer.CreditLimit,"N0") # |
                                    <span style="color:\\#999">
                                        Cấp bởi:
                                    </span> #:Customer.CreditBankDesc#
                                    <br />
                                    <span style="color:\\#999">
                                        Trạng thái:
                                    </span> #:Customer.StatusDesc# |
                                    <span style="color:\\#999">
                                        Có token:
                                    </span> #:Customer.ExistedToken# |
                                    <span style="color:\\#999">
                                        Blacklist:
                                    </span> #:Customer.IsBlacklist#
                                </div>
                                #}#
                            </address>
                            <div style=" display: inline-flex;">
                                <button class="btn btn-app no-radius btn-pink btn-mini" id="btnSendSMSPopup" style="padding: 10px 5px 2px 5px; margin-right: 5px; ">
                                    <i class="icon-comments"></i><span style="font-size:10px"> GỬI SMS</span>
                                </button>
                                <button class="btn btn-app no-radius btn-purple btn-mini" id="btnSendTicketPopup" style="padding: 10px 5px 2px 5px; margin-right: 5px;">
                                    <i class="icon-edit"></i><span style="font-size:10px"> GỬI TICKET</span>
                                </button>
                                <button data-mobile="#=Customer.Phone#" id="btnCall" class="btn btn-app no-radius btn-success btn-mini" style="padding: 10px 5px 2px 5px; margin-right: 5px;">
                                    <i class="icon-phone"></i> <span style="font-size:10px">GỌI ĐIỆN</span>
                                </button>
                                <button data-physical="#=Customer.PhysicalID#" class="btn btn-app no-radius btn-primary btn-mini" id="btnPurchase" style="padding: 10px 5px 2px 5px; ">
                                    <i class="icon-shopping-cart"></i><span style="font-size:10px"> ĐẶT HÀNG</span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                @* Hết div thông tin khách hàng *@
                @*  Div cho form + button *@
                <div class="span4" style="margin-left: 1.8%;">
                    <div class="row-fluid">
                        @* Div form *@
                        <div class="span12">
                            <div class="widget-box">
                                <div class="widget-header widget-header-blue widget-header-flat" style="padding: 3px 5px 2px 10px;">
                                    <p style="font-size:14px">NHẬP KẾT QUẢ CUỘC GỌI</p>
                                </div>
                                <div class="widget-body">
                                    <div class="widget-main">

                                        @using (Html.BeginForm("SaveCallLog", "Telesale", FormMethod.Post, new { @class = "form-horizontal", id = "CallLogForm", style = "margin:0;" }))
                                        {
                                            <fieldset>
                                                <input type="hidden" id="callResultOrderID" name="OrderID" value="" />

                                                <input type="hidden" name="Phone" value="#:Customer.Phone#" />
                                                <input type="hidden" name="PhysicalID" value="#:Customer.PhysicalID#" />
                                                <input type="hidden" name="Source" value="#:Master.Source#" />
                                                <input type="hidden" name="RefID" value="#:Master.RefID#" />
                                                <input type="hidden" name="RefType" value="#:Master.RefType#" />
                                                #if(typeof Master.RuleID == "undefined" || Master.RuleID ==null){#
                                                <input type="hidden" name="CustRule" value="" />
                                                #}else{#
                                                <input type="hidden" name="CustRule" value="#:Master.RuleID#" />
                                                #}#
                                                #if(Customer.CustomerID!=null && typeof Customer.CustomerID != "undefined"){#
                                                <input type="hidden" name="CustomerID" value="#:Customer.CustomerID#" />
                                                #}#
                                                #if(Customer.Fullname!=null && typeof Customer.Fullname != "undefined"){#
                                                <input type="hidden" name="CustomerName" value="#:Customer.Fullname#" />
                                                #}#
                                                <div class="row-fluid">
                                                    @(Html.Kendo().DropDownList().Name("ResultID")
                                                        .HtmlAttributes(new { style = "width:100%;" })
                                                        .OptionLabel("@Resources.Multi.Select @Resources.Multi.Group.ToLower() kết quả...")
                                                        .DataTextField("Description")
                                                        .AutoBind(false)
                                                        .DataValueField("Id")
                                                        .DataSource(dataSource =>
                                                        {
                                                            dataSource.Read(read => read.Action("GetListResult", "Telesale").Data("filterCallResultGroup"))
                                                            .ServerFiltering(true);
                                                        }).ToClientTemplate()
                                                    )
                                                </div>
                                                <div class="row-fluid">
                                                    @(Html.Kendo().DropDownList().Name("SubResultID")
                                                        .AutoBind(false)
                                                        .HtmlAttributes(new { style = "width:100%;margin-top:3px;" })
                                                        .OptionLabel("Chọn kết quả cuộc gọi...")
                                                        .DataTextField("Description")
                                                        .Events(e => e.DataBound("SubResultIDBound"))
                                                        .DataValueField("Id")
                                                        .DataSource(dataSource =>
                                                        {
                                                            dataSource.Read(read => read.Action("GetListResult", "Telesale").Data("filterCallResult"))
                                                            .ServerFiltering(true);
                                                        })
                                                        .CascadeFrom("ResultID").ToClientTemplate()
                                                    )
                                                </div>
                                                <div class="row-fluid">
                                                    <textarea id="callresultContent" name="Content" placeholder="Nội dung cuộc gọi" rows="2" class="span12" style="margin-top:3px;"></textarea>
                                                </div>
                                                <div class="row-fluid">

                                                    @(Html.Kendo().DateTimePicker()
                                                        .Name("RecallTime")
                                                //.Value(DateTime.Now)
                                                        .Format("MM/dd/yyyy HH:mm")
                                                        .Min(DateTime.Now)
                                                        .TimeFormat("HH:mm")
                                                        .HtmlAttributes(new { @class = "input-mask-date input-mini", @style = "margin-top:3px;width:100%", placeholder = "Đặt thời gian gọi lại(tháng/ngày/năm)" })
                                                        .ToClientTemplate()
                                                    )
                                                </div>
                                                <br />
                                                <div class="row-fluid">
                                                    <div class="span4">
                                                        <label>
                                                            <input type="radio" class="ace" name="Feeling" value="N/A" checked>
                                                            <span class="lbl"> TRẠNG THÁI</span>
                                                        </label>
                                                        <label>
                                                            <input type="radio" class="ace" name="Feeling" value="Vui vẻ">
                                                            <span class="lbl"> Vui vẻ</span>
                                                        </label>
                                                        <label>
                                                            <input type="radio" class="ace " value="Bình thường" name="Feeling">
                                                            <span class="lbl"> Bình thường</span>
                                                        </label>
                                                        <label>
                                                            <input type="radio" class="ace " value="Khó tính" name="Feeling">
                                                            <span class="lbl"> Khó tính</span>
                                                        </label>
                                                        <label>
                                                            <input class="ace " type="radio" value="Không muốn gọi" name="Feeling">
                                                            <span class="lbl"> Không muốn gọi</span>
                                                        </label>
                                                    </div>
                                                    <div class="span4">
                                                        <label>
                                                            <input type="radio" class="ace" value="N/A" checked name="AgentSetLevel">
                                                            <span class="lbl"> KHÁCH HÀNG CẤP</span>
                                                        </label>
                                                        <label style="font-weight:bold"></label>
                                                        <label>
                                                            <input type="radio" class="ace" value="Cấp 1" name="AgentSetLevel">
                                                            <span class="lbl"> Cấp 1</span>
                                                        </label>
                                                        <label>
                                                            <input type="radio" class="ace" value="Cấp 2" name="AgentSetLevel">
                                                            <span class="lbl"> Cấp 2</span>
                                                        </label>

                                                        <label>
                                                            <input type="radio" class="ace" value="Cấp 3" name="AgentSetLevel">
                                                            <span class="lbl"> Cấp 3</span>
                                                        </label>
                                                        <label>
                                                            <input class="ace " type="radio" value="Cấp 4" name="AgentSetLevel">
                                                            <span class="lbl"> Cấp 4</span>
                                                        </label>
                                                    </div>
                                                    <div class="span4">
                                                        <label>
                                                            <input type="radio" class="ace" value="N/A" checked name="Trend">
                                                            <span class="lbl"> XU HƯỚNG</span>
                                                        </label>
                                                        <label>
                                                            <input type="radio" class="ace" value="Có thể bán" name="Trend">
                                                            <span class="lbl"> Có thể bán</span>
                                                        </label>
                                                        <label>
                                                            <input type="radio" class="ace " value="Khó bán" name="Trend">
                                                            <span class="lbl"> Khó bán</span>
                                                        </label>
                                                        <label>
                                                            <input type="radio" class="ace " value="Không thể bán" name="Trend">
                                                            <span class="lbl"> Không thể bán</span>
                                                        </label>
                                                    </div>
                                                </div>
                                                <div class="row-fluid" style="padding-top:10px;">
                                                    <div class="span6">
                                                        #if(Master.RefType =='TicketID'){#
                                                        <label>
                                                            <input type="checkbox" id="isDoneTicketCheckbox" onchange="changeDoneTicket()" checked class="ace">
                                                            <span class="lbl"> Hoàn thành ticket <b style="text-decoration:underline">#=Master.RefID#</b></span>
                                                        </label>
                                                        <input type="hidden" name="IsDoneTicket" value="true" />
                                                        #}#
                                                        #if(Master.RefType =='SMSID'){#
                                                        <label>
                                                            <input type="checkbox" id="isDoneTicketCheckbox" onchange="changeDoneTicket()" checked class="ace">
                                                            <span class="lbl"> Hoàn thành</span>
                                                        </label>
                                                        <input type="hidden" name="IsDoneTicket" value="true" />
                                                        #}#
                                                    </div>
                                                    <div class="span6">
                                                        <button type="submit" class="btn btn-info btn-mini pull-right" style="margin-left:3px;" id="btnSaveCallLog">
                                                            <i class="icon-ok"></i>
                                                            LƯU LẠI
                                                        </button>
                                                        <button type="reset" class="btn btn-grey btn-mini pull-right" id="btnResetCallLog">
                                                            <i class="icon-refresh"></i>
                                                            LÀM LẠI
                                                        </button>
                                                    </div>
                                                </div>
                                            </fieldset>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                        @* hết div form *@
                    </div>
                </div>
                @* Hết div form + button *@
                @* Div sản phẩm *@
                <div class="span4">
                    <div class="row-fluid">
                        @* DIV Thông tin bán hàng *@
                        <div class="span12">
                            <ul class="nav nav-tabs tab-color-blue">
                                <li class="active">
                                    <a data-toggle="tab" href="\\#PromotionsTab">
                                        KHUYẾN MÃI
                                    </a>
                                </li>
                                <li>
                                    <a data-toggle="tab" href="\\#ProductsTab">
                                        SẢN PHẨM
                                    </a>
                                </li>
                            </ul>
                            <div class="tab-content" style="padding:0 0px 0px 0px; height: 340px;">
                                @* nội dung tab appointment *@
                                <div id="PromotionsTab" class="tab-pane in active">
                                    @(Html.Kendo().ListView<ERPAPD.Models.DC_Telesales_PromotionInfo>()
                                    .Name("listViewPromotion")
                                    .HtmlAttributes(new { @style = "border:none;overflow:auto;height:307px" })
                                    .TagName("div")
                                    .Pageable(a => a.Numeric(true))
                                            .ClientTemplateId("PromotionListViewTemplate")
                                    .DataSource(dataSource =>
                                    {
                                        dataSource.Sort(a => a.Add(m => m.CreatedAt).Descending());
                                        dataSource.Read(read => read.Action("listViewPromotionRead", "Telesale", new { CompanyName = "#=Customer.CompanyName#" }));
                                        dataSource.PageSize(10);
                                    })
                                    .ToClientTemplate()
                                    )
                                </div>
                                <div id="ProductsTab" class="tab-pane in" style="overflow: hidden;">
                                    <div class="row-fluid" style="background-color: \\#F1F1F1;padding: 4px 0px 4px 4px;">
                                        <span class="input-icon input-icon-right" style="width: 96%;">
                                            <input type="text" id="searchProduct" style="width: 94%;" placeholder="Tìm kiếm sản phẩm theo tên">
                                            <i class="icon-search"></i>
                                        </span>
                                    </div>
                                    <div class="row-fluid">
                                        <div class="span12">
                                            @(Html.Kendo().ListView<ERPAPD.Models.DC_SKU_Property>()
                                    .Name("listViewProduct")
                                    .HtmlAttributes(new { @style = "border:none;overflow:auto;height:268px" })
                                    .TagName("div")
                                    .Pageable(pageable => pageable.ButtonCount(5))
                                            .ClientTemplateId("ProductsListViewTemplate")
                                    .DataSource(dataSource =>
                                    {
                                        dataSource.Sort(s => s.Add(m => m.promotionPercent).Descending());
                                        dataSource.Read(read => read.Action("listViewProductRead", "Telesale"));
                                        dataSource.PageSize(20);
                                    })
                                    .ToClientTemplate()
                                            )
                                        </div>
                                    </div>

                                </div>
                            </div>
                            @* END Thông tin bán hàng *@
                        </div>
                    </div>
                    @* hết div sản phẩm *@
                </div>
                @*<div class="span1">
                        <div class="row-fluid">
                            <div class="span12" style="text-align:right">
                                <button class="btn btn-app no-radius btn-grey btn-mini" style="padding: 10px 5px 2px 5px;" onclick="$('\\#telesaleWindow').data('kendoWindow').close()">
                                    <i class="icon-remove"></i>
                                    <span style="font-size:10px">ĐÓNG LẠI</span>
                                </button>
                                <button class="btn btn-app no-radius btn-danger btn-mini" style="padding: 10px 5px 2px 5px;">
                                    <i class="icon-step-forward"></i>
                                    <span style="font-size:10px">BỎ QUA</span>
                                </button>

                            </div>
                        </div>
                    </div>*@
                <button style="position: fixed; top: 2px; left: 98%; transition: .5s ease; " class="btn btn-grey btn-mini" id="btnClosePopup">
                    <i class="icon-remove bigger-110 icon-only"></i>
                </button>
            </div>
            @* --------Hết div trên---------  *@
        </div>
        @* Div dưới dành cho grid thông tin *@
        <div class="row-fluid" style="background-color:\\#fff;padding-top: 10px;">
            <div class="span12" style="padding: 0px 10px 0px 10px;">
                <div class="tabbable tabs-left">
                    <ul class="nav nav-tabs padding-12 tab-color-blue background-blue" id="telesalePopupTab">
                        <li class="active">
                            <a data-toggle="tab" href="\\#CallHistoryTab">
                                Lịch sử cuộc gọi
                            </a>
                        </li>
                        <li>
                            <a data-toggle="tab" href="\\#TransactionHistoryTab">
                                Lịch sử giao dịch
                            </a>
                        </li>
                        <li>
                            <a data-toggle="tab" href="\\#CustomerActionHistoryTab">
                                Lịch sử Ticket
                            </a>
                        </li>
                        <li>
                            <a data-toggle="tab" href="\\#SendTab">
                                Tin nhắn đã gửi
                            </a>
                        </li>
                    </ul>
                    <div class="tab-content" style="padding: 0 0px 0px 0px;">
                        @* nội dung tab history *@
                        <div id="CallHistoryTab" class="tab-pane in active">
                            @(Html.Kendo()
                        .Grid<ERPAPD.Models.DC_Telesales_CallHistory>()
                        .Name("GridCallHistory")
                        .Columns(columns =>
                        {
                            columns.Bound(p => p.CreatedAt).Width(100).Title("Thời gian gọi").Format("{0:dd/MM/yyyy HH:mm}");
                            columns.Bound(p => p.Content).Width(200).Title(Resources.Multi.Content);
                            columns.ForeignKey(p => p.ResultID, (System.Collections.IEnumerable)ViewData["ResultList"], "Id", "Description").Title("Nhóm @Resources.Multi.Result.ToLower()").Width(200);
                            columns.ForeignKey(p => p.SubResultID, (System.Collections.IEnumerable)ViewData["ResultList"], "Id", "Description").Title("Kết quả gọi").Width(200);
                            columns.Bound(p => p.RecallTime).Format("{0:dd/MM/yyyy HH:mm}").Width(90).Title("Gọi lại");
                            columns.Bound(p => p.CustRule).Width(90).Title("Rule");
                            columns.Bound(p => p.CreatedBy).Width(90).Title(Resources.Multi.CreatedBy);
                        })
                                    //.HtmlAttributes(new { @style = "height:200px" })
                        .Scrollable(scrollable => scrollable.Virtual(false))
                        .Pageable(pageable => pageable.ButtonCount(5))
                        .Resizable(resize => resize.Columns(true))
                        .DataSource(dataSource => dataSource
                        .Ajax()
                        .PageSize(20)
                        .Sort(sort => sort.Add(a => a.CreatedAt).Descending())
                            //.Events(events => { events.Error("error_handlerCustomerAssignment"); })
                        .Model(model =>
                        {
                            model.Id(p => p.CustomerID);
                        }).Read(read => read
                        .Action("CallHistoryRead", "Telesale", new { PhysicalID = "#=Customer.PhysicalID#" })
                        )).ToClientTemplate()
                            )
                        </div>
                        @* Hết nội dung history *@

                        <div id="TransactionHistoryTab" class="tab-pane">
                            @* content of transaction go here//////////////////////////--------------------------- *@
                            @(Html.Kendo()
                        .Grid<ERPAPD.Models.Deca_Telesales_OrderHistory>()
                                .Name("GridTransactionHistory")
                        .Columns(columns =>
                        {
                            columns.Bound(p => p.OrderID).Width(100).Title(Resources.Multi.OrderCode);
                            columns.Bound(p => p.Status).Width(80).Title(Resources.Multi.Status);
                            columns.Bound(p => p.OrderDate).Width(100).Title("Ngày đơn hàng").Format("{0:dd/MM/yyyy HH:mm}");
                            columns.Bound(p => p.Amount).Width(80).Title("Giá trị").Format("{0:N0}");
                            columns.Bound(p => p.TransactionInfo).Width(300).Title("Sản phẩm").Format("{0:N0}");
                            columns.Bound(p => p.Installment).Width(100).Title("Trả góp").ClientTemplate("\\#:Installment\\# tháng");
                            columns.Bound(p => p.SaleMan).Width(100).Title("NVBH");
                        })
                                    //.HtmlAttributes(new { @style = "height:200px" })
                        .Scrollable(scrollable => scrollable.Virtual(false))
                        .Pageable(pageable => pageable.ButtonCount(5))
                        .Resizable(resize => resize.Columns(true)).Resizable(resize => resize.Columns(true))
                        .DataSource(dataSource => dataSource
                        .Ajax()
                        .PageSize(20)
                        .Sort(sort => sort.Add(a => a.OrderDate).Descending())
                            //.Events(events => { events.Error("error_handlerCustomerAssignment"); })
                        .Model(model =>
                        {
                            model.Id(p => p.OrderID);
                        }).Read(read => read
                            .Action("OrderHistoryRead", "Telesale", new { PhysicalID = "#=Customer.PhysicalID#" })
                        )).ToClientTemplate()
                            )
                        </div>

                        <div id="CustomerActionHistoryTab" class="tab-pane">
                            @* content of Action go here//////////////////////////--------------------------- *@
                            @(Html.Kendo()
                        .Grid<ERPAPD.Models.Deca_RT_Ticket>()
                        .Name("GridActionHistory")
                        .Columns(columns =>
                        {
                            columns.Bound(p => p.RowCreatedTime).Width(100).Title("Thời gian tạo").Format("{0:dd/MM/yyyy HH:mm}");
                            columns.Bound(p => p.Status).Width(100).Title(Resources.Multi.Status);
                            columns.Bound(p => p.Title).Width(300).Title(Resources.Multi.Content).ClientTemplate("<b>\\#=Title\\#</b> - \\#=Detail\\#");
                            columns.ForeignKey(p => p.TypeID, (System.Collections.IEnumerable)ViewData["TicketType"], "TypeID", "Name").Title("Loại yêu cầu").Width(100);
                            columns.Bound(p => p.RowLastUpdatedTime).Width(120).Format("{0:dd/MM/yyyy HH:mm}").Title(Resources.Multi.UpdatedAt);
                            columns.Bound(p => p.RowLastUpdatedUser).Width(90).Title("Cập nhật cuối");
                        })
                                    //.HtmlAttributes(new { @style = "height:200px" })
                        .Scrollable(scrollable => scrollable.Virtual(false))
                        .Pageable(pageable => pageable.ButtonCount(5))
                        .Resizable(resize => resize.Columns(true))
                        .DataSource(dataSource => dataSource
                        .Ajax()
                        .PageSize(8)
                        .Sort(sort => sort.Add(a => a.RowLastUpdatedTime).Descending())
                            //.Events(events => { events.Error("error_handlerCustomerAssignment"); })
                       .Read(read => read
                        .Action("TicketPopupRead", "Telesale", new { CustomerID = "#=Customer.PhysicalID#" })
                        )).ToClientTemplate()
                            )
                        </div>

                        <div id="SendTab" class="tab-pane">
                            @* content of Send SMS go here//////////////////////////--------------------------- *@
                            @(Html.Kendo()
                        .Grid<ERPAPD.Models.Deca_SMS_SO>()
                        .Name("GridSendSMS")
                        .Columns(columns =>
                        {
                            columns.Bound(p => p.CreatedAt).Width(100).Title("Thời gian gửi").Format("{0:dd/MM/yyyy HH:mm}");
                            columns.Bound(p => p.Status).Width(90).Title(Resources.Multi.Status);
                            columns.Bound(p => p.Content).Width(200).Title(Resources.Multi.Content);
                            columns.Bound(p => p.Phone).Width(100).Title(Resources.Multi.Phone);
                            columns.Bound(p => p.CreatedBy).Width(100).Title("Người gửi");
                        })
                                    //.HtmlAttributes(new { @style = "height:200px" })
                        .Scrollable(scrollable => scrollable.Virtual(false))
                        .Pageable(pageable => pageable.ButtonCount(5))
                        .Resizable(resize => resize.Columns(true))
                        .DataSource(dataSource => dataSource
                        .Ajax()
                        .PageSize(8)
                        .Sort(sort => sort.Add(a => a.CreatedAt).Descending())
                            //.Events(events => { events.Error("error_handlerCustomerAssignment"); })
                        .Model(model =>
                        {
                            model.Id(p => p.ID);
                        }).Read(read => read
                        .Action("SendSMSRead", "Telesale", new { PhysicalID = "#=Customer.PhysicalID#", CustomerID = "#=Customer.CustomerID#" })
                        )).ToClientTemplate()
                            )
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @* --------hết div dưới---------- *@
    </div>
</script>

<script type="text/x-kendo-template" id="ProductsListViewTemplate">
    <div class="row-fluid">
        <div class="span12">
            <div class="profile-activity clearfix">
                <div>
                    <img class="pull-left" src="https://deca.vn/#:thumbnailImageUrl#">
                    <div style="margin-top:5px;">
                        <a class="user" style="color:\\#555555; font-size: 12px;text-decoration:none" href="https://deca.vn/ajax/box_chi_tiet_san_pham_previewocm/index/#=productId#/119/1/" target="_blank">#:productId# - #:colorId# - #:name#</a>
                        <br />
                        Màu #:colorName# | Giá: <span style="color:red;font-weight:bold;">#:kendo.toString(sellingprice,'N0')#đ</span>
                        #if(promotionPercent>0){#
                        | <span style="text-decoration:line-through">#:kendo.toString(price,'N0')#</span> | <span style="color:red;font-weight:bold;"> -#:promotionPercent#%</span>
                        #}#
                    </div>
                </div>
            </div>
        </div>
    </div>
</script>

<script type="text/x-kendo-template" id="PromotionListViewTemplate">
    <div class="row-fluid">
        <div class="span12" style="padding: 8px 10px 0px 10px;">
            <p style="color: \\#D15B47; font-size: 12px; font-weight: bold; margin-bottom: 3px;">#:Title#</p>
            <div style="margin-bottom: 3px;">#= htmlDecode(Content)#</div>
            <p style="color: grey; margin-bottom: 3px">Áp dụng từ ngày: #:kendo.toString(StartDate,'dd/MM/yyyy')# - đến hết ngày: #:kendo.toString(EndDate,'dd/MM/yyyy')#</p>
        </div>
    </div>
</script>

@*vuongnd*@
<script type="text/x-kendo-template" id="buyPopup">
    <div class="row-fluid">
        <div class="span6">
            <button class="btn btn-minier btn-primary pull-right" onclick="ChangeDeliveryInfo('#=customer.PhysicalID#')" style=" top: 26px; padding: 3px 10px 3px 8px; border-radius: 2px; ">
                Thay đổi địa chỉ
            </button>
            <div class="row-fluid" style=" margin: 5px 0px 5px 0px; color: \\#2283c5;">
                <span style="font-size:12px;">THÔNG TIN NHẬN HÀNG</span>
            </div>
            <input type="hidden" id="OrderDeliveryAddress" value="#=company.Address#" />
            <input type="hidden" id="OrderDeliveryDistrict" value="#=district.TerritoryID#" />
            <input type="hidden" id="OrderDeliveryCity" value="#=city.TerritoryID#" />
            <div class="row-fluid">
                <div class="span12">
                    <ul style="margin-bottom: 5px;">
                        <li>#if(customer.CustomerID !=null && customer.CustomerID!=""){#  #=customer.CustomerID# #}else{# <span style="color:red;"> [Chưa có thẻ] </span> #}# - #=customer.Fullname# - <span style="color: \\#999">CMND: </span>#=customer.PhysicalID#</li>
                        <li id="DisplayCompanyInfo">Giao hàng tại công ty #=company.ShortName# #if(customer.BranchID != '' && customer.BranchID != null){#, chi nhánh: #=customer.BranchName# #}#</li>
                        <li><span style="color: \\#999">Địa chỉ: </span><span id="DisplayAddressInfo">#=company.Address#, #=district.TerritoryName#, #=city.TerritoryName#</span></li>
                        <li><span style="color: \\#999">Điện thoại: </span>#=customer.Phone#</li>
                    </ul>
                    #if(customer.CustomerID !=null && customer.CustomerID!=""){#
                    <textarea placeholder="Ghi chú giao hàng (Hệ thống sẽ tự động thêm thông tin trả góp, CMND và Kiểm tra hình ảnh trên CMND vào)" rows="2" cols="4" style="width: 97%; background-color: \\#FDFCE7; resize: none; " id="orderNote"></textarea>
                    #}else{#
                    <textarea placeholder="Ghi chú mở thẻ" rows="1" cols="4" style="width: 97%; height: 31px; background-color: \\#FFEFEF; resize: none; " id="decaNote"></textarea>
                    <textarea placeholder="Ghi chú giao hàng (Hệ thống sẽ tự động thêm thông tin trả góp, CMND và Kiểm tra hình ảnh trên CMND vào)" rows="2" cols="4" style="width: 97%; background-color: \\#FDFCE7; resize: none; " id="orderNote"></textarea>
                    #}#
                    <br />
                </div>
            </div>
            <div class="row-fluid" style=" margin: 10px 5px 5px 0; padding: 5px 5px 2px 0; color: \\#2283c5; ">
                <span style="font-size: 12px;">THÔNG TIN ĐẶT HÀNG</span>
            </div>
            <div class="row-fluid">
                <div class="span12">
                    <div id="listCart" style="height: 220px; overflow-y: auto; border: dotted 2px \\#CCC;">
                        #if(typeof source !='undefined' && source=='SMSMO'){#
                        <div style="padding-top: 80px; text-align: center; overflow-y: hidden !important; ">
                            <span style="font-size: 18px; color: \\#2283C5; ">Khách hàng muốn mua #=sms.ProductName#</span>
                            <br />
                            <span style="font-size: 14px; color:\\#555; ">Nhu cầu gửi lúc: #=kendo.toString(kendo.parseDate(sms.CreatedAt),'HH:mm dd/MM/yyyy')#</span>
                            <br />
                            <br />
                            <hr />
                            <span style="color: \\#d15b47;">**Thêm sản phẩm này từ danh sách bên.</span>

                        </div>
                        #}else{#
                        <div style="height: 50px; font-size: 18px; color: \\#ccc; padding-top: 100px; text-align: center; overflow-y: hidden !important; ">
                            Thêm sản phẩm từ danh sách bên.
                        </div>
                        #}#
                    </div>
                    <div id="total" style=" height: 55px; background: \\#f2f2f2; margin-bottom: 7px; padding: 10px 10px 0 15px; border-bottom: 2px dotted \\#ccc;">
                        <div class="row-fluid" style="border-bottom: 1px solid \\#ccc; min-height: 15px; height: 20px; font-weight: bold;">
                            <div class="span9">Tổng tiền</div>
                            <div class="span3 totalPrice" style="font-size: 12px;text-align:right;">0đ</div>
                        </div>
                        <div style="min-height: 15px; height: 20px; font-weight: bold; color: \\#d15b47;">
                            <div class="span9">Trả góp 12 tháng - trả hàng tháng tạm tính</div>
                            <div class="span3 totalMonth" style="font-size: 12px; text-align: right;">0đ</div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row-fluid" style="display:inline-flexbox;">
                <a class="btn btn-grey btn-small" style="width: 200px;" onclick="closeBuyInfo()">
                    <i class="icon-arrow-left"></i>
                    QUAY LẠI
                </a>
                <a class="btn btn-primary btn-small" id="btnPurchaseOrder" style="width: 229px;" data-physical="#=customer.PhysicalID#">
                    <i class="icon-shopping-cart"></i>
                    ĐẶT HÀNG
                </a>
            </div>
        </div>
        <div class="span6">
            <div class="row-fluid">
                <div class="span12" style="background-color: \\#E6E6E6;padding: 3px; margin-bottom: 5px;">
                    <span class="input-icon input-icon-right" style="width:98%">
                        <input type="text" id="searchProduct1" style="width:95%" placeholder="Tìm kiếm sản phẩm theo tên" />
                        <i class="icon-search"></i>
                    </span>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span12">
                    @(Html.Kendo().ListView<ERPAPD.Models.DC_SKU_Property>()
                                    .Name("listViewProduct1")
                                    .HtmlAttributes(new { @style = "border:none;overflow:auto;height:490px;" })
                                    .TagName("div")
                                    .Pageable(pageable => pageable.ButtonCount(5))
                                    .ClientTemplateId("ProductsListViewTemplate1")
                                    .Events(e => { e.DataBound("onDataBoundLV"); })
                                    .DataSource(dataSource =>
                                    {
                                        dataSource.Sort(s => s.Add(m => m.promotionPercent).Descending());
                                        dataSource.Read(read => read.Action("listViewProductRead", "Telesale"));
                                        dataSource.PageSize(20);
                                    })
                                    .ToClientTemplate()
                    )
                </div>
            </div>

        </div>
    </div>
</script>

<script type="text/x-kendo-template" id="listCartTemplate">
    #if(data.length < 1){#
    #if(IsFromSMS()){#
    <div style="padding-top: 80px; text-align: center; overflow-y: hidden !important; ">
        <span style="font-size: 18px; color: \\#2283C5; ">#=LoadRequestProduct()#</span>
        <br />
        <span style="font-size: 14px; color:\\#555; ">#=LoadRequestTime()#</span>
        <br />
        <br />
        <hr />
        <span style="color: \\#d15b47;">**Thêm sản phẩm này từ danh sách bên.</span>

    </div>
    #}else{#
    <div style="height: 50px; font-size: 18px; color: \\#ccc; padding-top: 100px; text-align: center; overflow-y: hidden !important; ">
        Thêm sản phẩm từ danh sách bên.
    </div>
    #}#
    #}else{#
    <div class="row-fluid slimScrollDiv">
        # for (var i = 0; i < data.length; i++) { #
        <div>
            <div class="profile-activity clearfix">
                <div class="span7">
                    <img class="pull-left" src="#=data[i].image#">
                    <div style="margin-top:5px;">
                        <span>#:data[i].productId# - #:data[i].colorId# - #:data[i].name#</span> - Đơn giá: #:kendo.toString(data[i].sellingPrice*1,'N0')#đ

                    </div>
                </div>
                <div class="span1">
                    <input type="number" id="quantity" min="1" max="99" style="width: 30px;" value="#=data[i].quantity#" onchange="ChangeQuantity()" class="inputQty" data-productid="#:data[i].productId#" data-colorid="#:data[i].colorId#" />
                </div>
                <div class="span3" style="text-align:right;font-weight:bold;">
                    #:kendo.toString(data[i].sellingPrice*data[i].quantity,'N0')#đ
                </div>
                <div class="span1 center-align">
                    <a class="btn btn-minier btn-danger btnRemove" data-productid="#:data[i].productId#" data-colorid="#:data[i].colorId#">
                        <i class="icon-remove"></i>
                    </a>
                </div>
            </div>
        </div>
        # } #
    </div>
    # } #

</script>

<script type="text/x-kendo-template" id="ProductsListViewTemplate1">
    <div class="row-fluid">
        <div class="span12">
            <div class="profile-activity clearfix">
                <div class="span10">
                    <img class="pull-left" src="https://deca.vn/#:thumbnailImageUrl#">
                    <div style="margin-top:5px;">
                        <a class="user" style="color:\\#555555; font-size: 12px;text-decoration:none" href="https://deca.vn/ajax/box_chi_tiet_san_pham_previewocm/index/#=productId#/119/1/" target="_blank">#:productId# - #:colorId# - #:name#</a>
                        <br />
                        Màu #:colorName# | Giá: <span style="color:red;font-weight:bold;">#:kendo.toString(sellingprice,'N0')#đ</span>
                        #if(promotionPercent>0){#
                        | <span style="text-decoration:line-through">#:kendo.toString(price,'N0')#</span> | <span style="color:red;font-weight:bold;"> -#:promotionPercent#%</span>
                        #}#
                    </div>
                </div>
                <div class="span2">
                    <div style="margin-top:3px;">
                        <a class="btn btn-minier btn-success btnAdd" data-merchantid="#:merchantID#" data-productid="#:productId#" data-colorid="#:colorId#" data-name="#:name#" data-image="https://deca.vn/#:thumbnailImageUrl#" data-sellingprice="#=sellingprice#">
                            <i class="icon-plus bigger-130"></i>
                            Thêm
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</script>

<script type="text/x-kendo-template" id="ShippingAddressTemplate">
    <div class="row-fluid">
        <div class="span12">
            <div class="row-fluid">
                <label>
                    <input name="DeliveryAddressType" type="radio" class="ace" value="OldAddress" onclick="changeAddressType('OldAddress','#=PhysicalID#')" checked>
                    <span class="lbl"> Địa chỉ hiện có</span>
                </label>
            </div>
            <div class="row-fluid">
                <select class="span12" id="slDeliveryBranchID">
                    #for(var i=0; i < shipping.length; i++){#
                    #if(i==0){#
                    <option value="#=shipping[i].BranchID#" selected>#=shipping[i].Address#, #=shipping[i].DistrictName#, #=shipping[i].CityName#</option>
                    #}else{#
                    <option value="#=shipping[i].BranchID#">#=shipping[i].Address#, #=shipping[i].DistrictName#, #=shipping[i].CityName#</option>
                    #}#
                    #}#
                </select>
            </div>
        </div>
    </div>
    <div class="row-fluid">
        <div class="span12">
            <div class="row-fluid">
                <label>
                    <input name="DeliveryAddressType" type="radio" value="NewAddress" onclick="changeAddressType('NewAddress', '#=PhysicalID#')" class="ace">
                    <span class="lbl"> Địa chỉ giao hàng @Resources.Multi.New</span>
                </label>
            </div>
            <div class="row-fluid">
                <div class="control-group">
                    <label class="control-label" for="form-field-1">Tỉnh/Thành phố</label>
                    <div class="controls">
                        @(Html.Kendo().DropDownList().Name("newDeliveryCity")
                                      .AutoBind(false)
                                      .OptionLabel("Chọn...")
                                      .HtmlAttributes(new { style = "width:100%;" })
                                      .Enable(false)
                                          .DataTextField("TerritoryName")
                                          .DataValueField("TerritoryID")
                                      .DataSource(dataSource =>
                                      {
                                          dataSource.Read(read => read.Action("GetCity", "Territory"))
                                                    .ServerFiltering(true);
                                      }).ToClientTemplate()
                        )
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label" for="form-field-1">Quận/Huyện</label>
                    <div class="controls">
                        @(Html.Kendo().DropDownList().Name("newDeliveryDistrict")
                                      .AutoBind(false)
                                                .Enable(false)
                                      .OptionLabel("Chọn...")
                                              .HtmlAttributes(new { style = "width:100%;" })
                                          .DataTextField("TerritoryName")
                                          .DataValueField("TerritoryID")
                                                  .Events(e => e.DataBound("onDataBoundnewDeliveryDistrict"))
                                      .DataSource(dataSource =>
                                      {
                                          dataSource.Read(read => read.Action("GetDistrict", "Territory").Data("filterDistrict"))
                                                    .ServerFiltering(true);
                                      }).CascadeFrom("newDeliveryCity").ToClientTemplate()

                        )
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label" for="form-field-8">Địa chỉ: Số nhà, tên đường, phường</label>
                    <div class="controls">
                        <textarea class="span12" id="newDeliveryAddress" placeholder="Nhập số nhà, tên đường, phường" disabled></textarea>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row-fluid">
        <button class="btn btn-primary btn-mini pull-right" onclick="SubmitChangeDeliveryInfo('#=PhysicalID#')">Thay đổi</button>
        <button class="btn btn-grey btn-mini pull-right" onclick="$('\\#DeliveryInfoWindow').data('kendoWindow').close()">Quay lại</button>
    </div>
</script>
<script type="text/javascript">
    function changeDoneTicket() {
        $("input[name='IsDoneTicket']").val($('#isDoneTicketCheckbox').prop('checked'));
    }
    $(function () {
        kendo.ui.Window.fn._keydown = function (originalFn) {
            var KEY_ESC = 27;
            return function (e) {
                if (e.which !== KEY_ESC) {
                    originalFn.call(this, e);
                }
            };
        }(kendo.ui.Window.fn._keydown);
    })
    function htmlDecode(value) {
        return value.replace(/&lt;/g, "<").replace(/&gt;/g, ">");
    }

</script>

@( Html.Kendo().Window().Name("telesaleWindow")
      .Title("Chi tiết thông tin")
      .Visible(false)
      .Modal(true)
      .Draggable(false)
        // .Width(800)
        .HtmlAttributes(new { @class = "span12", style = "width:100%;margin-left:0px;" })
)

@*product*@
@( Html.Kendo().Window().Name("buyWindow")
      .Title("ĐẶT HÀNG")
      .Visible(false)
      .Modal(true)
      .Actions(action => action.Pin())
      .Draggable(false)
       .Width(1000)
        .HtmlAttributes(new { @class = "span12", style = "width:100%;margin-left:0px;" })
)
@( Html.Kendo().Window().Name("DeliveryInfoWindow")
      .Title("Thay đổi địa chỉ giao hàng")
      .Visible(false)
      .Modal(true)
      .Draggable(true)
       .Width(600)
)
<script type="text/javascript">
    function resizeGrid() {
        var offsetbottom = parseInt($(window).height()) - parseInt($('#GridCallHistory').offset().top);
        var gridElement = $("#GridCallHistory"),
        dataArea = gridElement.find(".k-grid-content"),
        dataTransArea = $("#GridTransactionHistory").find(".k-grid-content"),
        dataActionArea = $("#GridActionHistory").find(".k-grid-content"),
        dataSMSArea = $("#GridSendSMS").find(".k-grid-content"),
        otherElements = gridElement.children().not(".k-grid-content"),
        otherElementsHeight = 0;
        otherElements.each(function () {
            otherElementsHeight += $(this).outerHeight();
        });
        dataArea.height(offsetbottom - otherElementsHeight - 15);
        dataTransArea.height(offsetbottom - otherElementsHeight - 15);
        dataSMSArea.height(offsetbottom - otherElementsHeight - 15);
        dataActionArea.height(offsetbottom - otherElementsHeight - 15);
    }
    var telesalePopupTemplate = kendo.template($("#telesalePopup").html());
    var ShippingAddressTemplate = kendo.template($("#ShippingAddressTemplate").html());
    var telesaleWindowPopup;
    function filterCallResult() {
        var selectedCallResultGroup = $("#ResultID").val();
        return {
            CallResultGroup: selectedCallResultGroup
        };
    }
    function filterCallResultGroup() {
        return {
            CallResultGroup: '0'
        };
    }

    function SubResultIDBound(e) {
        var dropdownlist = $("#SubResultID").data("kendoDropDownList");
        dropdownlist.select(1);
    }

    function AddCallLogComplete() {
        $("#btnClosePopup").off('click').on('click', function () {
            $('#telesaleWindow').data('kendoWindow').close();
        });
        $("#btnLoadAppointmentPopup").off('click').on('click', function () {
            GetNextAppointment();
        });
        $("#btnNextPopup").off('click').on('click', function () {
            GetNextCustomerInRule();
        });
        $("#btnLoadTicketPopup").off('click').on('click', function () {
            GetNextTicket();
        });
        $("#GridCallHistory").data("kendoGrid").dataSource.read();
        $("#gridAgentOrderRequest").data("kendoGrid").dataSource.read();
        $("#GridAgentRequestTicketHistory").data("kendoGrid").dataSource.read();

        // $("#btnLoadPreorderPopup").removeAttr("disabled");
        //làm cho lịch hẹn giảm xuống 1 sau khi đã save call log.
        //kiểm tra đây có phải là save call log từ RefType ="CallID" (Từ lịch gọi lại)
        var refType = $("input[name='RefType']").val();
        if (refType != null && refType.length > 0 && refType == "CallID") {
            var lbApointmentCount = $("#lbAppoinmentCount");
            if (typeof lbApointmentCount != "undefined") {
                var countAppoinment = lbApointmentCount.text();
                if (countAppoinment != "9+") {
                    var intcountAppoinment = (parseInt(countAppoinment) - 1);
                    if (intcountAppoinment > 0) {
                        lbApointmentCount.text(intcountAppoinment);
                    } else {
                        lbApointmentCount.hide();
                    }
                }
            }
        }
        if (refType != null && refType.length > 0 && refType == "TicketID") {
            var lbTicketCount = $("#lbTicketCount");
            if (typeof lbTicketCount != "undefined") {
                var countTicket = lbTicketCount.text();
                if (lbTicketCount != "9+") {
                    var intcountTicket = (parseInt(countAppoinment) - 1);
                    if (intcountTicket > 0) {
                        lbTicketCount.text(intcountTicket);
                    } else {
                        lbTicketCount.hide();
                    }
                }
            }
        }

    }

    function ShowErrorNotLog() {
        $.gritter.add({
            // (string | mandatory) the heading of the notification
            title: "@Resources.Multi.Error",
            // (string | mandatory) the text inside the notification
            text: '@Resources.Multi.Save kết quả cuộc gọi trước!',
            class_name: 'gritter-error'
        });
    }

    function initTelesalePopup() {
        $("#btnClosePopup").on('click', function () {
            ShowErrorNotLog();
        });
        $("#btnLoadAppointmentPopup").on('click', function () {
            ShowErrorNotLog();
        });
        $("#btnLoadTicketPopup").on('click', function () {
            ShowErrorNotLog();
        });
        $("#btnNextPopup").on('click', function () {
            ShowErrorNotLog();
        });

        $("#btnCall").bind("click", function () {
            var mobile = $(this).attr("data-mobile");
            XliteCall(mobile);
        });

        $('.input-mask-date').mask('99/99/9999 99:99');
        $("#telesaleWindow").prev().remove();
        $("#telesaleWindow").closest(".k-window").css("padding-top", "0px");
        setTimeout(function () {
            $(window).trigger('resize');
            resizeGrid();
        }, 350)
        $("#CallLogForm").validate({
            // Rules for form validation
            submitHandler: function (form) {
                $(form).ajaxSubmit({
                    beforeSend: function () {
                        $("#btnSaveCallLog").attr("disabled", "disabled");
                        $.blockUI({ message: '<i class="icon-spinner icon-spin blue bigger-125" style="font-size:30px;"></i>', theme: false })
                    },
                    success: function (data) {
                        if (typeof $("#hiddenResultID") != "undefined") {
                            $("#hiddenResultID").remove();
                            $("#hiddenSubResultID").remove();
                        }
                        if (data.success) {
                            $.gritter.add({
                                title: '@Resources.Multi.Success',
                                text: data.message,
                                class_name: 'gritter-success'
                            });
                            LoadGridAppointment();
                            AddCallLogComplete();
                            $("#btnResetCallLog").click();
                        }
                        else {
                            $.gritter.add({
                                // (string | mandatory) the heading of the notification
                                title: "@Resources.Multi.Error",
                                // (string | mandatory) the text inside the notification
                                text: data.message,
                                class_name: 'gritter-error'
                            });
                        }
                        $("#btnSaveCallLog").removeAttr("disabled");
                    },
                    complete: function () {
                        $.unblockUI();
                    }
                });
                return false;
            }
        });

        $("#searchProduct").bind("textchange", function () {
            listView = $("#listViewProduct").data("kendoListView");
            var text = $('#searchProduct').val();
            var filter = { logic: "and", filters: [] };
            var filtertext = { logic: "or", filters: [] };

            if (text) {
                filtertext.filters.push({ field: "name", operator: "contains", value: text });
                filtertext.filters.push({ field: "colorName", operator: "contains", value: text });
                filter.filters.push(filtertext);
            }
            listView.dataSource.filter(filter);
        });
        $('#btnPurchase').bind('click', function () {
            var physicalId = $(this).attr("data-physical");
            initBuyInfo(physicalId);
        });
    }

    $(document).ready(function () {
        //$("body").disableSelection();

        //$('body').bind('contextmenu', function (e) {
        //    return false;
        //});
        //document.onkeypress = function (event) {
        //    event = (event || window.event);
        //    if (event.keyCode == 123) {
        //        //alert('No F-12');
        //        return false;
        //    }
        //}
        //document.onmousedown = function (event) {
        //    event = (event || window.event);
        //    if (event.keyCode == 123) {
        //        //alert('No F-keys');
        //        return false;
        //    }
        //}
        //document.onkeydown = function (event) {
        //    event = (event || window.event);
        //    if (event.keyCode == 123) {
        //        //alert('No F-keys');
        //        return false;
        //    }
        //}
    });

    function GetNextCustomerInRule() {
        $(document).ajaxStart($.blockUI({ message: '<i class="icon-spinner icon-spin blue bigger-125" style="font-size:30px;"></i>', theme: false })).ajaxStop($.unblockUI);
        $.post(r + "/Telesale/getPopupRuleData/", function (data) {
            if (data.success) {
                LoadDataToPopup(data, "RequestSystem", '', '', false);
            } else {
                $.gritter.add({
                    title: "@Resources.Multi.Error",
                    text: data.message,
                    class_name: 'gritter-error'
                });
            }
        });
    }
    function GetNextAppointment() {
        $(document).ajaxStart($.blockUI({ message: '<i class="icon-spinner icon-spin blue bigger-125" style="font-size:30px;"></i>', theme: false })).ajaxStop($.unblockUI);
        $.post(r + "/Telesale/getNextAppointmentData/", function (data) {
            if (data.success) {
                LoadDataToPopup(data, "Re-Call", data.refID, 'CallID', false);
            } else {
                $.gritter.add({
                    title: "@Resources.Multi.Error",
                    text: data.message,
                    class_name: 'gritter-error'
                });
            }
        });
    }

    function GetNextTicket() {
        $(document).ajaxStart($.blockUI({ message: '<i class="icon-spinner icon-spin blue bigger-125" style="font-size:30px;"></i>', theme: false })).ajaxStop($.unblockUI);
        $.post(r + "/Telesale/getNextTicketData/", function (data) {
            if (data.success) {
                LoadDataToPopup(data, "Ticket", data.refID, 'TicketID', false);
            } else {
                $.gritter.add({
                    title: "@Resources.Multi.Error",
                    text: data.message,
                    class_name: 'gritter-error'
                });
            }
        });
    }
    function LoadDataToPopup(data, source, refid, reftype, isOpen) {
        var popupData = {};
        var masterData = {
            Source: source,
            RefID: refid,
            RefType: reftype,
            RuleID: typeof data.ruleid == 'undefined' ? '' : data.ruleid,
            AppointmentCount: data.appointment,
            TicketCount: data.ticket,
        };
        popupData.Customer = data.customer;
        popupData.Master = masterData;
        if (isOpen)
            telesaleWindowPopup = $("#telesaleWindow").data("kendoWindow");
        telesaleWindowPopup.content(telesalePopupTemplate(popupData));
        if (isOpen) {
            telesaleWindowPopup.center().open().maximize();
        }
        $('#btnSendTicketPopup').bind("click", function () {
            OpenCreateTicketPopup(data.customer);
        });
        $('#btnSendSMSPopup').bind("click", function () {
            OpenSendSMSPopup(data.customer);
        });
        initTelesalePopup();
    }

    function OpenSkipCustomerPopup(Phone, PhysicalID, Source, RefID, RefType, RuleID, CustomerID) {
        var wnd = $("#SkipCustomerWindow").data("kendoWindow");
        var data = {
            Phone: Phone,
            PhysicalID: PhysicalID,
            Source: Source,
            RefID: RefID,
            RefType: RefType,
            RuleID: RuleID,
            CustomerID: CustomerID == "null" ? '' : CustomerID,
        };
        wnd.content(SkipCustomerTemplate(data));
        wnd.center().open();
        $("#SkipCustomerForm").validate({
            // Rules for form validation
            submitHandler: function (form) {
                $(form).ajaxSubmit({
                    beforeSend: function () {
                        $("#btnSkipCustomer").attr("disabled", "disabled");
                        $.blockUI({ message: '<i class="icon-spinner icon-spin blue bigger-125" style="font-size:30px;"></i>', theme: false });
                    },
                    success: function (data) {
                        if (!data.error) {
                            $.gritter.add({
                                title: "@Resources.Multi.Success",
                                text: "Bỏ qua khách hàng thành công!",
                                class_name: 'gritter-success',
                            });
                            LoadGridAppointment();
                            AddCallLogComplete();
                            $('#SkipCustomerWindow').data('kendoWindow').close();
                        }
                        else {
                            $.gritter.add({
                                title: "@Resources.Multi.Error",
                                text: data.message,
                                class_name: 'gritter-error',
                            });
                        }
                    },
                    complete: function () {
                        $("#btnSkipCustomer").removeAttr("disabled");
                        $.unblockUI();
                    }
                });
                return false;
            }
        });

    }
</script>
<script>
    function filterDistrict() {
        var selectedCity = $("#newDeliveryCity").val();
        return {
            CityID: selectedCity
        };
    }
    var newDeliveryDistrictSelect = "";
    function onDataBoundnewDeliveryDistrict() {
        if (newDeliveryDistrictSelect != "")
            $("#newDeliveryDistrict").data("kendoDropDownList").value(newDeliveryDistrictSelect);

    }
    function changeAddressType(type, PhysicalID) {
        if (type == 'NewAddress') {
            //enable new, disable old
            $("#slDeliveryBranchID").attr("disabled", "disabled");
            $("#newDeliveryDistrict").data("kendoDropDownList").enable(true);
            $("#newDeliveryCity").data("kendoDropDownList").enable(true);
            $("#newDeliveryAddress").removeAttr("disabled");
            //check if customer already has custom address, load it
            $.post(r + "/Telesale/GetCurrentCustomDeliveryAddress/", { PhysicalID: PhysicalID }, function (data) {
                if (data.hasValue) {
                    $("#newDeliveryCity").data("kendoDropDownList").value(data.data.CityID);
                    newDeliveryDistrictSelect = data.data.DistrictID;
                    $("#newDeliveryDistrict").data("kendoDropDownList").dataSource.read();
                    $("#newDeliveryAddress").val(data.data.Address);
                }
            });
        }
        if (type == 'OldAddress') {
            //disable new
            $("#slDeliveryBranchID").removeAttr("disabled");
            $("#newDeliveryDistrict").data("kendoDropDownList").enable(false);
            $("#newDeliveryCity").data("kendoDropDownList").enable(false);
            $("#newDeliveryAddress").attr("disabled", "disabled");
        }
    }
    var buyPopupTemplate = kendo.template($("#buyPopup").html());
    var BuyInfo = [];
    var weight = 0;
    function onDataBoundLV(e) {

        $(".btnAdd").bind("click", function () {
            weight++;
            var merchantId = $(this).attr("data-merchantid");
            var productId = $(this).attr("data-productid");
            var colorId = $(this).attr("data-colorId");
            var name = $(this).attr("data-name");
            var image = $(this).attr("data-image");
            var sellingPrice = $(this).attr("data-sellingprice");
            if (_.where(BuyInfo, { productId: productId, colorId: colorId }).length > 0) {
                var filtered = _.where(BuyInfo, { productId: productId, colorId: colorId })[0];
                if (filtered.quantity < 99) {
                    BuyInfo = _.without(BuyInfo, filtered);
                    filtered.quantity = parseInt(filtered.quantity) + 1;
                    BuyInfo.push(filtered);
                }
            } else {
                var newObj = { productId: productId, colorId: colorId, name: name, image: image, sellingPrice: sellingPrice, quantity: 1, weight: weight, merchantId: merchantId };
                BuyInfo.push(newObj);
            }
            BuyInfo = _.sortBy(BuyInfo, 'weight');
            InitBuy(BuyInfo);
        });
    }

    var cartTemplate = kendo.template($("#listCartTemplate").html());

    function InitBuy(data) {
        $("#listCart").html(cartTemplate(data));

        var total = data.reduce(function (a, b) {
            return a + (b.sellingPrice * b.quantity); // return previous total plus current age
        }, 0); // initialize age with 0 that will be passed as memo
        $('.totalPrice').html($.number(total, 'n0') + "đ");
        $('.totalMonth').html($.number(total / 12, 'n0') + "đ");
        $('.btnRemove').bind("click", function () {
            var productId = $(this).attr("data-productid");
            var colorId = $(this).attr("data-colorId");
            if (_.where(BuyInfo, { productId: productId, colorId: colorId }).length > 0) {
                var filtered = _.where(BuyInfo, { productId: productId, colorId: colorId })[0];
                BuyInfo = _.without(BuyInfo, filtered);
            }
            BuyInfo = _.sortBy(BuyInfo, 'weight');
            InitBuy(BuyInfo);
        });

        $('.inputQty').bind("textchange", function () {
            var productId = $(this).attr("data-productid");
            var colorId = $(this).attr("data-colorId");
            var quantity = $(this).val();

            if (quantity == "" || quantity == null || quantity == 0) {
                quantity = 1;
            }

            if (_.where(BuyInfo, { productId: productId, colorId: colorId }).length > 0) {
                var filtered = _.where(BuyInfo, { productId: productId, colorId: colorId })[0];
                BuyInfo = _.without(BuyInfo, filtered);
                filtered.quantity = quantity;
                BuyInfo.push(filtered);
            }
            BuyInfo = _.sortBy(BuyInfo, 'weight');
            InitBuy(BuyInfo);
        })
    }

    function closeBuyInfo() {
        if (BuyInfo.length > 0) {
            var a = confirm("Bạn có chắc muốn thoát đặt hàng?");
            if (a) {
                $('#buyWindow').data('kendoWindow').close();
            } else {
                event.preventDefault();
                return false;
            }
        } else {
            $('#buyWindow').data('kendoWindow').close();
        }

    }
    var RequestSource = '';
    var RequestSMS = {};
    function IsFromSMS() {
        if (RequestSource == 'SMSMO') return true;
        else return false;
    }
    function LoadRequestProduct() {
        return "Khách hàng muốn mua " + RequestSMS.ProductName;
    }
    function LoadRequestTime() {
        return "Nhu cầu gửi lúc: " + kendo.toString(kendo.parseDate(RequestSMS.CreatedAt), 'HH:mm dd/MM/yyyy');
    }
    function initBuyInfo(physicalId) {
        $(document).ajaxStart($.blockUI({ message: '<i class="icon-spinner icon-spin blue bigger-125" style="font-size:30px;"></i>', theme: false })).ajaxStop($.unblockUI);
        var source = $("#CallLogForm input[name='Source']").val();
        var smsId = $("#CallLogForm input[name='RefID']").val();
        $.post(r + "/Telesale/getBuyInfo", { physicalId: physicalId, source: source, smsId: smsId }, function (data) {
            buyPopup = $("#buyWindow").kendoWindow({
                actions: ["Pin"],
                draggable: true,
                height: "300px",
                top: "0px",
                modal: true,
                resizable: false,
                width: "500px",
                visible: false
            }).data("kendoWindow");
            if (typeof data.source != 'undefined' && data.source != null) {
                RequestSource = data.source;
                RequestSMS = data.sms;
            }
            var popupData = {};
            buyPopup.content(buyPopupTemplate(data));
            buyPopup.center().open();
            $("#buyWindow").closest(".k-window").css({
                top: 0
            });

            $("#searchProduct1").bind("textchange", function () {
                listView = $("#listViewProduct1").data("kendoListView");
                var text = $('#searchProduct1').val();
                var filter = { logic: "and", filters: [] };
                var filtertext = { logic: "or", filters: [] };

                if (text) {
                    filtertext.filters.push({ field: "name", operator: "contains", value: text });
                    filtertext.filters.push({ field: "colorName", operator: "contains", value: text });
                    filter.filters.push(filtertext);
                }
                listView.dataSource.filter(filter);
            });
            BuyInfo = [];

            //dat hang
            $("#btnPurchaseOrder").bind("click", function () {
                var data = BuyInfo;
                if (data.length > 0) {
                  var isConfirm= confirm("Đồng ý đặt hàng?");
                  if (isConfirm) {
                        $("#btnPurchaseOrder").attr("disabled", "disabled");
                        $(document).ajaxStart($.blockUI({ message: '<i class="icon-spinner icon-spin blue bigger-125" style="font-size:30px;"></i>', theme: false })).ajaxStop($.unblockUI);
                        var physicalId = $(this).attr("data-physical");
                        var note = $("#orderNote").val();
                        var decaNote = $("#decaNote").val();
                        var source = $("#CallLogForm input[name='Source']").val();
                        var smsId = $("#CallLogForm input[name='RefID']").val();
                        var address = $("#OrderDeliveryAddress").val();
                        var district = $("#OrderDeliveryDistrict").val();
                        var city = $("#OrderDeliveryCity").val();
                        if (typeof decaNote == 'undefined') decaNote = "";

                        $.post(r + "/Telesale/CreateOrder", { physicalId: physicalId, listdata: data, note: note, decaNote: decaNote, source: source, smsId: smsId, address: address, district: district, city: city }, function (data) {
                            if (data.success) {
                                $.gritter.add({
                                    // (string | mandatory) the heading of the notification
                                    title: 'Tạo đơn hàng @Resources.Multi.Success.ToLower()',
                                    // (string | mandatory) the text inside the notification
                                    text: "Đặt đơn hàng thành công: " + data.orderId + " - " + $.number(data.Amount),
                                    class_name: 'gritter-success'
                                });
                                if (data.ocmMessage) {
                                    $.gritter.add({
                                        // (string | mandatory) the heading of the notification
                                        title: 'Lỗi tạo đơn hàng từ OCM',
                                        // (string | mandatory) the text inside the notification
                                        text: data.ocmMessage,
                                        class_name: 'gritter-error'
                                    });
                                }
                                $('#buyWindow').data('kendoWindow').close();

                                var ResultID = $("#ResultID").data("kendoDropDownList");
                                ResultID.value("R015");
                                ResultID.trigger("change");

                                var SubResultID = $("#SubResultID").data("kendoDropDownList");
                                SubResultID.enable();
                                SubResultID.value("R017");
                                SubResultID.trigger("change");
                                $("#GridTransactionHistory").data("kendoGrid").dataSource.read();
                                $("#callresultContent").val("Đặt đơn hàng thành công: " + data.orderId + " - " + $.number(data.Amount));
                                $("#callResultOrderID").val(data.orderId);
                                $("#CallLogForm").prepend("<input type='hidden' id='hiddenSubResultID' name='SubResultID' value='R017' />");
                                $("#CallLogForm").prepend("<input type='hidden' id='hiddenResultID' name='ResultID' value='R015' />")
                                $("#CallLogForm").submit();
                                $("#btnPurchaseOrder").removeAttr("disabled");
                            } else {
                                $.gritter.add({
                                    // (string | mandatory) the heading of the notification
                                    title: "@Resources.Multi.Error",
                                    // (string | mandatory) the text inside the notification
                                    text: data.error,
                                    class_name: 'gritter-error'
                                });
                                $("#btnPurchaseOrder").removeAttr("disabled");
                            }
                        });
                    } else {
                        return false;
                    }
                } else {
                    $.gritter.add({
                        // (string | mandatory) the heading of the notification
                        title: "@Resources.Multi.Error",
                        // (string | mandatory) the text inside the notification
                        text: 'Vui lòng chọn sản phẩm',
                        class_name: 'gritter-error'
                    });
                    $("#btnPurchaseOrder").removeAttr("disabled");
                }
            });

            function closeBuyInfo() {
                if (BuyInfo.length > 0) {
                    confirm("Bạn có chắc muốn thoát đặt hàng?");
                    if (confirm) {
                        $('#buyWindow').data('kendoWindow').close();
                    } else {
                    }
                } else {
                    $('#buyWindow').data('kendoWindow').close();
                }

            }

        });
    }

    function ChangeDeliveryInfo(PhysicalID) {
        //get shipping address
        $(document).ajaxStart($.blockUI({ message: '<i class="icon-spinner icon-spin blue bigger-125" style="font-size:30px;"></i>', theme: false })).ajaxStop($.unblockUI);

        $.post(r + "/Telesale/GetShippingAddress", { PhysicalID: PhysicalID }, function (data) {
            if (data) {
                data.PhysicalID = PhysicalID;
                var wnd = $("#DeliveryInfoWindow").data("kendoWindow");
                wnd.content(ShippingAddressTemplate(data));
                wnd.center().open();
            } else {
                $.gritter.add({
                    // (string | mandatory) the heading of the notification
                    title: "@Resources.Multi.Error",
                    // (string | mandatory) the text inside the notification
                    text: 'Không lấy được thông tin giao hàng của khách hàng!',
                    class_name: 'gritter-error'
                });
            }
        });

    }

    function SubmitChangeDeliveryInfo(PhysicalID) {
        var type = $("input[name='DeliveryAddressType']:checked").val();
        if (type == "NewAddress") {
            var address = $('#newDeliveryAddress').val();
            var CityName = $("#newDeliveryCity").data("kendoDropDownList").text();
            var CityID = $("#newDeliveryCity").data("kendoDropDownList").value();
            var DistrictName = $("#newDeliveryDistrict").data("kendoDropDownList").text();
            var DistrictID = $("#newDeliveryDistrict").data("kendoDropDownList").value();
            //insert or update address
            if (address && CityID && DistrictID) {
                $.post(r + "/Telesale/SaveCustomDeliveryAddress", { PhysicalID: PhysicalID, Address: address, CityID: CityID, DistrictID: DistrictID }, function (data) {
                    if (data.success) {
                        $('#DisplayCompanyInfo').hide();
                        $('#DisplayAddressInfo').text(address + ", " + DistrictName + ', ' + CityName);
                        $('#OrderDeliveryCity').val(CityID);
                        $('#OrderDeliveryDistrict').val(DistrictID);
                        $('#OrderDeliveryAddress').val(address);
                        $('#DeliveryInfoWindow').data('kendoWindow').close();
                    }
                    else {
                        $.gritter.add({
                            // (string | mandatory) the heading of the notification
                            title: "@Resources.Multi.Error",
                            // (string | mandatory) the text inside the notification
                            text: data.message,
                            class_name: 'gritter-error'
                        });
                    }
                })
            }
        } else if (type == "OldAddress") {
            var branchID = $('#slDeliveryBranchID').val();
            if (branchID) {
                $.post(r + '/Telesale/GetAddressByBranchID', { BranchID: branchID }, function (data) {
                    if (data) {
                        $('#DisplayCompanyInfo').show();
                        $('#DisplayCompanyInfo').text("Giao hàng tại công ty " + data.CompanyName + " chi nhánh: " + data.BranchName);
                        $('#DisplayAddressInfo').text(data.Address + ", " + data.DistrictName + ', ' + data.CityName);
                        $('#OrderDeliveryCity').val(data.CityID);
                        $('#OrderDeliveryDistrict').val(data.DistrictID);
                        $('#OrderDeliveryAddress').val(data.Address);
                        $('#DeliveryInfoWindow').data('kendoWindow').close()
                    } else {
                        $.gritter.add({
                            // (string | mandatory) the heading of the notification
                            title: "@Resources.Multi.Error",
                            // (string | mandatory) the text inside the notification
                            text: 'Không lấy được thông tin giao hàng của khách hàng!',
                            class_name: 'gritter-error'
                        });
                    }
                })
            }
        }
    }
</script>
