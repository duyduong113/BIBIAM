<style>
    #current-info-popup{
        position:absolute;
        top:0;
       right:100%;
        z-index:100;
        width:60%;
        display:none;
    }
    .active{
        display:block !important;
    }
</style>
@using (Html.BeginForm("CreateHistoryCall", "Telesale", FormMethod.Post, new { id = "CreateHistoryCallForm" }))
{
    <div class="row-fluid">
        <h4 style="margin:0;line-height:24px" class="span12 title-group hr-cuss">Ghi nhận cuộc gọi</h4>
        @if (ViewBag.currentWork != null)
        {
            <p class="">
                <a class="editable" href="" onclick="miniMninus()"><i class="icon-info-sign"></i> Xem chi tiết công việc</a>
                <label style="display:inline-flex;margin-left:10px">
                    <input name="IDTask" type="checkbox" value="@ViewBag.currentWork.RowID" style="margin-top:3px"/>
                    <span>Hoàn tất công việc này</span>
                </label>
            </p>
        }
        @if (ViewBag.currentAppointment != null)
        {
            <p class="">
                <a class="editable" href="" onclick="miniMninus()"><i class="icon-info-sign"></i> Xem chi tiết lịch hẹn</a>
                <label style="display:inline-flex;margin-left:10px">
                    <input id="status-check" name="IDAppoint" type="checkbox" value="@ViewBag.currentAppointment.RowID" style="margin-top:3px" />
                    <span>Hoàn tất lịch hẹn này</span>
                </label>
            </p>
        }
        <div class="span12" style="display:inline-flex;margin:0;">
            @foreach (var item in ViewBag.listTypeCall)
            {
                <label style="margin-right:5px;">
                    <input name="Type" type="radio" value="@item.ParamID" class="ace">
                    <span class="lbl"> @item.Value </span>
                </label>
            }
        </div>
    </div>
    <div data-active="0" id="current-info-popup" class="">
        @Html.Partial("_current_call")
        <a onclick="miniMninus()" href="" style="position:absolute;top:10px;right:10px;cursor:pointer"><i class="icon-minus"></i></a>
    </div>
    <div style="margin:0;" class="span12">

        <div class="span12">
            <div class="row-fluid">
                <div class="span7">
                    <div class="control-group">
                        @*<label>Tiêu đề (*)</label>*@
                        <div class="controls">
                            <input name="Title" class="span12" type="text" placeholder="Tiêu đề" />
                        </div>
                    </div>
                </div>
                <div class="span4">
                    <div class="control-group">
                        <div class="span11 input-append">
                            <input class="span12 date-picker" name="RecallTime" type="text" data-date-format="dd-mm-yyyy" placeholder="Ngày gọi lại">
                            <span class="add-on">
                                <i class="icon-calendar"></i>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="control-group">
                @*<label>Mô tả (*)</label>*@
                <div class="controls">
                    <textarea name="Description" class="span12" placeholder="Mô tả" style="overflow: hidden; word-wrap: break-word; resize: vertical; height: 70px; margin-left: 0px; margin-right: 0px; "></textarea>
                </div>
            </div>
            <div  class="row-fluid">
                <div class="span6 control-group">
                    <div class="controls">
                        @(Html.Kendo().DropDownList()
                    .Name("HistoryCallRequestGroup")
                    .HtmlAttributes(new { style = "width:100%", @name = "GroupTypeID" })
                    .OptionLabel("Nhóm yêu cầu (*)")
                    .DataTextField("Value")
                    .DataValueField("ParamID")
                    .Filter("contains")
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("GetByTypeRead", "Utilities_Parameters", new { Type = "GroupCallRequest" });
                        });
                    })
                        )
                    </div>
                </div>
                <div class="span6 control-group">
                    <div class="controls">
                        @(Html.Kendo().DropDownList()
                    .Name("HistoryCallRequestType")
                    .HtmlAttributes(new { style = "width:100%", @name = "TypeRequestID" })
                    .OptionLabel("Loại yêu cầu (*)")
                    .DataTextField("Value")
                    .DataValueField("ParamID")
                    .Filter("contains")
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("GetByTypeRead", "Utilities_Parameters", new { Type = "RequestType" });
                        });
                    })
                        )
                    </div>
                </div>
            </div>
            <div class="row-fluid">
                
                <div class="span6 control-group">
                    <div class="controls">
                        @(Html.Kendo().DropDownList()
                    .Name("HistoryCallStatus")
                    .HtmlAttributes(new { style = "width:100%", @name = "BehavID" })
                    .OptionLabel("Thái độ (*)")
                    .DataTextField("Value")
                    .DataValueField("ParamID")
                    .Filter("contains")
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("GetByTypeRead", "Utilities_Parameters", new { Type = "HistoryCallStatus" });
                        });
                    })
                        )
                    </div>
                </div>

                <div class="span6 control-group">
                    <div class="controls">
                        @(Html.Kendo().DropDownList()
                    .Name("HistoryCallTrend")
                    .HtmlAttributes(new { style = "width:100%", @name = "TrendID" })
                    .OptionLabel("Xu hướng (*)")
                    .DataTextField("Value")
                    .DataValueField("ParamID")
                    .Filter("contains")
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("GetByTypeRead", "Utilities_Parameters", new { Type = "HistoryCallTrend" });
                        });
                    })
                        )
                    </div>
                </div>
            </div>
        </div>

        <div style="position:absolute; bottom:0;margin:0;width:95%" class="span12">
            <div class="control-group">
                @*<input type="hidden" name="RequestFrom" value="" />*@
                <input type="hidden" name="CustomerID" value="@ViewBag.detailCustomer.CustomerID" />
            </div>
            <p align="right" class="">
                <button type="button" class="btn btn-small btn-success" onclick="SaveTicket(false)">Lưu</button>
                <button type="button" class="btn btn-small btn-primary" onclick="SaveTicket(true)">Lưu & kế tiếp</button>
            </p>

        </div>
    </div>
}

<script>
    function miniMninus() {
        if ($("#current-info-popup").attr("data-active") == "1") {
            $("#current-info-popup").removeClass("active");
            $("#current-info-popup").attr("data-active", "0");
        } else {
            $("#current-info-popup").addClass("active");
            $("#current-info-popup").attr("data-active", "1");

        }
    }
    $("#current-info-popup").draggable();
    $("#listGroupRequest, #listTypeRequest").chosen();
    //$('.date-picker').datepicker().next().on(ace.click_event, function () {
    //    $(this).prev().focus();
    //});
    $('.date-picker').datetimepicker();
    function ChangeResult(value) {
        $("#CreateHistoryCallForm input[name='RequestFrom']").val(value);
    }
    function SaveTicket(ref) {
        sessionStorage.setItem('redirect', ref);
        $("#CreateHistoryCallForm").submit();
    }
    $("#CreateHistoryCallForm").validate({
        rules: {
            Title: { required: true },
            TrendID: { required: true },
            BehavID: { required: true },

        },
        messages: {
            Title: { required: "Thông tin bắt buộc" },
            TrendID: { required: "Thông tin bắt buộc" },
            BehavID: { required: "Thông tin bắt buộc" },

        },
        // Do not change code below
        errorPlacement: function (error, element) {
            //error.insertAfter(element);
        },
        submitHandler: function (form) {
            if (!$("input[name='Type']").is(":checked")) {
                alert("Chưa chọn đánh giá cuộc gọi !"); return;
            }
            if ($("#HistoryCallRequestGroup").val() == "") {
                alert("Chưa chọn nhóm yêu cầu!"); return;
            }
            if ($("#HistoryCallRequestType").val() == "") {
                alert("Chưa chọn loại yêu cầu!"); return;
            }
            if ($("#HistoryCallStatus").val() == "") {
                alert("Chưa chọn thái độ!"); return;
            }
            if ($("#HistoryCallTrend").val() == "") {
                alert("Chưa chọn xu hướng!"); return;
            }
            if ($("input[name='IDTask']").length > 0 && !$("input[name='IDTask']").is(":checked")) {
                if (confirm("Có hoàn tất công việc trước không?")) {
                    $("input[name='IDTask']").prop("checked", true);
                } else {
                    $("input[name='IDTask']").prop("checked", false);
                }
            }
            if ($("input[name='IDAppoint']").length > 0 && !$("input[name='IDAppoint']").is(":checked")) {
                if (confirm("Có hoàn tất lịch hẹn trước không?")) {
                    $("input[name='IDAppoint']").prop("checked", true);
                } else {
                    $("input[name='IDAppoint']").prop("checked", false);
                }
            }
            $form = $('#CreateHistoryCallForm');
            var url = $("#CreateHistoryCallForm")[0].action;
            var formContent = $form.serialize();
            //console.log(formContent); return;
            $.ajax({
                url: url,
                type: 'POST',
                async: true,
                data: formContent,
                success: function (data, textStatus, jqXHR) {
                    if (data.success) {
                        $.gritter.add({
                            title: 'Thành công',
                            text: 'Đã thêm vào lịch sử cuộc gọi !',
                            class_name: 'gritter-success'
                        });
                        if (sessionStorage.getItem('redirect')) {
                            location.href = r + "/CRM_CustomerSupport";
                        } else {
                            $("#CreateHistoryCallForm")[0].reset();
                            $("input[name='Status']").prop("checked", false);
                            $("#GridWorks").data("kendoGrid").dataSource.read();
                            $("#GridCallHistory").data("kendoGrid").dataSource.read();
                        }
                    }
                    else {
                        $.gritter.add({
                            title: 'Lỗi',
                            text: data.message,
                            class_name: 'gritter-error'
                        });
                    }

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    $.gritter.add({
                        text: 'Lỗi Cập nhật !',
                        class_name: 'gritter-error'
                    });
                }
            });
            return false;
        }
    });

    //function SaveTicket(status)
    //{
    //    if (status == 'New') {
    //        $("#CreateTicketForm input[name='Status']").val('New');
    //    }
    //    else {
    //        $("#CreateTicketForm input[name='Resolve']").val('Resolve');
    //    }
    //    $("#CreateTicketForm").submit();
    //}

</script>