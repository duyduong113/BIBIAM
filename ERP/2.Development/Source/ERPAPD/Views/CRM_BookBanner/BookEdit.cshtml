
@{
    ViewBag.Title = "Hiệu chỉnh book banner";
    bool AllowCreate = (ViewData["AllowCreate"] != null && (bool)ViewData["AllowCreate"]);
    bool AllowUpdate = (ViewData["AllowUpdate"] != null && (bool)ViewData["AllowUpdate"]);
    bool AllowDelete = (ViewData["AllowDelete"] != null && (bool)ViewData["AllowDelete"]);
    bool AllowExport = (ViewData["AllowExport"] != null && (bool)ViewData["AllowExport"]);
}
<script src="@Url.Content("~/Scripts/jquery.maskMoney.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/utilitycommon.js")" type="text/javascript"></script>
@Html.Partial("popup")
<form id="form-other" class="form" action="@Url.Action("SaveOtherInfo","CRM_BookBanner")">
    <input type="hidden" id="pk_book_req" value="@ViewBag.bookHeader.pk_book_req" />
    <div class="row-fluid">
        <div class="span12">
            <div class="span4">
                <div class="control-group">
                    <label>Khách hàng</label>
                    <div class="controls">
                        <input type="text" class="span12" id="txt-CustomerID" value="@ViewBag.CustomerName" readonly />
                    </div>
                </div>
                <input type="hidden" class="span12" id="customer-id" name="c_customer_code" value="@ViewBag.bookHeader.c_customer_code" />
            </div>
            <div class="span2">
                <div class="control-group">
                    <label>Nhãn hàng</label>
                    <div class="controls">
                        <input type="text" class="span12" id="brand" name="c_labels" value="@ViewBag.bookHeader.c_labels" />
                    </div>
                </div>
            </div>
            <div class="span2">
                <div class="control-group">
                    <label>Nhân viên</label>
                    <div class="controls">
                        <select id="staff" class="select" name="c_staff_id" data-placeholder="--Nhân viên--" style="width:100%">
                            <option value="">-- Chọn nhân viên--</option>
                            @foreach (var item in ViewBag.listStaff)
                            {
                                if (item.Code == @ViewBag.bookHeader.c_staff_id)
                                {
                            <option value="@item.Code" selected>@item.Name</option>
                                }
                                else
                                {
                            <option value="@item.Code">@item.Name</option>
                                }

                            }
                        </select>
                    </div>
                </div>
            </div>
            <div class="span2">
                <div class="control-group">
                    <label>Mã book</label>
                    <div class="controls">
                        <input type="text" class="input-medium" id="bookcode" name="c_code" value="@ViewBag.BookCode" readonly />

                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row-fluid">
        <label class="span2">
            <input id="chckb-display-other" name="form-field-checkbox" type="checkbox" class="ace">
            <span class="lbl"> Hiển thị thông tin khác</span>
        </label>
    </div>
    <div id="guarantee" class="row-fluid" style="display:none">
        <fieldset>
            <div class="span2">
                <div class="control-group">
                    <label>Email người bảo lãnh</label>
                    <div class="controls">
                        <input type="text" id="emai-guarantee" name="c_guarantee_email" value="@ViewBag.bookHeader.c_guarantee_email" />
                    </div>
                </div>
            </div>
            <div class="span2">
                <div class="control-group">
                    <label>Người bảo lãnh</label>
                    <div class="controls">
                        <input type="text" id="name-guarantee" name="c_guarantee_name" value="@ViewBag.bookHeader.c_guarantee_name" />
                    </div>
                </div>
            </div>
            <div class="span2">
                <div class="control-group">
                    <label>Chức vụ</label>
                    <div class="controls">
                        <select id="position-guarantee" name="c_position" class="select" style="width:100%">
                            <option value="">-- Chọn Chức vụ--</option>
                            @foreach (var item in ViewBag.listPosition)
                        {
                            if (item.Code == @ViewBag.bookHeader.c_position)
                            {
                        <option value="@item.Code" selected>@item.Name</option>
                            }
                            else
                            {
                        <option value="@item.Code">@item.Name</option>
                            }

                        }
                        </select>
                    </div>
                </div>
            </div>
            <div class="span4">
                <div class="control-group">
                    <label>Ghi chú</label>
                    <div class="controls">
                        <textarea id="note-guarantee" name="c_note" cols="3" rows="1">@ViewBag.bookHeader.c_note</textarea>
                    </div>
                </div>
            </div>
        </fieldset>
        <fieldset>
            <div class="span2">
                <div class="control-group">
                    <label>Tiền bảo lãnh</label>
                    <div class="controls">
                        <input type="text" id="money-guarantee" class="currency" name="c_guarantee_money" value="@ViewBag.bookHeader.c_guarantee_money.ToString("#,00#")"  data-thousands="," data-decimal="." data-precision="0" placeholder="0" />
                    </div>
                </div>
            </div>
            <div class="span2">
                <div class="control-group">
                    <label>Nội dung bảo lãnh</label>
                    <div class="controls">
                        <input type="text" id="content-guarantee" name="c_guarantee_note" value="@ViewBag.bookHeader.c_guarantee_note" />
                    </div>
                </div>
            </div>
            <div class="span2">
                <label>Từ ngày - Đến ngày</label>
                <div class="controls">
                    <input type="text" class="input-xs" id="range-date-guarantee" name="c_guarantee_date" value="@ViewBag.bookHeader.c_guarantee_begin_date.ToString("dd/MM/yyyy") - @ViewBag.bookHeader.c_guarantee_end_date.ToString("dd/MM/yyyy")" />
                </div>
            </div>
            <div class="span2">
                <div class="control-group">
                    <label>File đính kèm</label>
                    <div class="controls">
                        <input type="file" id="file" name="file" />
                    </div>
                </div>
            </div>
            <div class="span2">
                <div class="control-group">
                    <label></label>
                    <div class="controls">
                        <ul style="list-style:none">
                            @if (ViewBag.bookHeader.c_file_name != null)
                            {
                                <li><a href="@Url.Action("DownloadFile","CRM_BookBanner",new { fileName = @ViewBag.bookHeader.c_file_name })">@ViewBag.bookHeader.c_file_name</a></li>
                            }

                        </ul>
                       
                    </div>
                </div>
            </div>
        </fieldset>
    </div>
</form>


    <div class="row-fluid">
        <div class="span12">
            @* </ Hiện thị thông tin> *@
            @(Html.Kendo()
              .Grid<ERPAPD.Models.CRM_Book_Location>()
              .Name("Grid")
              .Columns(columns =>
              {
                  columns.Bound(p => p.PKBookLocation)
                  .HeaderTemplate("<input style='text-align:center;opacity:1;' type='checkbox' id= 'checkboxcheckAll'  onClick='checkAll(this)' />")
                 .ClientTemplate("#=rendercheckbox(PKBookLocation)#")
                  .Width(30).Filterable(false).Sortable(false);
                  columns.ForeignKey(p => p.Website, (System.Collections.IEnumerable)ViewBag.listWebsite, "Code", "Name")
                         .Title("Website")
                         .Width(120)
                         .HtmlAttributes(new { style = "background-color:\\#dff0d8;color:\\#468847" })
                         .EditorTemplateName("GridNullableForeignKey");

                  columns.ForeignKey(p => p.Category, (System.Collections.IEnumerable)ViewBag.listCategory, "Code", "Name")
                         .Title("Chuyên mục")
                         .Width(120)
                         .HtmlAttributes(new { style = "background-color:\\#dff0d8;color:\\#468847" })
                         .EditorTemplateName("GridNullableForeignKey");

                  columns.ForeignKey(p => p.Location, (System.Collections.IEnumerable)ViewBag.listLocation, "Code", "Name")
                         .Title("Vị trí")
                         .Width(120)
                         .HtmlAttributes(new { style = "background-color:\\#dff0d8;color:\\#468847" })
                         .EditorTemplateName("GridNullableForeignKey");

                  columns.ForeignKey(p => p.Nature, (System.Collections.IEnumerable)ViewBag.listNature, "Code", "Name")
                         .Title("Chia sẻ")
                         .Width(120)
                         .HtmlAttributes(new { style = "background-color:\\#dff0d8;color:\\#468847" })
                         .EditorTemplateName("GridNullableForeignKey");

                  columns.Bound(p => p.NgayLen)
                         .Title("Ngày lên")
                         .Width(100).Format("{0:" + Resources.Multi.DateFormat + "}")
                         .ClientTemplate("#if(kendo.toString(NgayLen,'dd/MM/yyyy') != '01/01/1900'){#" + "#= kendo.toString(NgayLen,'" + Resources.Multi.DateFormat + "') #" + "#}#")
                         .HtmlAttributes(new { style = "background-color:\\#dff0d8;color:\\#468847" })
                         .EditorTemplateName("Date");

                  columns.Bound(p => p.NgayXuong)
                         .Title("Ngày xuống")
                         .Width(100).Format("{0:" + Resources.Multi.DateFormat + "}")
                         .ClientTemplate("#if(kendo.toString(NgayXuong,'dd/MM/yyyy') != '01/01/1900'){#" + "#= kendo.toString(NgayXuong,'" + Resources.Multi.DateFormat + "') #" + "#}#")
                         .HtmlAttributes(new { style = "background-color:\\#dff0d8;color:\\#468847" })
                         .EditorTemplateName("Date");

                  columns.Bound(p => p.SoNgay)
                         .Title("Số ngày")
                         .Width(120)
                         .HtmlAttributes(new { style = "background-color:\\#dff0d8;color:\\#468847", columnname = "SoNgay" })
                         .EditorTemplateName("Integer");

                  columns.Bound(p => p.SoTuan)
                         .Title("Số tuần")
                         .Width(120)
                         .HtmlAttributes(new { style = "background-color:\\#dff0d8;color:\\#468847", columnname = "SoTuan" })
                         .EditorTemplateName("Integer");

                  columns.Bound(p => p.Label)
                         .Title("Nhãn hàng")
                         .Width(120)
                         .HtmlAttributes(new { style = "background-color:\\#dff0d8;color:\\#468847" });

                  columns.Bound(p => p.Km2)
                         .Title("Hỗ trợ")
                         .Width(120)
                         .HtmlAttributes(new { style = "background-color:\\#dff0d8;color:\\#468847" });
              })
              .ToolBar(toolbar =>
              {
              toolbar.Template(@<text>
            <div class="pull-left">
                @if (AllowCreate)
                {
                    <a class="btn btn-small btn-success" href="javascript:void(0)" id="btnGridAdd">
                        @*<i class="icon-plus"></i>*@ @Resources.Multi.Add
                    </a>
                    <button type="button" id="btnSaveBook" class="btn btn-primary btn-small">Lưu thông tin</button>
                    <a class="btn btn-small btn-danger" href="javascript:void(0)" onclick="showConfirmPopup2('XOA')">
                        @*<i class="icon-plus"></i>*@ Xóa
                    </a>
                    <a class="btn btn-default btn-small" href="@Url.Action("Index", "CRM_BookBanner") ">Trở về</a>
                }
            </div>
            </text>);
              })

              .Navigatable()
              .AutoBind(true)
              .Editable(editable => editable.Mode(GridEditMode.InCell))
              .Events(events => { events.Edit("onEdit"); events.Change("onChange"); events.Save("onSave"); })
              .Resizable(resize => resize.Columns(true))
              .DataSource(dataSource => dataSource.Ajax()
                                        .Batch(true)
                                        .PageSize(50)
                                        .Events(events =>
                                        {
                                            events.Error("error_handler");
                                            events.RequestEnd("onRequestEnd");
                                        })
                                        .Model(model =>
                                        {
                                            model.Id(p => p.PKBookLocation);
                                            model.Field(p => p.PKBookLocation).Editable(false);
                                        })
                                        .Read(read => read.Action("ReadDetail", "CRM_BookBanner").Data("getHeaderInfo"))
                                        .Create(create => create.Action("Save", "CRM_BookBanner").Data("getHeaderInfo"))
                                        .Update(create => create.Action("Save", "CRM_BookBanner").Data("getHeaderInfo"))
                                        )
            )
        </div>
    </div>



    <script>
        $(document).ready(function () {
            $('.currency').maskMoney();
            $('.select').chosen();
            $('#range-date-guarantee').daterangepicker({
                ranges: {
                    'Hôm nay': [moment(), moment()],
                    'Hôm qua': [moment().subtract('days', 1), moment().subtract('days', 1)],
                    '7 ngày trước': [moment().subtract('days', 6), moment()],
                    '30 ngày trước': [moment().subtract('days', 29), moment()],
                    'Tháng này': [moment().startOf('month'), moment().endOf('month')],
                    'Tháng trươc': [moment().subtract('month', 1).startOf('month'), moment().subtract('month', 1).endOf('month')]
                },
                format: 'DD/MM/YYYY',
                locale: {
                    applyLabel: 'Xác nhận',
                    cancelLabel: 'Đóng lại',
                    fromLabel: 'Từ',
                    toLabel: 'Đến',
                    customRangeLabel: 'Tuỳ chọn',
                    daysOfWeek: ['T7', 'CN', 'T2', 'T3', 'T4', 'T5', 'T6'],
                    monthNames: ['Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6', 'Tháng 7', 'Tháng 8', 'Tháng 9', 'Tháng 10', 'Tháng 11', 'Tháng 12'],
                    firstDay: 1,
                }
            });
            $('#file').ace_file_input({
                no_file: 'No File ...',
                btn_choose: 'Choose',
                btn_change: 'Change',
                droppable: false,
                onchange: null,
                thumbnail: false //| true | large
                //whitelist:'gif|png|jpg|jpeg'
                //blacklist:'exe|php'
                //onchange:''
                //
            });

        })
        function rendercheckbox(id) {
            debugger
            if (id == 0) {
                return "<span></span>";
            }
            else {
                return "<input style='text-align:center' class='checkrowid' type='checkbox' id='" + id + "'  />";
            }
        }
        $('txt-CustomerID').val("@ViewBag.CustomerName");
        $('select').chosen();
        function checkAll(e) {
            var x = $(e).prop('checked');
            $('#Grid').find(".checkrowid").each(function () {
                $(this).prop('checked', x);
            });
        }
        function onAdditionalData() {
            return {
                text: $("#txt-CustomerID").val()
            };
        }
        function onSelectCustomer(e) {
            var dataItem = this.dataItem(e.item.index());
            $("#customer-id").val(dataItem.CustomerCode);
        }

        function error_handler(e) {
            if (e.errors) {
                var message = "Lỗi :\n";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                        //$("#Grid").data("kendoGrid").dataSource.read();
                    }
                });
                $.gritter.add({
                    // (string | mandatory) the heading of the notification
                    title: '',
                    // (string | mandatory) the text inside the notification
                    text: message,
                    class_name: 'gritter-error'
                });
            }
        }
        function onRequestEnd(e) {
            if (e.type == "update" && !e.response.Errors) {
                $.gritter.add({
                    // (string | mandatory) the heading of the notification
                    title: '',
                    // (string | mandatory) the text inside the notification
                    text: 'Cập nhật dữ liệu thành công',
                    class_name: 'gritter-success'
                });
                $("#Grid").data("kendoGrid").dataSource.read();
            }
            if (e.type == "create" && !e.response.Errors) {
                $.gritter.add({
                    // (string | mandatory) the heading of the notification
                    title: '',
                    // (string | mandatory) the text inside the notification
                    text: 'Thêm mới dữ liệu thành công',
                    class_name: 'gritter-success'
                });
                //window.history.back();
                $("#Grid").data("kendoGrid").dataSource.read();
            }
        }

        $('#chckb-display-other').bind('click', function () {
            if ($(this).is(':checked')) {
                $('#guarantee').css('display', 'inline');
                $('.select').chosen();
                $('#position_guarantee_chosen').css('width', '100%');
            }
            else {
                $('#guarantee').css('display', 'none');
            }
        })

        function onEdit(e) {
            //  console.log(e.sender)
        }
        function onChange(e) {
            var selectedRows = this.select();
            console.log(selectedRows);
        }

        function onSave(e) {
            if (e.container.attr('columnname') == 'SoNgay') {
                var numWeek = e.values.SoNgay / 7;
                if (numWeek % 2 == 0) {
                    e.model.SoTuan = numWeek;
                }
                else {
                    e.model.SoTuan = 0;
                }

                date = new Date();
                var dateUp = new Date(date.getFullYear(), date.getMonth(), date.getDate() + e.values.SoNgay-1);
                e.model.NgayXuong = dateUp;
                $(e.container).next().html(e.model.SoTuan);
                $(e.container).prev().html(kendo.toString(kendo.parseDate(e.model.NgayXuong), 'dd/MM/yyyy'));
            }

            if (e.container.attr('columnname') == 'SoTuan') {
                var numDay = e.values.SoTuan * 7;
                e.model.SoNgay = numDay;
                $(e.container).prev().html(e.model.SoNgay);

                date = new Date();
                dateUp = new Date(date.getFullYear(), date.getMonth(), date.getDate() + numDay);
                e.model.NgayXuong = dateUp;
                var dateUp = new Date(date.getFullYear(), date.getMonth(), date.getDate() + e.values.SoNgay);
                $(e.container).prev().prev().html(kendo.toString(kendo.parseDate(e.model.NgayXuong), 'dd/MM/yyyy'));
            }
        }


        function getHeaderInfo() {
            return {
                pkBookReq: $('#pk_book_req').val(),
            }
        }

        $('#btnGridAdd').click(function () {
            if ($('#customer-id').val() == "" || $('#staff').val() == "" || $('#bookcode').val() == "") {
                $.gritter.add({
                    // (string | mandatory) the heading of the notification
                    title: 'Lỗi',
                    // (string | mandatory) the text inside the notification
                    text: 'Vui lòng nhập Khách hàng',
                    class_name: 'gritter-error'
                });
            }
            else {
                $("#Grid").data("kendoGrid").addRow();
            }

        })
        $('#btnSaveBook').bind('click', function () {
            $("form#form-other").submit();
            if ($('#Grid').data('kendoGrid').dataSource.hasChanges() == true) {
                $('#Grid').data('kendoGrid').saveChanges();
            }
        })
        $("form#form-other").validate({
            errorPlacement: function (error, element) {
                //if (element.is(":hidden")) {
                //    element.next().parent().append(error);
                //}
                //else {
                //    error.insertAfter(element);
                //}
            },
            beforeSend: function () {
                $.blockUI({ message: '<i class="icon-spinner icon-spin blue bigger-125" style="font-size:30px;"></i>', theme: false });
            },
            submitHandler: function (form) {
                var _url = $('form#form-other')[0].action;
                var fd = new FormData();
                if ($('input[type="file"]')) {
                    var file_data = $('#file')[0].files[0]; // for multiple files
                    fd.append("file", file_data);
                }
                var other_data = $('form#form-other').serializeArray();
                $.each(other_data, function (key, input) {
                    
                    if (input.name == "c_guarantee_money") {
                        fd.append(input.name, currencyToNumber(input.value));
                    }
                    else {
                        fd.append(input.name, input.value);
                    }

                });
                console.log(fd);
                $.ajax({
                    url: _url,
                    type: 'POST',
                    data: fd,
                    mimeType: "multipart/form-data",
                    contentType: false,
                    cache: false,
                    processData: false,
                    success: function (data, textStatus, jqXHR) {
                        $.gritter.add({
                            title: 'Thành công',
                            text: 'Cập nhật dữ liệu thành công',
                            class_name: 'gritter-success'
                        });
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        $.gritter.add({
                            text: 'Lỗi Cập nhật !',
                            class_name: 'gritter-error'
                        });
                        return false;
                    }
                });


            }
        });

        function showConfirmPopup2(e) {
            var listrowid = "";
            $('#Grid').find(".checkrowid").each(function () {
                if ($(this).prop('checked') == true) {
                    listrowid += $(this).attr("id") + '@@@@';
                }
            });
            if (listrowid != "" && listrowid != null) {
                if (e == 'XOA') {
                    $('#popup-delete2').modal('show');
                }
            }
            else {
                $.gritter.add({
                    title: 'Lỗi',
                    text: 'Vui lòng chọn dữ liệu',
                    class_name: 'gritter-error'
                });
            }

        }

        function onDelete() {
            var listrowid = "";
            $('#Grid').find(".checkrowid").each(function () {
                if ($(this).prop('checked') == true) {
                    listrowid += $(this).attr("id") + '@@@@';
                }
            });

            if (listrowid != "" && listrowid != null) {
                $.post(r + "/CRM_BookBanner/ChangeStatus", { listdata: listrowid, action: 'XOA' }, function (data) {
                    if (data.success) {
                        $.gritter.add({
                            text: 'Cập nhật dữ liệu thành công',
                            class_name: 'gritter-success'
                        });
                        $("#Grid").data("kendoGrid").dataSource.read();
                        onCloseForm();
                    }
                    else {
                        $.gritter.add({
                            title: 'Lỗi',
                            text: data.alert,
                            class_name: 'gritter-error'
                        });

                    }
                });
            }
            else {
                $.gritter.add({
                    title: 'Lỗi',
                    text: '@Resources.Multi.Please @Resources.Multi.Select.ToLower() data.',
                    class_name: 'gritter-error'
                });
                return false;
            }
        }
    </script>
