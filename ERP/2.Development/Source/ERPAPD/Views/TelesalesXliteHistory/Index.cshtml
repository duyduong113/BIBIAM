@{
    ViewBag.Title = "ERPAPD | SMS MO";
}
<style>
    .modal {
        width: 300px;
    }
</style>
<div class="row-fluid">
    <div class="span12">
        <div class="widget-box">
            <div class="widget-header widget-header-blue widget-header-flat">
                <p style="font-size:14px">@Resources.Multi.Filter</p>

                <span class="widget-toolbar">
                    <a href="#" data-action="collapse">
                        <i class="icon-chevron-up"></i>
                    </a>
                </span>
            </div>

            <div class="widget-body">
                <div class="widget-main">
                    <div class="row-fluid">
                        <div class="span12">
                            <input class="span1" type="text" id="Destination" placeholder="Destination" style="width:200px" />
                            <input class="span1" type="text" id="Source" placeholder="Source" style="width:200px" />
                            <input type="text" name="date-range-picker span2" id="callDate" placeholder="Call date" style="width:120px;" />
                            <button type="button" id="btnSearch" class="btn btn-primary btn-small" onclick="filter()" style="float:none">@Resources.Multi.Filter</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row-fluid">
    <div class="span12">

        @(Html.Kendo()
    .Grid<ERPAPD.Models.DC_Telesales_Xlite>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.calldate).Title("CallDate").Format("{0:" + Resources.Multi.DateFormat+ " HH:mm:ss}").Width(125).Title("Thời gian gọi");
        columns.Bound(p => p.src).Width(60).Title("Agent");
        columns.Bound(p => p.dst).Title("SĐT Khách hàng").Width(80);
        columns.Bound(p => p.duration).Width(100).Format("{0:n0}").Title("Thời gian");
        //columns.Bound(p => p.billsec).Title("BillSec").Format("{0:n0}").Width(100);
        columns.Bound(p => p.disposition).Title("Hành động").Width(100);
        columns.Bound(p => p.recordingfile).Title("Tên file").Width(250);
        columns.Bound(p => p.call_route).Title(Resources.Multi.Status).Width(90);
        columns.Bound(p => p.CreatedBy).Width(100).Title(Resources.Multi.CreatedBy);
        columns.Bound(p => p.CreatedAt).Width(120).Format("{0:" + Resources.Multi.DateFormat+ " HH:mm:ss}").Title(Resources.Multi.UpdatedAt);
        columns.Bound(p => p.Id).Title("Nghe lại").Width(120).ClientTemplate("#if(file !=''){#" + "<a href='http://118.69.182.250:2231/hoasao/recording/#=kendo.toString(calldate,'yyyy/MM/dd')#/#=recordingfile#' target='_blank' style='text-decoration:none;'><i class='icon-play'>Nghe lại</i></a>" + "#}#");
    })
    .ToolBar(tools =>
    {
        tools.Excel().Text(Resources.Multi.Export);
    })
    .Events(events => { events.DataBound("dataBound"); })
    .Pageable()
    .Sortable()
    .Scrollable()
    .Navigatable()
    .Filterable()
    .Excel(excel => excel
    .FileName("TelesalesXliteHistory.xlsx")
    .Filterable(true)
    .ProxyURL(Url.Action("Excel_Export", "TelesalesXliteHistory")))
    .Reorderable(r => r.Columns(true))
    .Resizable(r => r.Columns(true))
    .ColumnMenu()
    .DataSource(dataSource => dataSource
    .Ajax()
    .Batch(true)
    .Sort(s => s.Add(a => a.calldate).Descending())
    .PageSize(20)
    .Read(read => read.Action("Read", "TelesalesXliteHistory"))
    )
        )
    </div>
</div>
<script>
    $('#callDate').daterangepicker({
        ranges: {
            'Today': [moment(), moment()],
            'Yesterday': [moment().subtract('days', 1), moment().subtract('days', 1)],
            'Last 7 Days': [moment().subtract('days', 6), moment()],
            'Last 30 Days': [moment().subtract('days', 29), moment()],
            'This Month': [moment().startOf('month'), moment().endOf('month')],
            'Last Month': [moment().subtract('month', 1).startOf('month'), moment().subtract('month', 1).endOf('month')]
        }, format: 'YYYY/MM/DD'
    }).prev().on(ace.click_event, function () {
        $(this).next().focus();
    });
    $("#filterText").keypress(function (e) {
        if (e.keyCode == 13) {
            filter();
        }
    });

    function resizeGrid() {
        var offsetbottom = parseInt($(window).height()) - parseInt($('#grid').offset().top);
        var gridElement = $("#grid"),
        dataArea = gridElement.find(".k-grid-content"),
        otherElements = gridElement.children().not(".k-grid-content"),
        otherElementsHeight = 0;
        otherElements.each(function () {
            otherElementsHeight += $(this).outerHeight();
        });
        dataArea.height(offsetbottom - otherElementsHeight - 50);
    }
    $(window).resize(function () {
        resizeGrid();
    });
    function dataBound() {
        resizeGrid();
    }

    function filter() {

        grid = $("#grid").data("kendoGrid");
        var Destination = $('#Destination').val();
        var Source = $('#Source').val();
        var filter = { logic: "and", filters: [] };
        var callDate = $('#callDate').val();
        if (callDate) {
            var startdate = callDate.split('-')[0].trim();
            var enddate = callDate.split('-')[1].trim();
            var todate = new Date(enddate);
            todate.setDate(todate.getDate() + 1);
            filter.filters.push({ field: "CallDate", operator: "gte", value: startdate });
            filter.filters.push({ field: "CallDate", operator: "lte", value: todate });
        }
        if (Destination) {
            filter.filters.push({ field: "Destination", operator: "contains", value: Destination });
        }
        if (Source) {
            filter.filters.push({ field: "Source", operator: "contains", value: Source });
        }
        grid.dataSource.filter(filter);
    }
</script>
