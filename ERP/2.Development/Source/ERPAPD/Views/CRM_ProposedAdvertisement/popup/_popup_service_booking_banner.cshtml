<div id="popup-adv-list-booking-banner" class="modal hide">
    <div class="k-window-titlebar k-header">
        <span class="k-window-title" id="lbltitle">Danh sách book</span>
        <button type="button" class="btclose" data-dismiss="modal">&times;</button>
    </div>
    <div class="modal-body overflow-visible">
        <div class="row-fluid" style="padding-top: 2px;">
            <div class="span4">
                <input type="text" class="input-xs" value="" @*readonly="readonly"*@ onchange="filterBookBanner()" id="banner-bookcode" placeholder="Mã book" />
            </div>
            <div class="span2">
                <button type="button" id="btnSearch" class="btn btn-primary btn-small" style="float:none;" onclick="filterBookBanner()">Tìm kiếm</button>
            </div>
        </div>
        <div class="row-fluid">
            <div class="span12">
                @* </ Hiện thị thông tin> *@
                @(Html.Kendo()
              .Grid<ERPAPD.Models.BookLocationViewModel>()
              .Name("GridBanner")
              .Columns(columns =>
              {
                  columns.Bound(p => p.IDBookLocation).HeaderTemplate("<input style='text-align:center;opacity:1;' type='checkbox' id= 'checkboxcheckAll'  onClick='checkAllBookBanner(this)' />").ClientTemplate("<input style='text-align:center' class='checkrowid' type='checkbox' id='#=id#' IDBookLocation='#=IDBookLocation#'  />").Width(30).Filterable(false).Sortable(false);
                  columns.Bound(p => p.IDBookLocation).Title("ID Location").Width(70);
                  columns.Bound(p => p.BookCode).Title("Mã book").Width(70);
                  columns.Bound(p => p.InputDate)
                         .Title("Ngày book")
                         .Width(80).Format("{0:" + Resources.Multi.DateFormat + "}")
                         .ClientTemplate("#if(kendo.toString(InputDate,'dd/MM/yyyy') != '01/01/1900'){#" + "#= kendo.toString(InputDate,'" + Resources.Multi.DateFormat + "') #" + "#}#")
                         .EditorTemplateName("Date");
                  columns.Bound(p => p.CustomerName).Title("Khách hàng").Width(200);
                  columns.Bound(p => p.c_labels).Title("Nhãn hàng").Width(100);
                  columns.ForeignKey(p => p.Website, (System.Collections.IEnumerable)ViewBag.listWebsite2, "Code", "Name")
                         .Title("Website")
                         .Width(100)
                         .EditorTemplateName("GridNullableForeignKey");
                  columns.ForeignKey(p => p.Category, (System.Collections.IEnumerable)ViewBag.listCategory2, "Code", "Name")
                         .Title("Chuyên mục")
                         .Width(120)
                         .EditorTemplateName("GridNullableForeignKey");
                  columns.ForeignKey(p => p.Location, (System.Collections.IEnumerable)ViewBag.listLocation2, "Code", "Name")
                         .Title("Vị trí")
                         .Width(150)
                         .EditorTemplateName("GridNullableForeignKey");
                  columns.ForeignKey(p => p.Nature, (System.Collections.IEnumerable)ViewBag.listNature2, "Code", "Name")
                         .Title("Tính chất")
                         .Width(80)
                         .EditorTemplateName("GridNullableForeignKey");
                  columns.Bound(p => p.NgayLen)
                         .Title("Ngày lên")
                         .Width(100).Format("{0:" + Resources.Multi.DateFormat + "}")
                         .ClientTemplate("#if(kendo.toString(NgayLen,'dd/MM/yyyy') != '01/01/1900'){#" + "#= kendo.toString(NgayLen,'" + Resources.Multi.DateFormat + "') #" + "#}#")
                         .EditorTemplateName("Date");
                  columns.Bound(p => p.NgayXuong)
                         .Title("Ngày xuống")
                         .Width(100).Format("{0:" + Resources.Multi.DateFormat + "}")
                         .ClientTemplate("#if(kendo.toString(NgayXuong,'dd/MM/yyyy') != '01/01/1900'){#" + "#= kendo.toString(NgayXuong,'" + Resources.Multi.DateFormat + "') #" + "#}#")
                         .EditorTemplateName("Date");
                  //columns.ForeignKey(p => p.c_staff_id, (System.Collections.IEnumerable)ViewBag.listStaff, "Code", "Name")
                  //       .Title("Nhân viên")
                  //       .Width(120)
                  //       .EditorTemplateName("GridNullableForeignKey");

                  //columns.Bound(p => p.AccountStatus)
                  //       .Title("Trạng thái")
                  //       .Width(70)
                  //       .ClientTemplate("#if(AccountStatus == 'KT_CHUA_XAC_NHAN'){#<b><font color='FFD700,' size='1'>Thường</font><br>#}#"
                  //                      + "#if(AccountStatus == 'HAI_CHIEU'){# <b><font color='0x4169E1' size='1'>Hai chiều</font></b>#}#"
                  //       );
                  columns.Bound(p => p.IDBookLocation).Hidden();
                  columns.Bound(p => p.c_customer_code).Hidden();
              })
               .Scrollable(scrollable => scrollable.Virtual(true))
               .Pageable(pager => pager
               .PageSizes(new[] { 20, 50, 100, 200 }))
               .Sortable()
               .Navigatable()
               .Resizable(resize => resize.Columns(true))
               .AutoBind(false)
               .Events(events => { events.DataBound("dataBound"); })
               .DataSource(dataSource => dataSource.Ajax()
                .Batch(true)
                .Sort(x => x.Add("id").Descending())
                .PageSize(20)
                .Model(model =>
                {
                    model.Id(p => p.id);
                })
                .Read(read => read.Action("ReadBookBannerData_Read", "CRM_ProposedAdvertisement").Data("getInfoBook")))


                )
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <a class="btn btn-info btn-small" onclick="SelectBanner()"> Chọn</a>
        <a class="btn btn-default btn-small" data-dismiss="modal" onclick="ClosePPBanner()">Bỏ qua</a>
    </div>
</div>
<script>  
   
    function getInfoBook() {
        return {
            bookcode: $('#banner-bookcode').val(),
            contractCode: $('#txt-AutoContract').val()
        }
    }
    function filterBookBanner() {
        var grid = $('#GridBanner').data('kendoGrid');
        var filter = { logic: "and", filters: [] };
        var fillterBookCode = { logic: "or", filters: [] };
        var bookcode = $("#banner-bookcode").val();
        if (bookcode) {
            fillterBookCode.filters.push({ field: "c_code", operator: "eq", value: bookcode });
            filter.filters.push(fillterBookCode);
        }
        grid.dataSource.filter(filter);
    }
    function dataBound() {
        var grid = $("#GridBanner").data("kendoGrid").dataSource;
        var masterRowsCount = grid.total();
        //if (masterRowsCount == 0) {
        //   alertMessage('Chưa booking cho vị trí', 'Vui lòng booking trước khi đăng quảng cáo.', false);
        //}    
    }
    function ClosePPBanner() {
        $("#GridBanner").data("kendoGrid").dataSource.data([]);
       // $("#GridBanner").data("kendoGrid").dataSource.read();
        $('#popup-adv-list-booking-banner').modal('hide');
    }
    function checkAllBookBanner(e) {
        var x = $(e).prop('checked');
        $('#GridBanner').find(".checkrowid").each(function () {
            $(this).prop('checked', x);
        });
    }

    function SelectBanner() {
        var listBook = [];
        //debugger;
        $('#GridBanner').find(".checkrowid").each(function (index) {
            if ($(this).prop('checked') == true) {
                listBook.push($(this).attr("IDBookLocation"));
            }
        });
        plusBannerBindData(listBook);

    }

    function plusBannerBindData(listBook) {
        var contractCode = $('#txt-AutoContract').val();
        $.post(r + "/Ajax/GetInputSuggest_DNQC_Banner_BindData/", { incree: parseInt(banner), sttBanner: parseInt(sttBanner), contractCode: contractCode, listBook: listBook }, function (data) {
            $("#banner-table").find("table").find("tbody").append(data);
            banner = banner + 4;
            sttBanner = sttBanner + 1;
            $('.date-picker').datepicker();
            $('.currency').maskMoney();
        })
        ClosePPBanner();
    }


</script>

