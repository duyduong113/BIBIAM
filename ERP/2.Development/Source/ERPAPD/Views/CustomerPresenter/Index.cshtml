@model IEnumerable<CRM24H.Models.CRM_Customer_Presenter>
@{
    ViewBag.Title = "Danh sách người giới thiệu";
    bool AllowCreate = (ViewData["AllowCreate"] != null && (bool)ViewData["AllowCreate"]);
    bool AllowUpdate = (ViewData["AllowUpdate"] != null && (bool)ViewData["AllowUpdate"]);
    bool AllowDelete = (ViewData["AllowDelete"] != null && (bool)ViewData["AllowDelete"]);
    bool AllowExport = (ViewData["AllowExport"] != null && (bool)ViewData["AllowExport"]);

    var listDay = new List<int>();
    for (int i = 1; i <= 31; i++)
    {
        listDay.Add(i);
    }
    var listMonth = new List<int>();
    for (int i = 1; i <= 12; i++)
    {
        listMonth.Add(i);
    }
    var listYear = new List<int>();
    for (int i = DateTime.Now.Year; i > DateTime.Now.Year - 200; i--)
    {
        listYear.Add(i);
    }
}
<style>
    label.error {
        border: none !important;
        background-color: #fff !important;
        color: #ff0000;
    }

    #CustomerForm .control-label {
        text-align: left;
    }

    .actionGird {
        margin-left: 2px;
    }

    div.k-window-content {
        overflow: inherit;
    }
</style>
@Html.Partial("_modal_form")
@Html.Partial("_presenter_form")
<div class="row-fluid">
    <div class="span9">
        <input id="txtInfoFilter" class="text-search span9" type="text" placeholder="Họ tên, công ty, chức vụ, điện thoại, email">
        <select id="listCustomerFilter" class="span3" data-placeholder="Chọn khách hàng">
            <option value="">Chọn</option>
            @foreach (var item in ViewBag.listCustomer)
            {
                <option value="@item.CustomerID">@item.CustomerName</option>
            }
        </select>
    </div>
    <div class="span3">
        <p>
            <button type="button" class="btn btn-small btn-primary" onclick="filter()">@*<i class="icon-search"></i>*@Tìm kiếm</button>
        </p>
    </div>
</div>
<div class="row-fluid mn-list">
    @(Html.Kendo().Grid(Model)
                    .Name("Grid")
                    .Columns(columns =>
                    {
                        columns.Bound(p => p.Id)
                                .Width(25).Filterable(false).Sortable(false).Groupable(false)
                                .HeaderTemplate("<input style='text-align:center;opacity:1;' hidden type='checkbox' id= 'checkboxcheckAll'  onclick='checkAll(this);' />")
                                .ClientTemplate("<input style='text-align:center' class='checkrowid' type='checkbox' data-id='#=Id#' id='#=Id#' />");
                        columns.Bound(p => p.Id)
                               .Title("#")
                               .Width(50)
                               .ClientTemplate("<div>" +
                                                     "<span> " + "<a class='btn btn-minier btn-success actionGird' style='width:30px'   href='javascript:void(0);' ><i class='fa fa-pencil'></i> Gọi</a>" + "</br>" +
                                                     "<div>" +
                                                   "</div>" +
                                               "</div>");
                        columns.Bound(p => p.Id)
                                .Title("Người giới thiệu")
                                .Width(150)
                                .ClientTemplate(@"<div>" +
                                                    "<div>" +
                                                        "<span> <a href='javascript:void(0)' onclick='showFormPresenter(1,this)'>#=FirstName# #=MiddleName# #=LastName# </a> - #=PersonalName# </span>  </br>" +
                                                    "</div>" +
                                                "</div>");
                        columns.Bound(p => p.Id)
                                .Title("Công ty")
                                .Width(150)
                                .ClientTemplate(@"<div>" +
                                                    "<div>" +
                                                     "<span> #=Company#</span> </br>" +
                                                    "</div>" +
                                                "</div>");
                        columns.Bound(p => p.Id)
                               .Title("Chức vụ")
                               .Width(100)
                               .ClientTemplate(@"<div>" +
                                                   "<div>" +
                                                    "<span> #=Position# </span> </br>" +
                                                   "</div>" +
                                               "</div>");
                        columns.Bound(p => p.Id)
                                .Title("Email")
                                .Width(120)
                                .ClientTemplate("<div>" +
                                                      "<span> <a href='mailto:#=Email#' target='_top'>#=Email#</a></span></br>" +
                                                      "<div>" +
                                                    "</div>" +
                                                "</div>");

                        columns.Bound(p => p.Id)
                                .Title("Khách hàng")
                                .Width(300)
                                .ClientTemplate("<div>" +
                                                     "<span> #=listCustomer#</br>" +
                                                "</div>");

                        columns.Bound(p => p.Phone)
                               .Title("Số điện thoại")
                               .Width(150)
                               .ClientTemplate("<div>" +
                                                    "<span class ='mobile-format'> #=Phone#</br>" +
                                               "</div>");
                        columns.Bound(p => p.Id)
                                .Title("Ghi chú")
                                .Width(200)
                                .ClientTemplate("<div>" +
                                                     "<span> #=Note#</br>" +
                                                "</div>");
                    })
                    .ToolBar(toolbar =>
                    {
                    toolbar.Template(@<text>
                            <div class="pull-left">
                                @if (AllowCreate)
                                {
                                    <a class="btn btn-success btn-small" id="btnGridAdd" onclick="showFormPresenter(0, this)">
                                        @*<i class="icon-plus"></i>*@ @Resources.Multi.Add
                                    </a>
                                }
                                @if (AllowDelete)
                                {
                                    <a class="btn btn-danger btn-small" href="javascript:void(0)" id="btnGridDelete" onclick="showConfirmPopup(1)">
                                        @*<i class="icon-plus"></i>*@ @Resources.Multi.Delete
                                    </a>
                                }
                            </div>
                        </text>);
                    })                              .Events(events => { events.DataBound("dataBound"); })
                                                    .Pageable(pager => pager.PageSizes(new[] { 20, 50, 100, 200, 300 }))
                                                    .Navigatable()
                                                    .Scrollable(scrollable => scrollable.Virtual(false))
                                                    .Resizable(r => r.Columns(true))
                                                    .DataSource(dataSource => dataSource
                                                    .Ajax()
                                                    .Batch(true)
                                                    .PageSize(20)
                                                    .Model(model =>
                                                    {
                                                        model.Id(p => p.Id);
                                                    })
                                                    .Read(read => read.Action("Read", "CustomerPresenter"))
                                                    ))


</div>
@*<div>
        @(Html.Kendo()
          .Window()
          .Name("actionForm")
          .Title("Thêm mới người giới thiệu")
          .Draggable()
          .Resizable()
          .Visible(false)
          .Width(800)
          .Actions(actions => actions.Close())
        )
    </div>*@
<div id="popup-confirm" class="row" style="margin:0 auto;display:none">
    <div class="widget-box">
        <p> <span id="txtcontent"></span> </p>
    </div>
    <div class="form-footer-custom">
        <div class="pull-right" style="padding-right:15px">
            <button type="button" class="btn btn-info btn-small " onclick="onChangeStatus()">
                @*<i class="icon-ok"></i>*@ Đồng ý
            </button>
            <button type="button" class="btn btn-default btn-small" onclick="onCloseForm()">
                @*<i class="icon-undo"></i>*@ Đóng lại
            </button>
        </div>
    </div>
</div>
<div id="popup" class="row" style="margin:0 auto;display:none">
    <form data-action="" action="@Url.Content("~/CustomerPresenter/CustomerPresenter_Create")" method="post" id="formPopup" class="form-inline">
        <div class="row-fluid">
            <fieldset>
                <div class="form-horizontal">
                    <div class="control-group">
                        <label class="control-label" for="form-field-1">Họ tên</label>
                        <div class="controls">
                            <input type="hidden" name="Id" id="Id" />
                            <input id="FirstName" class="span2" name="FirstName" type="text" placeholder="Họ" />
                            <input id="MiddleName" name="MiddleName" class="span3" type="text" placeholder="Tên đệm" />
                            <input id="LastName" name="LastName" class="span3" type="text" placeholder="Tên" />
                        </div>
                    </div>

                    <div class="control-group">
                        <label class="control-label">Nhân xưng</label>
                        <div class="controls">
                            @Html.DropDownList("Personal", new SelectList(ViewBag.listGender, "ParamID", "Value", 1), "-Chọn-", new { @style = "width: 80px;height: 20px;" })
                            @*<input id="personal" name="personal"  class="span6" type="text" placeholder="Nhân xưng" />*@
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label">Ngày sinh</label>
                        <div class="controls">
                            <select id="DayOfBirth" style="width: 80px; height: 20px;" name="DayOfBirth" data-placeholder="Chọn ngày">
                                <option disabled selected> Ngày</option>
                                @foreach (var item in listDay)
                                {
                                    <option value="@item">@item</option>
                                }
                            </select>
                            <select id="MonthOfBirth" style="width: 77px; height: 20px;" name="MonthOfBirth">
                                <option disabled selected> Tháng</option>
                                @foreach (var item in listMonth)
                                {
                                    <option value="@item">@item</option>
                                }
                            </select>

                            <select id="YearOfBirth" name="YearOfBirth" style="width:90px; height: 20px;" data-placeholder="Chọn năm">
                                <option disabled selected> Năm</option>
                                @foreach (var item in listYear)
                                {
                                    <option value="@item">@item</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label">Điện thoại</label>
                        <div class="controls">
                            <input name="Phone" id="Phone" class="span8" type="text" placeholder="Nhập số điện thoại" />
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label">Email</label>
                        <div class="controls">
                            <input class="span8" id="Email" name="Email" type="text" placeholder="Nhập Email" />
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label">Chức vụ</label>
                        <div class="controls">
                            <input class="span8" type="text" id="Position" name="Position" placeholder="Nhập chức vụ" />
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label">Công ty</label>
                        <div class="controls">
                            <input class="span8" type="text" id="Company" name="Company" placeholder="Nhập công ty" />
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="form-field-5">Khách hàng</label>
                        <div class="controls">
                            <select id="CustomerID" class="span5" name="customerArray[]" style="width: 290px; " data-placeholder="Chọn khách hàng" multiple>
                                <option></option>
                                @foreach (var item in ViewBag.listCustomer)
                                {
                                    <option value="@item.CustomerID">@item.CustomerName</option>
                                }
                            </select>
                            @*<input class="span6" type="text" id="CustomerID" name="CustomerID" value="#=CustomerID#" placeholder="Nhập khách hàng" />*@
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="form-field-6">Ghi chú</label>
                        <div class="controls">
                            @*<textarea id="Note" name="Note" value="#=Note#" class="autosize-transition span12" style="overflow: hidden; word-wrap: break-word; height: 50px;"></textarea>*@
                            <input class="span8" type="text" id="Note" name="Note" placeholder="Ghi chú" />
                        </div>
                    </div>
                </div>

            </fieldset>
        </div>
    </form>
    <div class="form-footer-custom">
        <div class="pull-right" style="padding-right:15px">
            <button type="button" class="btn btn-info btn-small " onclick="btnSubmit()">
                <i class="icon-ok"></i>Lưu
            </button>
            <button type="button" id="pp-close" class="btn btn-default btn-small" onclick="">
                @*<i class="icon-undo"></i>*@  Hủy
            </button>

        </div>
    </div>
</div>

<script>
    function onCloseForm() {
        $('#popup-confirm').data('kendoWindow').close();
    }

    $(document).ready(function () {
        $("#listCustomerFilter ,#CustomerID").chosen();
        $('#CustomerID_chosen').css('width', '290px');

        $('#popup').kendoWindow({
            width: "550",
            actions: ["Close"],
            visible: false,
            resizable: false,
            close: function (e) {
                // $("#divMaskPopup").hide();
            }
        });
      
    });
   
    //popup
    function onOpenPopup(key, obj) {
        eventHotKey = true;
        //idPopup = ".k-window";
        //$("#divMaskPopup").show();
        var popup = $('#popup').data("kendoWindow");
        popup.center().open();
        //$(".k-window span.k-i-close").click(function () {
        //eventHotKey = false;
        //$("#divMaskPopup").hide();
        //});
        if (key == 0) {     // Create
            keyAction = key;
            popup.title('Thêm');
            $("#formPopup")[0].reset();
            $("#CustomerID option:selected").removeAttr("selected").trigger('chosen:updated');
        }
        else {// Update
            keyAction = -1;
            popup.title('Chỉnh sửa');
            //var id = $(obj).data('id');
            var currentRow = $(obj).closest("tr");
            var dataItem = $("#Grid").data("kendoGrid").dataItem(currentRow);
            onBindDataToForm(dataItem);
            $.post(r + "/CustomerPresenter/GetDetailCustomerByID", { Id: dataItem.Id }, function (data) {
                if (data.success) {
                    $.each(data.data, function (key, value) {
                        $("#CustomerID [value=" + value.CustomerID + "]").attr('selected', '');
                    });
                    $('#CustomerID').trigger('chosen:updated');
                    setTimeout(function () {
                    }, 500);
                }
                else { }
            });
        }
    }
    function resizeGrid() {
        var offsetbottom = parseInt($(window).height()) - parseInt($('#Grid').offset().top);
        var gridElement = $("#Grid");
        dataArea = gridElement.find(".k-grid-content"),
        otherElements = gridElement.children().not(".k-grid-content"),
        otherElementsHeight = 0;
        otherElements.each(function () {
            otherElementsHeight += $(this).outerHeight();
        });
        dataArea.height(offsetbottom - otherElementsHeight - 10);
    }
    function dataBound(e) {
        resizeGrid();
        var grid = this;
        var requestObject = (new kendo.data.transports["aspnetmvc-server"]({ prefix: "" }))
           .options.parameterMap({
               page: grid.dataSource.page(),
               sort: grid.dataSource.sort(),
               filter: grid.dataSource.filter()
           });
        formatHTMLPhone();
        //var $exportLink = grid.element.find('.exportClass');
        //var href = $exportLink.attr('href');
        //href = href.replace(/sort=([^&]*)/, 'sort=' + requestObject.sort || '~');
        //href = href.replace(/filter=([^&]*)/, 'filter=' + (requestObject.filter || '~'));
        //$exportLink.attr('href', href);
    }
   
    function formatHTMLPhone() {
        var data = $("#Grid").data("kendoGrid").dataSource.data();
        $.each(data, function (i, row) {
            try {
                var listdataPhone = jQuery.parseJSON(row.Phone);
                if (typeof listdataPhone == 'object') {
                    // It is JSON
                    var listPhone = '';
                    $.each(listdataPhone, function (index, value) {
                        listPhone += '<span> ' + value + ' </span> - ';
                    })

                    $('tr[data-uid="' + row.uid + '"] td').find('span.mobile-format').html(listPhone.substring(0, listPhone.length - 2));
                }
            } catch (e) {
                // It not JSON
                $('tr[data-uid="' + row.uid + '"] td').find('span.mobile-format').html(row.Phone);
            }
        })

    }
    function checkAll(e) {
        var x = $(e).prop('checked');
        $('#Grid').find(".checkrowid").each(function () {
            $(this).prop('checked', x);
        });
    }

    $("#pp-close").bind("click", function () {
        $('#popup').data("kendoWindow").close();
    });
    function filter() {
        grid = $("#Grid").data("kendoGrid");
        var filter = { logic: "and", filters: [] };
        var filterInfor = { logic: "or", filters: [] };
        var valueSearch = $("#listCustomerFilter").val();

        var searchInfor = $("#txtInfoFilter").val().trim();
        if (searchInfor) {
            filterInfor.filters.push({ field: "MiddleName", operator: "contains", value: searchInfor });
            filterInfor.filters.push({ field: "FirstName", operator: "contains", value: searchInfor });
            filterInfor.filters.push({ field: "LastName", operator: "contains", value: searchInfor });
            filterInfor.filters.push({ field: "Company", operator: "contains", value: searchInfor });
            filterInfor.filters.push({ field: "Phone", operator: "contains", value: searchInfor });
            filterInfor.filters.push({ field: "Email", operator: "contains", value: searchInfor });
            filterInfor.filters.push({ field: "Position", operator: "contains", value: searchInfor });
            filter.filters.push(filterInfor);
        }
        if (valueSearch) {
            filter.filters.push({ field: "CustomerID", operator: "contains", value: valueSearch });
        }
        grid.dataSource.filter(filter);
    }
    $('#txtInfoFilter').bind('keypress', function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            filter();
        }
    });
    
</script>