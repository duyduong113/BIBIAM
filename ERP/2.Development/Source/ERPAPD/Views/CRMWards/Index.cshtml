@model IEnumerable<ERPAPD.Models.DC_Location_Wards>
@{
    //ViewBag.Title = Resources.Multi.ListOfDistrict;
    ViewBag.Title = "Danh sách Phường/Xã";
    bool AllowCreate = (ViewData["AllowCreate"] != null && (bool)ViewData["AllowCreate"]);
    bool AllowUpdate = (ViewData["AllowUpdate"] != null && (bool)ViewData["AllowUpdate"]);
    bool AllowDelete = (ViewData["AllowDelete"] != null && (bool)ViewData["AllowDelete"]);
    bool AllowExport = (ViewData["AllowExport"] != null && (bool)ViewData["AllowExport"]);
}
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">
<div class="row-fluid">
    <div class="span12">
        <div class="widget-box">
            <div class="row-fluid">
                <input type="text" id="WardsInfo" placeholder="Phường/Xã" style="width: 250px;" />
                <select name="select" id="listDistrictFilter" class='chosen-select span2' style="width:250px;" multiple data-placeholder="Quận/Huyện">
                    <option></option>
                    <option value="">All</option>
                    @foreach (var item in ViewBag.listDistrict)
                    {
                        <option value="@item.DistrictID">@item.DistrictName</option>
                    }
                </select>
                <select name="select" id="listCityFilter" class='chosen-select span2' style="width:250px;" multiple data-placeholder="Tỉnh thành...">
                    <option></option>
                    <option value="">All</option>
                    @foreach (var item in ViewBag.listCity)
                    {
                        <option value="@item.CityID">@item.CityName</option>
                    }
                </select>

                <select name="select" id="listRegionFilter" class="span2" data-placeholder="Vùng miền">
                    <option></option>
                    <option value="">All</option>
                    @foreach (var item in ViewBag.listRegion)
                    {
                        <option value="@item.RegionID">@item.RegionName</option>
                    }
                </select>

                <select name="select" id="listCountryFilter" class='chosen-select span2' style="width:250px;" multiple data-placeholder="Quốc gia..">
                    <option></option>
                    <option value="">All</option>
                    @foreach (var item in ViewBag.listCountry)
                    {
                        <option value="@item.CountryID">@item.CountryName</option>
                    }
                </select>
                <button type="button" id="btnSearch" class="btn btn-primary btn-small" style="float:none;" onclick="filter()">Tìm kiếm</button>
            </div>

            @*<div class="widget-header widget-header-blue widget-header-flat">
                    <p style="font-size:14px"> Tìm kiếm</p>
                    <span class="widget-toolbar">
                        <a href="#" data-action="collapse">
                            <i class="icon-chevron-up"></i>
                        </a>
                    </span>
                </div>
                <div class="widget-body">
                    <div class="widget-main">
                        <div class="row-fluid">
                            <input type="text" id="WardsInfo" placeholder="Phường/Xã" style="width: 250px;" />
                            <select name="select" id="listDistrictFilter" class='chosen-select span2' style="width:250px;" multiple data-placeholder="Quận/Huyện">
                                <option></option>
                                <option value="">All</option>
                                @foreach (var item in ViewBag.listDistrict)
                                {
                                    <option value="@item.DistrictID">@item.DistrictName</option>
                                }
                            </select>
                            <select name="select" id="listCityFilter" class='chosen-select span2' style="width:250px;" multiple data-placeholder="Tỉnh thành...">
                                <option></option>
                                <option value="">All</option>
                                @foreach (var item in ViewBag.listCity)
                                {
                                    <option value="@item.CityID">@item.CityName</option>
                                }
                            </select>
                            <select name="select" id="listRegionFilter" class='chosen-select span2' style="width:250px;" multiple data-placeholder="Vùng......">
                                <option></option>
                                <option value="">All</option>
                                @foreach (var item in ViewBag.listRegion)
                                {
                                    <option value="@item.RegionID">@item.RegionName</option>
                                }
                            </select>
                            <select name="select" id="listCountryFilter" class='chosen-select span2' style="width:250px;" multiple data-placeholder="Quốc gia..">
                                <option></option>
                                <option value="">All</option>
                                @foreach (var item in ViewBag.listCountry)
                                {
                                    <option value="@item.CountryID">@item.CountryName</option>
                                }
                            </select>
                            <button type="button" id="btnSearch" class="btn btn-primary btn-small" style="float:none;" onclick="filter()">Tìm kiếm</button>
                        </div>
                    </div>
                </div>*@
        </div>
    </div>
</div>
<div class="row-fluid">
    <div class="span12">
        @* </ Hiện thị thông tin> *@
        @(Html.Kendo()
        .Grid(Model)
        .Name("Grid")
                //.HtmlAttributes(new { style = "height: auto;" })
        .Columns(columns =>
        {
            columns.Bound(p => p.WardsID).HeaderTemplate("<input style='text-align:center;opaDistrict:1;' type='checkbox' id= 'checkboxcheckAll'  onClick='checkAll(this)' />").ClientTemplate("<input style='text-align:center' class='checkrowid' type='checkbox' id='#=WardsID#'  />").Width(25).Filterable(false).Sortable(false);
            columns.Bound(p => p.WardsName).Width(140).Title("Phường/Xã").HtmlAttributes(new { style = "background-color:rgb(223, 240, 216);color:rgb(70, 136, 71);" }); ;
            columns.ForeignKey(p => p.DistrictID, (System.Collections.IEnumerable)ViewBag.listDistrict, "DistrictID", "DistrictName").Title("Quận/Huyện").Width(140).Width(140).HtmlAttributes(new { style = "background-color:rgb(223, 240, 216);color:rgb(70, 136, 71);" });
            columns.ForeignKey(p => p.CityID, (System.Collections.IEnumerable)ViewBag.listCity, "CityID", "CityName").Title("Tỉnh thành").Width(140);
            columns.ForeignKey(p => p.RegionID, (System.Collections.IEnumerable)ViewBag.listRegion, "RegionID", "RegionName").Title("Vùng").Width(140);
            columns.ForeignKey(p => p.CountryID, (System.Collections.IEnumerable)ViewBag.listCountry, "CountryID", "CountryName").Title("Quốc gia");
            columns.Bound(p => p.Active).Width(100).HtmlAttributes(new { style = "background-color:\\#dff0d8;color:\\#468847" }).Title("Hoạt động");
            columns.Bound(p => p.RowCreatedUser).Width(100).Title(Resources.Multi.CreatedBy).HeaderHtmlAttributes(new { style = "overflow: visible; white-space: normal;vertical-align: top" });
            columns.Bound(p => p.RowCreatedTime).Width(100).Format("{0:" + Resources.Multi.DateFormat + "}").Title(Resources.Multi.CreatedAt).ClientTemplate("#=ConvertTimeZone(RowCreatedTime," + Constants.TIME_ZONE + ")#");
            columns.Bound(p => p.RowLastUpdatedUser).Width(100).Title(Resources.Multi.UpdatedBy).HeaderHtmlAttributes(new { style = "overflow: visible; white-space: normal;vertical-align: top" });
            columns.Bound(p => p.RowLastUpdatedTime).Format("{0:" + Resources.Multi.DateFormat + "}").Width(100).Title(Resources.Multi.UpdatedAt).ClientTemplate("#if(kendo.toString(RowLastUpdatedTime,'dd/MM/yyyy') != '01/01/1900'){#" + "#= ConvertTimeZone(RowLastUpdatedTime," + Constants.TIME_ZONE + ") #" + "#}#").HeaderHtmlAttributes(new { style = "overflow: visible; white-space: normal;vertical-align: top" });
        })
        .ToolBar(toolbar =>
        {
            toolbar.Template(@<text>
                <div class="pull-left">
                    @if (AllowCreate)
                    {
                        <a class="btn btn-small btn-success" href="javascript:void(0)" id="btnGridAdd">
                            @*<i class="icon-plus"></i>*@ @Resources.Multi.Add
                        </a>
                    }
                    @if (AllowUpdate)
                    {
                        <a class="btn btn-primary btn-small " href="javascript:void(0)" id="btnGridSave">
                            @*<i class="icon-ok"></i>*@ @Resources.Multi.GridSave
                        </a>
                        <a class="btn btn-default btn-small " href="javascript:void(0)" id="btnGridCancel">
                            @*<i class="icon-remove"></i>*@ @Resources.Multi.GridCancel
                        </a>
                    }
                    <div class="btn-group" style="margin-left: 20px">
                        <button data-toggle="dropdown" class="btn btn-small btn-inverse dropdown-toggle">
                            Thao tác khác
                            <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu" style="min-width:110px !important">
                            <li>
                                @if (AllowDelete)
                                {
                                    <a class="btn btn-small btn-danger" href="javascript:void(0)" id="btnGridDelete" onclick="showConfirmPopup(1)">
                                        @*<i class=" icon-trash">   </i>*@@Resources.Multi.GridDelete
                                    </a>
                                }
                            </li>
                            @*<li>
                                    @if (AllowExport)
                                    {
                                        <a class="btn btn-small btn-info exportClass" href="@Url.Content("~/RegionDefinition/ExportExcel")" id="btnGridExport">
                                            <i class="fa fa-file-excel-o fa-1"></i> @Resources.Multi.GridExport
                                        </a>
                                    }
                                </li>
                                <li>
                                    <a class="btn btn-small btn-purple" style="text-align:left" href="javascript:void(0)" id="importOther">
                                        <i class="fa fa-file-excel-o fa-1"></i> @Resources.Multi.GridImport
                                    </a>
                                </li>*@
                        </ul>
                    </div>


                </div>
            </text>);
            @*toolbar.Create().Text("Thêm mới").HtmlAttributes(new { @style = "display:" + (AllowCreate ? "inline-block" : "none") });
                toolbar.Save().CancelText("Bỏ qua").SaveText("Lưu lại").HtmlAttributes(new { @style = "display:" + (AllowUpdate ? "inline-block" : "none") });
                toolbar.Custom()
                        .Text("Xóa bỏ")
                        .HtmlAttributes(new { @id = "btnDeleteLibrary", @class = "btn btn-danger", @style = "display:" + (AllowDelete ? "inline-block" : "none"), @Href = "javascript:Delete()" });*@

            //toolbar.Custom()
            //        .Text(Resources.Multi.Export)
            //       .HtmlAttributes(new { @class = "exportClass btn btn-info", @style = "margin-left:5px" })
            //        .Url(Url.Action("ExportExcel", "District", new { filter = "~", sort = "~", DistrictID = "~" }));
            //toolbar.Custom()
            //   .Text(Resources.Multi.Import)
            //    .HtmlAttributes(new { id = "importOther", @class = "btn btn-purple", Href = "javascript:void(0)" });

        })
                                        .Pageable(pager => pager.PageSizes(new[] { 50, 100, 200, 300 }))
                                        .Navigatable()
                                        .Editable(editable => editable.Mode(GridEditMode.InCell))
                                        .Scrollable(scrollable => scrollable.Virtual(false))
                                        .Sortable()
                //.Selectable(selectable => selectable.Mode(GridSelectionMode.Single).Type(GridSelectionType.Row))
                                        .Resizable(resize => resize.Columns(true))
                                        .DataSource(dataSource => dataSource
                                        .Ajax()
                                        .Batch(true)
                                        .PageSize(50)
                                        .Events(events => { events.Error("error_handler"); events.RequestEnd("onRequestEnd"); })
                                            .Model(model =>
                                            {
                                                model.Id(p => p.WardsID);
                                                model.Field(p => p.WardsID).Editable(false);
                                                model.Field(p => p.CityID).Editable(false);
                                                model.Field(p => p.RegionID).Editable(false);
                                                model.Field(p => p.CountryID).Editable(false);
                                                model.Field(p => p.RowCreatedTime).Editable(false);
                                                model.Field(p => p.RowCreatedUser).Editable(false);
                                                model.Field(p => p.RowLastUpdatedTime).Editable(false);
                                                model.Field(p => p.RowLastUpdatedUser).Editable(false);
                                                model.Field(p => p.Active).DefaultValue(true);
                                                //model.Field(p => p.CountryName).Editable(false);
                                                //model.Field(p => p.AliasName).Editable(false);
                                                //model.Field(p => p.RegionName).Editable(false);
                                            })
                                            .Events(events => { events.Error("error_handler"); events.RequestEnd("onRequestEnd"); })
                                            .Read("Wards_Read", "CRMWards")
                                            .Create("Wards_Create", "CRMWards")
                                            .Update("Wards_Update", "CRMWards")
                                            )
        )
    </div>
</div>
@Html.Partial("_popup")

@(Html.Kendo()
      .Window()
      .Name("windowimport")
      .Title("ImportForm")
      .Content(@<text>
        <div class="row-fluid">
            <div class="span7">
                <form id="importform" action="@Url.Content("~/District/ImportFromExcel")" method="post" class="form-horizontal" enctype="multipart/form-data" style="margin-bottom:0px;">
                    <input type="file" id="FileUpload" name="FileUpload" />
                </form>
            </div>
            <button type="button" id="btnImport" class="btn btn-purple btn-small span2" style="float: right;">Import</button>
        </div>
        <div class="row-fluid">
            <a id="btndownload" style="display: none" class="btn btn-warning btn-small">@Resources.Multi.DownloadTemplateError</a>
        </div>
    </text>)
      .Draggable()
      .Resizable()
      .Visible(false)
      .Width(1000)
      .Actions(actions => actions.Close())

)
<script>
    $(document).ready(function () {
        resizeGrid();
        //$("#listRegion").chosen();
        $("#listDistrictFilter").chosen();
        $("#listCityFilter").chosen();
        $("#listRegionFilter").chosen();
        $("#listCountryFilter").chosen();
    });
    function dataBound(e) {

        resizeGrid();
        var grid = this;
        var requestObject = (new kendo.data.transports["aspnetmvc-server"]({ prefix: "" }))
       .options.parameterMap({
           page: grid.dataSource.page(),
           sort: grid.dataSource.sort(),
           filter: grid.dataSource.filter()
       });
        //var $exportLink = grid.element.find('.exportClass');
        //var href = $exportLink.attr('href');
        //href = href.replace(/sort=([^&]*)/, 'sort=' + requestObject.sort || '~');
        //href = href.replace(/filter=([^&]*)/, 'filter=' + (requestObject.filter || '~'));
        //$exportLink.attr('href', href);
    }
    function error_handler(e) {
        if (e.errors) {
            var message = "Lỗi :\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                    //$("#Grid").data("kendoGrid").dataSource.read();
                }
            });
            $.gritter.add({
                // (string | mandatory) the heading of the notification
                title: '',
                // (string | mandatory) the text inside the notification
                text: message,
                class_name: 'gritter-error'
            });
        }
    }
    function onRequestEnd(e) {

        if (e.type == "update" && !e.response.Errors) {
            $.gritter.add({
                // (string | mandatory) the heading of the notification
                title: '',
                // (string | mandatory) the text inside the notification
                text: 'Cập nhật dữ liệu thành công',
                class_name: 'gritter-success'
            });
            $("#Grid").data("kendoGrid").dataSource.read();
        }
        if (e.type == "create" && !e.response.Errors) {
            $.gritter.add({
                // (string | mandatory) the heading of the notification
                title: '',
                // (string | mandatory) the text inside the notification
                text: 'Thêm mới dữ liệu thành công',
                class_name: 'gritter-success'
            });
            $("#Grid").data("kendoGrid").dataSource.read();
        }
    }
    function resizeGrid() {
        var offsetbottom = parseInt($(window).height()) - parseInt($('#Grid').offset().top);
        var gridElement = $("#Grid");
        dataArea = gridElement.find(".k-grid-content"),
        otherElements = gridElement.children().not(".k-grid-content"),
        otherElementsHeight = 0;
        otherElements.each(function () {
            otherElementsHeight += $(this).outerHeight();
        });
        dataArea.height(offsetbottom - otherElementsHeight - 30);
    }
    $('.icon-chevron-up').bind('click', function () {
        setInterval(function () {
            resizeGrid();
        }, 500)
    });

    function checkAll(e) {
        var x = $(e).prop('checked');
        $('#Grid').find(".checkrowid").each(function () {
            $(this).prop('checked', x);
        });
    }

    function filter() {

        var grid = $("#Grid").data("kendoGrid");
        var filter = { logic: "and", filters: [] };
        var filterWardsInfo = { logic: "or", filters: [] };
        var filterDistrict = { logic: "or", filters: [] };
        var filterCity = { logic: "or", filters: [] };
        var filterRegion = { logic: "or", filters: [] };
        var filterCountry = { logic: "or", filters: [] };

        var listDistrict = $("#listDistrictFilter option:selected");
        var listCity = $("#listCityFilter option:selected");
        var listRegion = $("#listRegionFilter option:selected");
        var listCountry = $("#listCountryFilter option:selected");

        var wardsInfor = $("#WardsInfo").val();
        if (wardsInfor) {
            for (var i = 0; i < wardsInfor.split(';').length; i++) {
                filterWardsInfo.filters.push({ field: "WardsName", operator: "contains", value: wardsInfor.split(';')[i] });
            }
            filter.filters.push(filterWardsInfo);
        }

        if (listDistrict.length > 0) {
            for (var i = 0; i < listDistrict.length; i++) {
                var option = listDistrict[i].value;
                filterDistrict.filters.push({ field: "DistrictID", operator: "contains", value: option });
            }
            filter.filters.push(filterDistrict);
        }
        if (listCity.length > 0) {
            for (var i = 0; i < listCity.length; i++) {
                var option = listCity[i].value;
                filterCity.filters.push({ field: "CityID", operator: "contains", value: option });
            }
            filter.filters.push(filterCity);
        }
        if (listRegion.length > 0) {
            for (var i = 0; i < listRegion.length; i++) {
                var option = listRegion[i].value;
                filterRegion.filters.push({ field: "RegionID", operator: "contains", value: option });
            }
            filter.filters.push(filterRegion);
        }
        if (listCountry.length > 0) {
            for (var i = 0; i < listCountry.length; i++) {
                var option = listCountry[i].value;
                filterCountry.filters.push({ field: "CountryID", operator: "contains", value: option });
            }
            filter.filters.push(filterCountry);
        }

        grid.dataSource.filter(filter);
    }
    $('#WardsInfo').bind('keypress', function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            filter();
        }
    });


    $('#btnGridAdd').click(function () {
        $("#Grid").data("kendoGrid").dataSource.insert();
    })

    $('#btnGridSave').bind('click', function () {
        console.log($('#Grid').data('kendoGrid').dataSource.hasChanges());
        if ($('#Grid').data('kendoGrid').dataSource.hasChanges() == true) {
            $('#Grid').data('kendoGrid').saveChanges();
        }
    })

    $('#btnGridCancel').bind('click', function () {
        $('#Grid').data('kendoGrid').cancelChanges();
    })
</script>
<style>
    .dropdown-menu > li > a {
        margin-bottom: 4px !important;
        text-align: left;
    }
</style>