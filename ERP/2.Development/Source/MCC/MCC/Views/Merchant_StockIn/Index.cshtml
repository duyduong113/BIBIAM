@using MCC.Models;
@using BIBIAM.Core.Entities;
@using BIBIAM.Core;
@{
    ViewBag.Title = "Phiếu Nhập Kho";
    bool all = ViewBag.accessDetail != null ? ViewBag.accessDetail.access["all"] : false;
    bool view = ViewBag.accessDetail != null ? ViewBag.accessDetail.access["view"] : false;
    bool update = ViewBag.accessDetail != null ? ViewBag.accessDetail.access["update"] : false;
    bool create = ViewBag.accessDetail != null ? ViewBag.accessDetail.access["create"] : false;
    bool delete = ViewBag.accessDetail != null ? ViewBag.accessDetail.access["delete"] : false;
    bool export = ViewBag.accessDetail != null ? ViewBag.accessDetail.access["export"] : false;
    bool isAdmin = ViewBag.isAdmin != null ? ViewBag.isAdmin : false;
    var listStatus = new List<Object>();
    listStatus.Add(new { Name = "Nháp", Value = AllConstant.trang_thai_duyet.NHAP});
    listStatus.Add(new { Name = Html.Raw(@Resources.Global._approve), Value = AllConstant.trang_thai_duyet.DA_DUYET });
}

<div class="portlet light bordered">
    <div class="portlet-title">
        <div class="caption">
            <span class="caption-subject bold uppercase">Phiếu Nhập Kho</span>
        </div>
        <div class="row">
            <div class="col-md-2">
                <div class="form-group">
                    <input type="text" class="form-control input-sm max100" id="txtSearch" onkeyup="filter()" name="filterText" placeholder="@Html.Raw(Resources.Global._search)...">
                </div>
            </div>
            <div class="col-md-2">
                <button type="button" class="btn btn-primary btn-sm btn-circle" onclick='filter()'>@Html.Raw(Resources.Global._vin_search)</button>
            </div>
        </div>
    </div>
    <div class="portlet-body">
        @(Html.Kendo().Grid<Merchant_StockInHeader>()
        .Name("Grid")
        .Columns(columns =>
        {
            columns.Bound(p => p.id).Hidden();
            columns.Bound(p => p.ma_phieu_nhap_kho).ClientTemplate("<a href=" + Url.Action("Detail", "Merchant_StockIn", new { @ma_phieu_nhap_kho = "#=ma_phieu_nhap_kho#" })
                        + ">#=ma_phieu_nhap_kho#</a>").Title("Phiếu nhập kho").Width(100);
            columns.Bound(p => p.ma_don_hang).Title("Mã đơn hàng").Width(100);
            columns.Bound(p => p.nguoi_giao).Title("Tên người giao").Width(100);
            columns.Bound(p => p.ngay_nhap_kho).Title("Ngày nhập kho").Format("{0:dd/MM/yyyy HH:mm}").Width(100);
            columns.ForeignKey(p => p.trang_thai, (System.Collections.IEnumerable)listStatus, "Value", "Name").Title(@Resources.Global._status).Width(120).EditorTemplateName("GridNullableForeignKey");
            columns.Bound(p => p.ngay_tao).Width(110).Title(@Resources.Global._date_created).Format("{0:dd/MM/yyyy HH:mm}").HtmlAttributes(new { style = "text-align:right" });
            columns.Bound(p => p.nguoi_tao).Width(100).Title(@Resources.Global._created_by);
            columns.Bound(p => p.ngay_cap_nhat).Title(@Resources.Global._date_update).Width(110).Format("{0:dd/MM/yyyy HH:mm}").HtmlAttributes(new { style = "text-align:right" });
            columns.Bound(p => p.nguoi_cap_nhat).Title(@Resources.Global._updated_by).Width(100);
        })
        .Pageable()
        .Navigatable()
        .Scrollable()
        .Sortable()
        .ToolBar(toolbar =>
        {
        toolbar.Template(@<text>
            <div class="pull-left">
                <a class="btn btn-success btn-small" href="@Url.Action("Create", "Merchant_StockIn")"  id="">
                    @Resources.Global._create
                </a>
            </div>
        </text>);
        })
        .Editable(editable => editable.Mode(GridEditMode.InCell))
        .Pageable(x => x.PageSizes(new int[] { 100, 200, 300, 500 }))
        .Events(events => { events.DataBound("dataBound"); })
        .Reorderable(reorderable => reorderable.Columns(true))
        .Resizable(resizable => resizable.Columns(true))
        .DataSource(dataSource => dataSource
        .Ajax()
        .Batch(true)
        .PageSize(100)
        .Events(events => { events.Error("error_handler"); events.RequestEnd("onRequestEnd"); })
        .Model(model =>
        {
            model.Id(p => p.id);
            model.Field(p => p.ma_phieu_nhap_kho).Editable(false);
            model.Field(p => p.ma_don_hang).Editable(false);
            model.Field(p => p.nguoi_giao).Editable(false);
            model.Field(p => p.ngay_nhap_kho).Editable(false);
            model.Field(p => p.ngay_tao).Editable(false);
            model.Field(p => p.nguoi_tao).Editable(false);
            model.Field(p => p.ngay_cap_nhat).Editable(false);
            model.Field(p => p.nguoi_cap_nhat).Editable(false);
        })
        .Read(c => c.Action("ReadHeader", "Merchant_StockIn"))
        )
        )
    </div>
</div>


<script>
    $(document).ready(function () {
        filter();
    });

    function error_handler(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br>";
                    });
                }
            });

            toastr.error(message)
        }
    }

    function resizeGrid(gridname) {
        var offsetbottom = parseInt($(window).height()) - parseInt($('#' + gridname).offset().top);
        $("#" + gridname).find(".k-grid-content, .k-grid-content-locked").height(offsetbottom - 105);
    }

    function dataBound(e) {
        resizeGrid('Grid');
    }

    function onRequestEnd(e) {
        if ((e.type == "create") && !e.response.Errors) {
            toastr.success('', '@Resources.Global._save_successfully')
            filter();
        }
        else
            if ((e.type == "update") && !e.response.Errors) {
                toastr.success('', '@Resources.Global._update_successfully')
                filter();
            }

    }

    function filter() {
        grid = $("#Grid").data("kendoGrid");
        var filter = { logic: "and", filters: [] };
        var filterDesc = { logic: "or", filters: [] };

        var txtSearch = $("#txtSearch").val();
        if (txtSearch) {
            filterDesc.filters.push({ field: "ma_phieu_nhap_kho", operator: "contains", value: txtSearch });
            filterDesc.filters.push({ field: "ma_don_hang", operator: "contains", value: txtSearch });
            filter.filters.push(filterDesc);
        }

        grid.dataSource.filter(filter);
    }
</script>