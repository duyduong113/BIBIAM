@{
    ViewBag.Title = "Catalogue";
}
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">
<style>
    .image_info {
        border: 1px solid rgba(0, 0, 0, .1);
        float: left;
        width: 204px;
        height: 204px;
        margin: 0;
        padding: 5px;
        cursor: pointer;
    }

        .image_info img {
            float: left;
            width: 204px;
            height: 204px;
        }

    .demo-section .k-listview:after {
        content: ".";
        display: block;
        height: 0;
        clear: both;
        visibility: hidden;
    }

    .product {
        float: left;
        position: relative;
        margin: 0 10px 10px 0;
        padding: 0;
    }

        .product img {
            width: 110px;
            height: 110px;
        }

    .wrapper:after {
        content: ".";
        display: block;
        height: 0;
        clear: both;
        visibility: hidden;
    }

    .k-window-titlebar {
        background-color: #2283c5;
        color: white;
        font-weight: bold;
    }
</style>

<div class="row-fluid span11">
    <div class="span12">
    </div>
    <div class="portlet light bordered span12">
        <div class="portlet-title">
            <div class="col-md-3">
                <div class="form-group">
                    @(Html.Kendo().DropDownList()
                                      .Name("ListMerchant")
                                      .HtmlAttributes(new { style = "width:100%" })
                                      .OptionLabel(Html.Raw(Resources.Global._merchant) + "...")
                                      .DataTextField("name")
                                      .DataValueField("id")
                                      .Events(e => e.Change("changeMerchant"))
                                      .Filter("contains")
                                      .DataSource(source =>
                                      {
                                          source.Read(read =>
                                          {
                                              read.Action("GetMerchantInfo", "CustomData");
                                          }).ServerFiltering(true);
                                      })

                    )
                </div>
            </div>
            <span id="AddCatalog" class="k-button hide-on-narrow">Thêm Catalog</span>
            <a class="btn btn-danger btn-small" href="javascript:void(0)" onclick="removeCatalog()" id="btnGridDelete">
                Xóa
            </a>
            <div class="inputs">
                <div class="portlet-input input-inline input-small">
                    <div class="input-icon right">
                        <i class="icon-magnifier"></i>
                        <input type="text" class="form-control form-control-solid input-circle" onkeyup="Search(this)" placeholder="@Html.Raw(Resources.Global._search)...">
                    </div>
                </div>            
            </div>
        </div>
        <div class="row-fluid">
            @(Html.Kendo().Grid<BIBIAM.Core.Entities.Merchant_Catalog>()
            .Name("Grid")
            .Columns(columns =>
            {
            columns.Template(@<text></text>)
            .HeaderTemplate("<input style='text-align:center;opacity:1;' type='checkbox' id='checkboxcheckAll' onClick='checkAll(this)' />")
            .ClientTemplate("<input style='text-align:center' class='checkrowid' type='checkbox' id='#=id#' /> ").Width(40).Locked(true);
                columns.Bound(p => p.ma_catalog).Title("Mã Catalog").Width(150).HtmlAttributes(new { @class = "editable" }).Locked(true);
                columns.Bound(p => p.ten_catalog).Title("Tên Catalog").Width(200).HtmlAttributes(new { @class = "editable" }).Locked(true);
                columns.Bound(p => p.duong_dan_day_du).Title("Url link").Width(300).ClientTemplate("<a href='#=duong_dan_day_du#'>Vào đây</a>").HtmlAttributes(new { @class = "editable" });
                columns.Bound(p => p.dung_luong).Title("Dung lượng").Width(200).HeaderHtmlAttributes(new { @class = "editable" });
                columns.Bound(p => p.ngay_tao).Width(110).Title(@Resources.Global._date_created).Format("{0:dd/MM/yyyy HH:mm}").HtmlAttributes(new { style = "text-align:right" });
                columns.Bound(p => p.nguoi_tao).Width(100).Title(@Resources.Global._created_by);
                columns.Bound(p => p.ngay_cap_nhat).Title(@Resources.Global._date_update).Width(110).Format("{0:dd/MM/yyyy HH:mm}").HtmlAttributes(new { style = "text-align:right" });
                columns.Bound(p => p.nguoi_cap_nhat).Title("Người cập nhật").Width(100);
            })
            .HtmlAttributes(new { @style = "height:500px" })
            .Pageable()
            .Navigatable()
            .Scrollable()
            .Sortable()
            .Editable(editable => editable.Mode(GridEditMode.InCell))
            .Pageable(x => x.PageSizes(new int[] { 100, 200, 300, 500 }))
            //.Events(events => { events.DataBound("dataBound"); })
            .Reorderable(reorderable => reorderable.Columns(true))
            .Resizable(resizable => resizable.Columns(true))
            .DataSource(dataSource => dataSource
            .Ajax()
            .Read(read => read.Action("Read", "Merchant_Catalog").Data("onAdditionalData"))
            .Batch(true)
            .PageSize(100)
            .Events(events => { events.Error("error_handler"); })
            .Model(model =>
            {
                model.Id(p => p.id);
                model.Field(p => p.ma_catalog).Editable(false);
                model.Field(p => p.ngay_tao).Editable(false);
                model.Field(p => p.nguoi_tao).Editable(false);
                model.Field(p => p.ngay_cap_nhat).Editable(false);
                model.Field(p => p.nguoi_cap_nhat).Editable(false);
            })
            )
            )
        </div>
    </div>
    <div>
        @(Html.Kendo().Window()
        .Name("window_add_catalog")
        .Title("Thêm Catalog")
        .Visible(false)
        .Modal(true)
        .Draggable(true)
        .Width(800)
        .Height(400)
        .Content(@<text>
                        @(Html.Kendo().Upload()
                .Name("files")
                .Async(a => a
                    .Save("Save", "Merchant_Catalog")
                    .Remove("Remove", "Upload")
                    .AutoUpload(false)
                )
                .HtmlAttributes(new { })
                .Events(e => e.Select("onSelect").Success("onSuccess").Remove("onRemove"))
                .ShowFileList(true)
                        )
        </text>)
       // .Actions(actions => actions.Pin().Minimize().Maximize().Close())
       // .Events(ev => ev.Close("onClose"))
        )
    </div>
</div>
<script>
    $("#AddCatalog").bind("click", function () {
        var wnd = $("#window_add_catalog").data("kendoWindow");
        wnd.center().open();
    });
    function Search(e) {
        grid = $("#Grid").data("kendoGrid");
        var filter = { logic: "and", filters: [] };

        var SearchText = $(e).val();
        if (SearchText) {
            filter.filters.push({ field: "ten_catalog", operator: "contains", value: SearchText });
        }
        grid.dataSource.filter(filter);
    }
    function onAdditionalData() {
        return {
            ma_gian_hang: $("#ListMerchant").val()
        }
    }
    function checkAll(e) {
        var x = $(e).prop('checked');
        $('#Grid').find(".checkrowid").each(function () {
            $(this).prop('checked', x);
        });
    }
    function Getlistcheck() {
        var listrowid = '';
        $('#Grid').find(".checkrowid").each(function () {
            if ($(this).prop('checked') == true) {
                listrowid += $(this).attr("id") + ',';
                $(this).data();
            }
        });
        return listrowid;
    }
    function removeCatalog() {
        var data = Getlistcheck();
        bootbox.dialog({
            message: "@Resources.Global._are_your_sure", title: "Xóa Catalog!",
            buttons:
                {
                    danger: { label: "@Resources.Global._close", className: "btn default btn-circle btn-sm", callback: function () { } },
                    main: {
                        label: "@Resources.Global._confirm", className: "btn green btn-circle btn-sm", callback: function () {
                            App.blockUI({ boxed: !0, message: '@Resources.Global._just_amoment...' });
                            $.post(r + "/Merchant_Catalog/Delete", { data: data }, function (data) {
                                if (data.success) {
                                    toastr.clear();
                                    $("#Grid").data("kendoGrid").dataSource.read();
                                    toastr.success('', 'Xóa thành công');
                                } else {
                                    toastr.clear();
                                    toastr.error('', data.message);
                                }
                                App.unblockUI();
                            });
                        }
                    }
                }
        })
    }
    function changeMerchant() {
        $("#Grid").data("kendoGrid").dataSource.read();
    }
    function error_handler(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br>";
                    });
                }
            });
            toastr.error(message);
        }
    }
    function onSelect(e) {
        if (e.files.length + $(".k-upload-files.k-reset").find("li").length > 50) {
            e.preventDefault();
            toastr.error('', 'Số file catalog tối đa 1 lần up là 50!')
        }
    }

    function onSuccess(e) {
        $('.k-upload-files.k-reset').find('.k-file.k-file-success').remove();
        if (e.response.success == true) {
            flag = true;
            $("#window_add_catalog").data("kendoWindow").close();
            toastr.success('', e.response.message)
            $("#Grid").data("kendoGrid").dataSource.read();
            $("#ListMerchant").data("kendoDropDownList").dataSource.read();
        }
        else {
            toastr.error('', e.response.message);
        }
    }
    function onRemove(e) {
        var ele = document.getElementById(e.files[0].name.replace(/ |[. ]/g, "_"));
        if (ele != null)
            ele.remove();
    }
    //function onClose(e) {
    //    if (!flag && $(".k-upload-files.k-reset").find("li").length != 0) {
    //        e.preventDefault();
    //        showPopupCloseWindow(e);
    //    }
    //    flag = false;
    //}


</script>

